{"version":3,"file":"dill-pixel-storage-adapter-firebase.mjs","sources":["../src/index.ts"],"sourcesContent":["import { StorageAdapter, Logger, IApplication } from 'dill-pixel';\nimport { initializeApp } from 'firebase/app';\nimport type { FirebaseApp, FirebaseOptions } from 'firebase/app';\nimport { getFirestore, doc, setDoc, getDoc, getDocs, deleteDoc, addDoc, collection } from 'firebase/firestore';\nimport type { Firestore, DocumentData } from 'firebase/firestore';\n\nexport * from 'firebase/firestore';\n\nexport default class FirebaseAdapter extends StorageAdapter {\n  private _firebaseApp: FirebaseApp | null;\n  private _options: FirebaseOptions;\n  private _db: Firestore | null;\n\n  public initialize(_app: IApplication, options: FirebaseOptions): void {\n    Logger.log('FirebaseAdapter initialized');\n    this._options = options;\n\n    this._firebaseApp = initializeApp(this._options);\n    this._db = getFirestore(this._firebaseApp); // initialize Firestore and get a reference to the database\n  }\n\n  get firebaseApp(): FirebaseApp {\n    return this._firebaseApp as FirebaseApp;\n  }\n\n  get db() {\n    return this._db;\n  }\n\n  async save(collectionId: string, data: DocumentData): Promise<void> {\n    if (!this._db) {\n      throw new Error('Firestore has not been initialized. Call initialize() first.');\n    }\n\n    try {\n      const docRef = await addDoc(collection(this._db, collectionId), data);\n      console.log('Document written with ID: ', docRef.id);\n    } catch (e) {\n      console.error('Error adding document: ', e);\n    }\n  }\n\n  async loadAll(collectionId: string): Promise<any> {\n    if (!this._db) {\n      throw new Error('Firestore has not been initialized. Call initialize() first.');\n    }\n\n    const querySnapshot = await getDocs(collection(this._db, collectionId));\n\n    return querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        data: doc.data(),\n      };\n    });\n  }\n\n  async load(collectionId: string, id: string): Promise<any> {\n    if (!this._db) {\n      throw new Error('Firestore has not been initialized. Call initialize() first.');\n    }\n\n    const docRef = doc(this._db, collectionId, id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log('Document data:', docSnap.data());\n    } else {\n      console.log('No such document!');\n    }\n\n    return docSnap.data();\n  }\n\n  getCollection(collectionId: string) {\n    return collection(this._db, collectionId);\n  }\n\n  // async delete(collection: string, id: string): Promise<void> {\n  //   if (!this._db) {\n  //     throw new Error('Firestore has not been initialized. Call initialize() first.');\n  //   }\n\n  //   await deleteDoc(doc(this._db, collection, id));\n  //   console.log('Document successfully deleted!');\n  // }\n}\n"],"names":["FirebaseAdapter","StorageAdapter","_app","options","Logger","initializeApp","getFirestore","collectionId","data","docRef","addDoc","collection","e","getDocs","doc","id","docSnap","getDoc"],"mappings":";;;;AAQA,MAAqBA,UAAwBC,EAAe;AAAA,EAKnD,WAAWC,GAAoBC,GAAgC;AACpE,IAAAC,EAAO,IAAI,6BAA6B,GACxC,KAAK,WAAWD,GAEX,KAAA,eAAeE,EAAc,KAAK,QAAQ,GAC1C,KAAA,MAAMC,EAAa,KAAK,YAAY;AAAA,EAC3C;AAAA,EAEA,IAAI,cAA2B;AAC7B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,KAAK;AACP,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,KAAKC,GAAsBC,GAAmC;AAC9D,QAAA,CAAC,KAAK;AACF,YAAA,IAAI,MAAM,8DAA8D;AAG5E,QAAA;AACI,YAAAC,IAAS,MAAMC,EAAOC,EAAW,KAAK,KAAKJ,CAAY,GAAGC,CAAI;AAC5D,cAAA,IAAI,8BAA8BC,EAAO,EAAE;AAAA,aAC5CG,GAAG;AACF,cAAA,MAAM,2BAA2BA,CAAC;AAAA,IAC5C;AAAA,EACF;AAAA,EAEA,MAAM,QAAQL,GAAoC;AAC5C,QAAA,CAAC,KAAK;AACF,YAAA,IAAI,MAAM,8DAA8D;AAKhF,YAFsB,MAAMM,EAAQF,EAAW,KAAK,KAAKJ,CAAY,CAAC,GAEjD,KAAK,IAAI,CAACO,OACtB;AAAA,MACL,IAAIA,EAAI;AAAA,MACR,MAAMA,EAAI,KAAK;AAAA,IAAA,EAElB;AAAA,EACH;AAAA,EAEA,MAAM,KAAKP,GAAsBQ,GAA0B;AACrD,QAAA,CAAC,KAAK;AACF,YAAA,IAAI,MAAM,8DAA8D;AAGhF,UAAMN,IAASK,EAAI,KAAK,KAAKP,GAAcQ,CAAE,GACvCC,IAAU,MAAMC,EAAOR,CAAM;AAE/B,WAAAO,EAAQ,WACV,QAAQ,IAAI,kBAAkBA,EAAQ,KAAM,CAAA,IAE5C,QAAQ,IAAI,mBAAmB,GAG1BA,EAAQ;EACjB;AAAA,EAEA,cAAcT,GAAsB;AAC3B,WAAAI,EAAW,KAAK,KAAKJ,CAAY;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUF;"}