{
  "version": 3,
  "sources": ["../../node_modules/dill-pixel/src/utils/env.ts", "../../node_modules/dill-pixel/src/utils/string.ts", "../../node_modules/dill-pixel/src/utils/console/Logger.ts", "../../node_modules/dill-pixel/src/utils/promise/functions.ts", "../../node_modules/dill-pixel/src/utils/promise/Queue.ts", "../../node_modules/dill-pixel/src/utils/framework.ts", "../../node_modules/dill-pixel/src/utils/misc.ts", "../../node_modules/dill-pixel/src/utils/map.ts", "../../node_modules/dill-pixel/src/utils/math.ts", "../../node_modules/dill-pixel/src/utils/object.ts", "../../node_modules/dill-pixel/src/utils/point.ts", "../../node_modules/dill-pixel/src/utils/rect.ts", "../../node_modules/dill-pixel/src/utils/bind.ts", "../../node_modules/dill-pixel/src/utils/random.ts", "../../node_modules/dill-pixel/src/utils/array.ts", "../../node_modules/dill-pixel/src/utils/padding.ts", "../../node_modules/dill-pixel/src/utils/platform.ts", "../../node_modules/dill-pixel/src/utils/number.ts", "../../node_modules/dill-pixel/src/utils/text.ts", "../../node_modules/dill-pixel/src/utils/color.ts", "../../node_modules/dill-pixel/src/utils/pixi.ts", "../../node_modules/dill-pixel/src/utils/canvas.ts", "../../node_modules/dill-pixel/src/utils/set.ts", "../../node_modules/dill-pixel/src/core/config.ts", "../../node_modules/dill-pixel/src/version.ts", "../../node_modules/dill-pixel/src/hello.ts", "../../node_modules/dill-pixel/src/core/create.ts", "../../node_modules/dill-pixel/src/core/registries.ts", "../../node_modules/dill-pixel/src/store/Store.ts", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/Collector.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/CollectorArray.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/CollectorLast.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/CollectorUntil0.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/CollectorWhile0.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/SignalConnection.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/SignalLink.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/Signal.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/SignalConnections.js", "../../node_modules/.pnpm/typed-signals@2.5.0/node_modules/typed-signals/dist/index.js", "../../node_modules/dill-pixel/src/signals/Signal.ts", "../../node_modules/dill-pixel/src/plugins/Plugin.ts", "../../node_modules/dill-pixel/src/plugins/actions/ActionsPlugin.ts", "../../node_modules/dill-pixel/src/plugins/actions/constants.ts", "../../node_modules/dill-pixel/src/plugins/actions/methods.ts", "../../node_modules/dill-pixel/src/plugins/AssetsPlugin.ts", "../../node_modules/dill-pixel/src/plugins/audio/AudioChannel.ts", "../../node_modules/dill-pixel/src/plugins/audio/AudioInstance.ts", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/instance.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/webaudio/WebAudioUtils.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioContext.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioInstance.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioMedia.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/SoundSprite.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/utils/supported.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/webaudio/WebAudioInstance.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/Filterable.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/webaudio/WebAudioNodes.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/webaudio/WebAudioMedia.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/Sound.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/webaudio/WebAudioContext.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/SoundLibrary.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/soundAsset.mjs", "../../node_modules/.pnpm/@pixi+sound@6.0.1_pixi.js@8.6.6/node_modules/@pixi/sound/lib/index.mjs", "../../node_modules/dill-pixel/src/plugins/audio/AudioManagerPlugin.ts", "../../node_modules/dill-pixel/src/plugins/focus/FocusOutliner.ts", "../../node_modules/dill-pixel/src/plugins/focus/FocusManagerPlugin.ts", "../../node_modules/dill-pixel/src/plugins/i18nPlugin.ts", "../../node_modules/dill-pixel/src/plugins/input/constants.ts", "../../node_modules/dill-pixel/src/mixins/signals.ts", "../../node_modules/dill-pixel/src/mixins/animated.ts", "../../node_modules/dill-pixel/src/mixins/focus.ts", "../../node_modules/dill-pixel/src/mixins/interaction.ts", "../../node_modules/dill-pixel/src/mixins/factory/methods.ts", "../../node_modules/dill-pixel/src/display/Container.ts", "../../node_modules/dill-pixel/src/display/ParticleContainer.ts", "../../node_modules/dill-pixel/src/display/Scene.ts", "../../node_modules/dill-pixel/src/display/SceneTransition.ts", "../../node_modules/dill-pixel/src/display/Svg.ts", "../../node_modules/dill-pixel/src/display/AnimatedSprite.ts", "../../node_modules/dill-pixel/src/display/Camera.ts", "../../node_modules/dill-pixel/src/display/SpineAnimation.ts", "../../node_modules/dill-pixel/src/ui/Button.ts", "../../node_modules/dill-pixel/src/ui/FlexContainer.ts", "../../node_modules/dill-pixel/src/ui/UICanvas.ts", "../../node_modules/dill-pixel/src/ui/Popup.ts", "../../node_modules/dill-pixel/src/ui/Input.ts", "../../node_modules/dill-pixel/src/ui/Joystick.ts", "../../node_modules/dill-pixel/src/mixins/factory/props.ts", "../../node_modules/dill-pixel/src/mixins/factory/utils.ts", "../../node_modules/dill-pixel/src/mixins/factory/const.ts", "../../node_modules/dill-pixel/src/mixins/factory/Factory.ts", "../../node_modules/dill-pixel/src/plugins/KeyboardPlugin.ts", "../../node_modules/dill-pixel/src/plugins/input/AbstractControls.ts", "../../node_modules/dill-pixel/src/plugins/input/keyboard/KeyboardContols.ts", "../../node_modules/dill-pixel/src/plugins/input/touch/constants.ts", "../../node_modules/dill-pixel/src/plugins/input/touch/TouchControls.ts", "../../node_modules/dill-pixel/src/plugins/input/Controls.ts", "../../node_modules/dill-pixel/src/plugins/input/InputPlugin.ts", "../../node_modules/dill-pixel/src/plugins/input/methods.ts", "../../node_modules/dill-pixel/src/plugins/PopupManagerPlugin.ts", "../../node_modules/dill-pixel/src/plugins/ResizerPlugin.ts", "../../node_modules/dill-pixel/src/plugins/SceneManagerPlugin.ts", "../../node_modules/dill-pixel/src/plugins/WebEventsPlugin.ts", "../../node_modules/dill-pixel/src/store/adapters/StorageAdapter.ts", "../../node_modules/dill-pixel/src/store/adapters/DataAdapter.ts", "../../node_modules/dill-pixel/src/plugins/defaults.ts", "../../node_modules/dill-pixel/src/Application.ts"],
  "sourcesContent": ["export const env = process.env.NODE_ENV;\nexport const isDev = env === 'development';\nexport const isProduction = env === 'production';\n", "export function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function capitalizeWords(str: string): string {\n  return str.split(' ').map(capitalize).join(' ');\n}\n", "import { isDev } from '../env';\nimport { capitalize } from '../string';\n\nconst colors = {\n  log: 'background: #74b64c; color: black;',\n  warn: 'background: yellow; color: black;',\n  error: 'background: orange; color: black;',\n};\n\nexport type LoggerMode = 'development' | 'default' | 'disabled';\n\nexport class Logger {\n  private static _instance: Logger | null = null;\n\n  private constructor(mode?: LoggerMode) {\n    Logger._instance = this;\n    Logger.mode = mode !== undefined ? mode : isDev ? 'development' : 'default';\n    // check if mode is one of the valid modes\n    if (!['development', 'default', 'disabled'].includes(Logger.mode)) {\n      Logger.mode = 'default';\n    }\n  }\n\n  private static _mode: LoggerMode = 'disabled';\n\n  static get mode(): LoggerMode {\n    return Logger._mode;\n  }\n\n  static set mode(mode: LoggerMode) {\n    Logger._mode = mode;\n  }\n\n  public static initialize(mode?: LoggerMode) {\n    if (Logger._instance) {\n      throw new Error('Logger has already been instantiated.');\n    }\n    Logger._instance = new Logger(mode);\n  }\n\n  public static log(...args: any) {\n    Logger.trace('log', ...args);\n  }\n\n  public static warn(...args: any) {\n    Logger.trace('warn', ...args);\n  }\n\n  public static error(...args: any) {\n    Logger.trace('error', ...args);\n  }\n\n  public static trace(type: 'log' | 'warn' | 'error' = 'log', ...args: any[]) {\n    if (Logger.mode === 'disabled') {\n      return;\n    }\n    if (Logger.mode === 'default') {\n      return console.log(`%c ${capitalize(type)} `, colors[type], ...args);\n    }\n    console.groupCollapsed(`%c ${capitalize(type)} `, colors[type], ...args);\n    console.trace(`%c Stack `, colors[type]);\n    console.groupEnd();\n  }\n}\n", "/**\n * Delays the execution of the subsequent code.\n * @param {number} seconds The delay time in seconds. Default is 0.\n * @returns {Promise<void>} A promise that resolves after the specified delay.\n */\nexport const delay = (seconds: number = 0): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n\nexport const wait = (seconds: number = 0): Promise<void> => delay(seconds);\n\n/**\n * Checks if the given value is a promise.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a promise, false otherwise.\n */\nexport const isPromise = (value: any): value is Promise<any> => value && typeof value.then === 'function';\n", "import {Logger} from '../console';\n\n/**\n * Creates a new Queue with the given promises.\n * @param {...(Promise<any> | (() => Promise<any | void>))[]} promises The promises to add to the queue.\n * @returns {Queue} The created Queue.\n */\nexport function createQueue(...promises: (Promise<any> | (() => Promise<any | void>))[]): Queue {\n  return new Queue(promises);\n}\n\n/**\n * A class representing a queue of promises.\n * @template T The type of the values that the promises in the queue resolve to.\n */\nexport class Queue<T = any | void> {\n  private _promises: (Promise<any> | (() => Promise<T>))[];\n  private _currentIndex: number = 0;\n  private _isPaused: boolean = false;\n  private _isCanceled: boolean = false;\n\n  /**\n   * Creates a new Queue.\n   * @param {(Promise<any> | (() => Promise<T>))[]} promises The promises to add to the queue.\n   */\n  constructor(promises: (Promise<any> | (() => Promise<T>))[] = []) {\n    this._promises = promises;\n  }\n\n  private _results: T[];\n\n  /**\n   * Gets the results of the promises that have been resolved so far.\n   * @returns {T[]} The results.\n   */\n  public get results(): T[] {\n    return this._results;\n  }\n\n  /**\n   * Adds promises to the queue.\n   * @param {...(Promise<any> | (() => Promise<T>))[]} args The promises to add.\n   */\n  public add(...args: (Promise<any> | (() => Promise<T>))[]) {\n    this._promises.push(...args);\n  }\n\n  /**\n   * Starts the execution of the promises in the queue.\n   */\n  public start(): void {\n    if (this._currentIndex === 0) {\n      // don't start if already started\n      this._results = [];\n      void this._next();\n    }\n  }\n\n  /**\n   * Pauses the execution of the promises in the queue.\n   */\n  public pause(): void {\n    this._isPaused = true;\n  }\n\n  /**\n   * Resumes the execution of the promises in the queue.\n   */\n  public resume(): void {\n    if (this._isPaused) {\n      this._isPaused = false;\n      void this._next();\n    }\n  }\n\n  /**\n   * Cancels the execution of the promises in the queue.\n   */\n  public cancel(): void {\n    this._isCanceled = true;\n    this._promises = [];\n  }\n\n  /**\n   * Executes the next promise in the queue.\n   * @private\n   * @returns {Promise<void>} A promise that resolves when the next promise in the queue has been executed.\n   */\n  private async _next(): Promise<void> {\n    if (this._isPaused || this._isCanceled || this._currentIndex >= this._promises.length) {\n      return;\n    }\n\n    const currentFunction = this._promises[this._currentIndex];\n\n    try {\n      const result = typeof currentFunction === 'function' ? await currentFunction() : await currentFunction;\n      this._results.push(result);\n      this._currentIndex++;\n      void this._next();\n    } catch (error) {\n      Logger.error(\"Queue didn't complete due to an error:\", error, 'Cancelling Queue');\n      this._isCanceled = true;\n    }\n  }\n}\n", "import {isPromise} from './promise';\nimport {Constructor, ImportListItem, ImportListItemModule} from './types';\n\n/**\n * Checks if the given value is a class.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a class, false otherwise.\n */\nfunction isClass(value: any): boolean {\n  return typeof value === 'function' && /^class\\s/.test(Function.prototype.toString.call(value));\n}\n\n/**\n * Retrieves the constructor of the module from the given import list item.\n * If the module is a promise, it waits for it to resolve.\n * If the module is a class, it returns it directly.\n * If the module has a named export specified in the item, it returns that.\n * Otherwise, it returns the default export of the module.\n * @param {ImportListItem<T>} item The import list item to get the module from.\n * @returns {Promise<Constructor<T>>} A promise that resolves to the constructor of the module.\n */\nexport async function getDynamicModuleFromImportListItem<T = any>(\n  item: ImportListItem<T>,\n): Promise<ImportListItemModule<T>> {\n  let module;\n  let ctor: ImportListItemModule<T>;\n\n  if (isPromise(item.module)) {\n    module = await item.module;\n    ctor = item?.namedExport ? module[item.namedExport] : module.default;\n  } else if (typeof item.module === 'function') {\n    if (isClass(item.module)) {\n      module = item.module;\n      ctor = module as Constructor<T>;\n    } else {\n      module = await (item.module as () => Promise<any>)();\n      ctor = item?.namedExport ? module[item.namedExport] : module.default;\n    }\n  } else {\n    module = item.module;\n    ctor = module;\n  }\n\n  return ctor;\n}\n", "import { Point } from 'pixi.js';\nimport type { Size, SizeLike } from './types';\n\nexport function resolveSizeLike(size?: SizeLike): Size {\n  if (size === undefined) {\n    return { width: 0, height: 0 };\n  }\n  if (Array.isArray(size)) {\n    return { width: size[0], height: size[1] === undefined ? size[0] : size[1] };\n  } else if (size instanceof Point) {\n    return { width: size.x, height: size.y };\n  } else if (typeof size === 'object') {\n    // cast as an object\n    const obj = size as { width: number; height: number };\n    return { width: obj.width || 0, height: obj.height || 0 };\n  } else {\n    return { width: size ?? 0, height: size ?? 0 };\n  }\n}\n\ntype DebouncedFunction<T extends (...args: any[]) => any> = (...args: Parameters<T>) => void;\n\n/**\n * Debounce a function\n * @param func - function to debounce\n * @param wait - time in milliseconds\n * @example const debounced = debounce(() => console.log('debounced'), 1000);\n * @example window.addEventListener('resize', debounced);\n */\nexport function debounce<T extends (...args: any[]) => any>(func: T, wait: number): DebouncedFunction<T> {\n  let timeoutId: any;\n  return function (...args: Parameters<T>) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n}\n", "/**\n * Returns the map entry that comes before the entry with the provided key.\n * If the provided key is the first entry in the map or doesn't exist in the map, the function returns undefined.\n * @param {Map<K, V>} map The map to search in.\n * @param {any} currentKey The key of the map entry that comes after the desired entry.\n * @returns {[K, V] | undefined} The map entry that comes before the entry with the provided key, or undefined if such an entry doesn't exist.\n */\nexport function getPreviousMapEntry<K = any, V = any>(map: Map<K, V>, currentKey: any): [K, V] | undefined {\n  let previous: [any, any] | undefined;\n\n  for (const entry of map) {\n    if (entry[0] === currentKey) {\n      return previous;\n    }\n    previous = entry;\n  }\n  return undefined;\n}\n\n/**\n * Returns the map entry that comes after the entry with the provided key.\n * If the provided key is the first entry in the map or doesn't exist in the map, the function returns undefined.\n * @param {Map<K, V>} map The map to search in.\n * @param {any} currentKey The key of the map entry that comes after the desired entry.\n * @returns {[K, V] | undefined} The map entry that comes before the entry with the provided key, or undefined if such an entry doesn't exist.\n */\nexport function getNextMapEntry<K = any, V = any>(map: Map<K, V>, currentKey: any): [K, V] | undefined {\n  let next: [any, any] | undefined;\n  // go in reverse\n  const entries = Array.from(map.entries());\n  for (let i = entries.length - 1; i >= 0; i--) {\n    const entry = entries[i];\n    if (entry[0] === currentKey) {\n      return next;\n    }\n    next = entry;\n  }\n  return undefined;\n}\n\n/**\n * Returns the last entry in the provided map.\n * If the map is empty, the function returns undefined.\n * @param {Map<K, V>} map The map to get the last entry from.\n * @returns {[K, V] | undefined} The last entry in the map, or undefined if the map is empty.\n */\nexport function getLastMapEntry<K = any, V = any>(map: Map<K, V>): [K, V] | undefined {\n  return Array.from(map.entries()).pop() as [K, V];\n}\n\n/**\n * Returns the first entry in the provided map.\n * If the map is empty, the function returns undefined.\n * @param {Map<K, V>} map The map to get the last entry from.\n * @returns {[K, V] | undefined} The last entry in the map, or undefined if the map is empty.\n */\nexport function getFirstMapEntry<K = any, V = any>(map: Map<K, V>): [K, V] | undefined {\n  return Array.from(map.entries()).shift() as [K, V];\n}\n", "/**\n * Clamp a number\n * @param pValue\n * @param pMin\n * @param pMax\n */\nexport function clamp(pValue: number, pMin: number, pMax: number): number {\n  return Math.max(pMin, Math.min(pMax, pValue));\n}\n\n/**\n * lerp\n * @param pMin\n * @param pMax\n * @param pPerc\n */\nexport function lerp(pMin: number, pMax: number, pPerc: number): number {\n  return pMin + (pMax - pMin) * pPerc;\n}\n", "/**\n * Plucks the specified keys from an object and returns a new object with only those keys.\n * @template T The type of the original object.\n * @template K The keys to pluck from the original object.\n * @param {T} obj The original object.\n * @param {K[]} keys The keys to pluck from the original object.\n * @returns {Pick<T, K>} A new object with only the plucked keys.\n */\nexport function pluck<T extends object, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((acc, key) => (key in obj ? { ...acc, [key]: obj[key] } : acc), {} as Pick<T, K>);\n}\n\n/**\n * Omits the specified keys from an object and returns a new object without those keys.\n * @template T The type of the original object.\n * @template K The keys to omit from the original object.\n * @param {K[]} keysToOmit The keys to omit from the original object.\n * @param {Partial<T>} obj The original object.\n * @returns {Omit<T, K>} A new object without the omitted keys.\n */\nexport function omitKeys<T extends object, K extends keyof T>(keysToOmit: K[], obj: Partial<T>): Omit<T, K> {\n  return Object.entries(obj)\n    .filter(([key]) => !keysToOmit.includes(key as K))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {} as Omit<T, K>);\n}\n", "import {Point, PointLike} from 'pixi.js';\nimport {PointLike as DillPixelPointLike} from './types';\nimport {lerp} from './math';\n\n/**\n * Add the x and the y values of two Points together and return a new point.\n * @returns Point\n * @aram a\n * @aram b\n */\nexport function add(a: PointLike, b: PointLike): Point {\n  return new Point(a.x + b.x, a.y + b.y);\n}\n\n/**\n * Increase the x,y of point A by the x,y of point B.\n * @aram a\n * @aram b\n */\nexport function addToPoint(a: PointLike, b: PointLike): void {\n  a.x += b.x;\n  a.y += b.y;\n}\n\n/**\n * Subtract the x and the y values of point B from Point A and return a new point.\n * @aram a\n * @aram b\n */\nexport function subtract(a: PointLike, b: PointLike): Point {\n  return new Point(a.x - b.x, a.y - b.y);\n}\n\n/**\n * Decrease the x,y of point A by the x,y of point B.\n * @aram a\n * @aram b\n */\nexport function subtractFromPoint(a: PointLike, b: PointLike): void {\n  a.x -= b.x;\n  a.y -= b.y;\n}\n\n/**\n * Multply the x,y values of a point by the provided value.\n * @aram a\n * @aram pMult\n */\nexport function multiply(a: PointLike, pMult: number): Point {\n  const point: Point = new Point(a.x, a.y);\n  point.x *= pMult;\n  point.y *= pMult;\n  return point;\n}\n\n/**\n *\n * @aram pt\n * @aram percent\n */\nexport function lerpPoint(pt: PointLike, percent: number): number {\n  return lerp(pt.x, pt.y, percent);\n}\n\n/**\n * Get the distance between two points.\n * @aram a\n * @aram b\n */\nexport function distance(a: PointLike, b: Point): number {\n  return Math.sqrt(distanceSq(a, b));\n}\n\n/**\n * Get the squared distance between two points.\n * @aram a\n * @aram b\n */\nexport function distanceSq(a: PointLike, b: Point): number {\n  return (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y);\n}\n\n/**\n * Gets the magnitude of a point.\n * @aram pt\n */\nexport function magnitude(pt: PointLike): number {\n  return Math.sqrt(pt.x * pt.x + pt.y * pt.y);\n}\n\nexport type PointLikeResult = { x: number; y: number } | Point;\n\nexport function resolvePointLike(\n  position?: DillPixelPointLike,\n  asPoint?: false,\n  x?: number,\n  y?: number,\n): { x: number; y: number };\nexport function resolvePointLike(position?: DillPixelPointLike, asPoint?: true, x?: number, y?: number): Point;\nexport function resolvePointLike(\n  position?: DillPixelPointLike,\n  asPoint: boolean = false,\n  x: number = 0,\n  y: number = 0,\n): PointLikeResult {\n  if (position instanceof Point) {\n    x = position.x;\n    y = position.y;\n  } else if (Array.isArray(position)) {\n    x = position[0];\n    y = position[1] === undefined ? position[0] : position[1];\n  } else if (typeof position === 'object') {\n    // cast as an object\n    const obj = position as { x: number; y: number };\n    x = obj.x || 0;\n    y = obj.y || 0;\n  } else {\n    x = position ?? x;\n    y = position ?? y;\n  }\n\n  return asPoint ? new Point(x, y) : { x, y };\n}\n", "import {Point, PointLike, Rectangle} from 'pixi.js';\n\n/**\n *\n * @param rect\n * @param delta\n */\nexport function offset(rect: Rectangle, delta: Point): Rectangle {\n  rect.x += delta.x;\n  rect.y += delta.y;\n  return rect;\n}\n\n/**\n *\n * @param rect\n * @param output\n */\nexport function center(rect: Rectangle, output?: Point): Point {\n  if (output === undefined) {\n    output = new Point();\n  }\n  output.set(rect.x + rect.width * 0.5, rect.y + rect.height * 0.5);\n  return output;\n}\n\n/**\n * Scale a rectangle by a provided value\n * @param rect\n * @param scale\n */\nexport function scale(rect: Rectangle, scale: number): Rectangle {\n  rect.x *= scale;\n  rect.y *= scale;\n  rect.width *= scale;\n  rect.height *= scale;\n  return rect;\n}\n\n/**\n * Returns a `Point` representing the width and height of the input Rectangle\n * @param rect\n * @param output\n */\nexport function size(rect: Rectangle, output?: Point): PointLike {\n  if (output === undefined) {\n    output = new Point();\n  }\n  output.set(rect.width, rect.height);\n  return output;\n}\n", "type MethodNames = {\n  [key: string]: any;\n};\n\n/**\n * Binds the provided methods to the provided instance.\n * @param instance - The instance to which the methods should be bound.\n * @param methodNames - The names of the methods to bind.\n */\nexport function bindMethods(instance: unknown, ...methodNames: string[]) {\n  methodNames.forEach((methodName) => {\n    const method = (instance as MethodNames)[methodName];\n    if (typeof method === 'function') {\n      (instance as MethodNames)[methodName] = method.bind(instance);\n    }\n  });\n}\n\n/**\n * Retrieves the names of all methods in an instance's prototype chain.\n * @param instance - The instance from which to retrieve method names.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n * @returns An array of method names.\n */\nfunction getInstanceMethodNames(\n  instance: any,\n  excludePrefixes: string[] = [],\n  excludeMethodNames: string[] = [],\n): string[] {\n  let prototype = Object.getPrototypeOf(instance);\n  const methodNames: string[] = [];\n\n  while (prototype) {\n    const filteredMethodNames = Object.getOwnPropertyNames(prototype).filter((propertyName) => {\n      const ownDescriptor = Object.getOwnPropertyDescriptor(prototype, propertyName);\n      return (\n        typeof ownDescriptor?.value === 'function' &&\n        propertyName !== 'constructor' &&\n        !excludePrefixes.some((prefix) => propertyName.startsWith(prefix)) &&\n        !excludeMethodNames.includes(propertyName)\n      );\n    });\n\n    methodNames.push(...filteredMethodNames);\n\n    if (prototype === Object.prototype || Object.prototype.hasOwnProperty.call(prototype.constructor, '__dill_pixel_method_binding_root')) {\n      break;\n    }\n\n    prototype = Object.getPrototypeOf(prototype);\n  }\n\n  return methodNames;\n}\n\n/**\n * Binds all methods of an instance to the instance.\n * @param instance - The instance to which the methods should be bound.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n */\nexport function bindAllMethods(instance: any, excludePrefixes: string[] = [], excludeMethodNames: string[] = []) {\n  getInstanceMethodNames(instance, excludePrefixes, excludeMethodNames).forEach((methodName) => {\n    instance[methodName] = instance[methodName].bind(instance);\n  });\n}\n\n/**\n * Checks if a method exists on an object and, if it does, invokes it with the provided arguments.\n * @param obj - The object on which to check for the method.\n * @param methodName - The name of the method to check for and invoke.\n * @param methodArgs - The arguments to pass to the method.\n */\nexport function checkAndInvokeMethod(obj: any, methodName: string, ...methodArgs: any[]): void {\n  if (typeof obj[methodName] === 'function') {\n    obj[methodName](...methodArgs);\n  }\n}\n", "import {Point} from 'pixi.js';\n\n/**\n * Find a float between two numbers, inclusive of {@param min} and exclusive of {@param max}.\n * @param min\n * @param max\n * @returns number\n */\nexport function floatBetween(min: number, max: number): number {\n  return min + Math.random() * (max - min);\n}\n\n/**\n * Find a float between the x,y of a Point\n * @param pt\n * @returns number\n */\nexport function floatBetweenPoint(pt: Point): number {\n  return floatBetween(pt.x, pt.y);\n}\n\n/**\n * Find an integer between two numbers, inclusive of {@param min} and exclusive of {@param max}.\n * @param min\n * @param max\n * @returns number\n */\nexport function intBetween(min: number, max: number): number {\n  return Math.floor(floatBetween(min, max));\n}\n\n/**\n * Find an int between the x,y of a Point\n * @param pt\n * @returns number\n */\nexport function intBetweenPoint(pt: Point): number {\n  return intBetween(pt.x, pt.y);\n}\n\n/**\n * Get a random boolean value\n * @returns boolean\n */\nexport function bool(): boolean {\n  return Math.random() < 0.5;\n}\n", "import {intBetween} from './random';\n\n/**\n * Shuffle an array.\n * @param array\n */\nexport function shuffle<T>(array: T[]): void {\n  let temp: T;\n  let index: number;\n  for (let i = 0; i < array.length; ++i) {\n    index = intBetween(0, array.length);\n    temp = array[i];\n    array[i] = array[index];\n    array[index] = temp;\n  }\n}\n\n/**\n * Get a random array element.\n * @param array\n */\nexport function getRandomElement<T>(array: T[]): T {\n  return array[intBetween(0, array.length)];\n}\n", "import type { Padding, PointLike } from './types';\n\nexport function resolvePadding(paddingNum: number, size: number) {\n  // check of the paddingNum is a decimal between 0 and 1\n  // if it is, return a number that is the percentage of the size\n  if (paddingNum >= 0 && paddingNum <= 1) {\n    return paddingNum * size;\n  }\n  return paddingNum;\n}\n\nexport function ensurePadding(padding: Partial<Padding> | PointLike): Padding {\n  if (Array.isArray(padding)) {\n    return {\n      top: padding[0],\n      right: padding?.[1] ?? padding[0],\n      bottom: padding?.[2] ?? padding[0],\n      left: padding?.[3] ?? padding?.[1] ?? padding[0] ?? 0,\n    };\n  }\n  if (typeof padding === 'number') {\n    return { top: padding, right: padding, bottom: padding, left: padding };\n  } else if (typeof padding === 'object') {\n    const paddingAsPointLike = padding as { x?: number; y?: number };\n    if (paddingAsPointLike.x !== undefined && paddingAsPointLike.y !== undefined) {\n      return {\n        top: paddingAsPointLike.y,\n        right: paddingAsPointLike.x,\n        bottom: paddingAsPointLike.y,\n        left: paddingAsPointLike.x,\n      };\n    } else {\n      return {\n        top: (padding as Padding).top ?? 0,\n        right: (padding as Padding).right ?? 0,\n        bottom: (padding as Padding).bottom ?? 0,\n        left: (padding as Padding).left ?? 0,\n      };\n    }\n  } else {\n    return { top: 0, right: 0, bottom: 0, left: 0 };\n  }\n}\n", "import { isMobile as PIXIUtilsIsMobile } from 'pixi.js';\n\n/**\n * Checks if the device has a retina display.\n * A device is considered to have a retina display if its device pixel ratio is greater than 1,\n * or if it matches the media query for high resolution displays.\n * @type {boolean}\n */\nexport const isRetina =\n  window.devicePixelRatio > 1 ||\n  (window.matchMedia &&\n    window.matchMedia(\n      '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)',\n    ).matches);\n\n/**\n * Check if we're on a touch device\n */\nexport const isTouch: boolean =\n  'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator?.maxTouchPoints > 0;\n\n/**\n * Checks if the device is a mobile device.\n * This uses the `isMobile` function from the `@pixi/utils` package.\n * @type {boolean}\n */\nexport const isMobile = PIXIUtilsIsMobile.any;\n\nexport const isAndroid = PIXIUtilsIsMobile.android.device;\nexport const isIos = PIXIUtilsIsMobile.apple.device;\n", "export function getZeroPaddedNumber(num: number, zeroPad: number = 0): string {\n  return num.toString().padStart(zeroPad, '0');\n}\n", "import { CanvasTextMetrics, FederatedEvent, Point, Text } from 'pixi.js';\n\nexport function getNearestCharacterIndex(text: Text, e: FederatedEvent): number {\n  const metrics = CanvasTextMetrics.measureText(text.text, text.style);\n  const lines = metrics.lines;\n  const lineHeight = metrics.lineHeight;\n  const position = text.toLocal(new Point(e.pageX, e.pageY));\n\n  let closestIndex = 0;\n  let minDistance = Infinity;\n\n  let currentIndex = 0;\n  for (let i = 0; i < lines.length; i++) {\n    const lineText = lines[i];\n    for (let j = 0; j <= lineText.length; j++) {\n      const subText = lineText.substring(0, j);\n      const lineMetrics = CanvasTextMetrics.measureText(subText, text.style);\n      const charX = lineMetrics.width;\n      const charY = i * lineHeight;\n      const distance = Math.hypot(charX - position.x, charY - position.y);\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestIndex = currentIndex + j;\n      }\n    }\n    currentIndex += lineText.length;\n  }\n\n  return closestIndex;\n}\n", "export function toHex(color: number): string {\n  return `#${color.toString(16)}`;\n}\n\n// return a uint color from a hex string\nexport function toRgb(hex: string): number {\n  return parseInt(hex.replace(/^#/, ''), 16);\n}\n\nexport class Color {\n  public static readonly WHITE: Color = new Color(255, 255, 255);\n  public static readonly BLACK: Color = new Color(0, 0, 0);\n  public static readonly GREY: Color = new Color(127, 127, 127);\n  public static readonly RED: Color = new Color(255, 0, 0);\n  public static readonly GREEN: Color = new Color(0, 255, 0);\n  public static readonly BLUE: Color = new Color(0, 0, 255);\n  public static readonly YELLOW: Color = new Color(255, 255, 0);\n  public static readonly MAGENTA: Color = new Color(255, 0, 255);\n  public static readonly CYAN: Color = new Color(0, 255, 255);\n\n  public r: number;\n  public g: number;\n  public b: number;\n\n  /**\n   * A Color reresented by a red, green and blue component.\n   * @param r The red component of the Color OR the full Color in HEX.\n   * @param g The green component of the Color.\n   * @param b The blue component of the Color.\n   */\n  constructor(r?: number, g?: number, b?: number) {\n    if (r !== undefined && g === undefined) {\n      // tslint:disable-next-line no-bitwise\n      this.r = (r & (255 << 16)) >> 16;\n      // tslint:disable-next-line no-bitwise\n      this.g = (r & (255 << 8)) >> 8;\n      // tslint:disable-next-line no-bitwise\n      this.b = r & 255;\n    } else {\n      this.r = r || 0;\n      this.g = g || 0;\n      this.b = b || 0;\n    }\n  }\n\n  /**\n   * Creates a random Color.\n   * @returns The new Color.\n   */\n  public static random(): Color {\n    return new Color(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n  }\n\n  /**\n   * Converts the rgb values passed in to hex.\n   * @param r The red component to convert.\n   * @param g The green component to convert.\n   * @param b The blue component to convert.\n   * @returns The hex value.\n   */\n  public static rgbToHex(r: number, g: number, b: number): number {\n    // tslint:disable-next-line no-bitwise\n    return (r << 16) | (g << 8) | b;\n  }\n\n  public static rgbToHexString(pNumber: number): string {\n    let hex = Number(pNumber).toString(16);\n    if (hex.length < 2) {\n      hex = '0' + hex;\n    }\n\n    return hex;\n  }\n\n  public static rgbToFullHexString(r: number, g: number, b: number): string {\n    const rStr: string = Color.rgbToHexString(r);\n    const gStr: string = Color.rgbToHexString(g);\n    const bStr: string = Color.rgbToHexString(b);\n\n    return rStr + gStr + bStr;\n  }\n\n  /**\n   * Creates a new Color that is linearly interpolated from @var pA to @var b .\n   * @param pA The start Color.\n   * @param b The end Color.\n   * @param pPerc The percentage on the path from @var pA to @var b .\n   * @returns The new Color.\n   */\n  public static lerp(pA: Color, b: Color, pPerc: number): Color {\n    return new Color(pA.r + pPerc * (b.r - pA.r), pA.g + pPerc * (b.g - pA.g), pA.b + pPerc * (b.b - pA.b));\n  }\n\n  /**\n   * Creates a new hex Color that is linearly interpolated from @var pA to @var b .\n   * @param pA The first Color hex.\n   * @param b The second Color hex.\n   * @param pPerc The percentage along the path from @var pA to @var b .\n   * @returns The new hex Color.\n   */\n  public static lerpHex(pA: number, b: number, pPerc: number): number {\n    const colorA: Color = new Color(pA);\n    const colorB: Color = new Color(b);\n    return Color.lerp(colorA, colorB, pPerc).toHex();\n  }\n\n  /**\n   * Convert this Color to hex.\n   * @returns The Color in hex format.\n   */\n  public toHex(): number {\n    return Color.rgbToHex(this.r, this.g, this.b);\n  }\n\n  public toHexString(): string {\n    return Color.rgbToFullHexString(this.r, this.g, this.b);\n  }\n\n  /**\n   * Converts the Color components to the 0...1 range.\n   * @returns The new Color.\n   */\n  public toWebGL(): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255];\n  }\n}\n", "import { Circle, Container, ContainerChild, Ellipse, Point, Polygon, Rectangle, RoundedRectangle } from 'pixi.js';\nimport { PointLike, Size } from './types';\nimport { resolvePointLike } from './point';\n\nexport type PixiSimpleShape = Rectangle | Circle | Ellipse | RoundedRectangle;\nexport type PixiShape = PixiSimpleShape | Polygon;\n\n/**\n * Reassigns the displays object parent while maintaing it's world position\n * @param pChild\n * @param pParent\n */\nexport function reParent(pChild: ContainerChild, pParent: Container): void {\n  pChild.parent.worldTransform.apply(pChild.position as Point, pChild.position as Point);\n  pParent.worldTransform.applyInverse(pChild.position as Point, pChild.position as Point);\n  pChild.parent.removeChild(pChild);\n  pParent.addChild(pChild);\n}\n\n/**\n *\n * @param pObject\n */\nexport function objectDiagonal(pObject: Container): number {\n  return Math.sqrt(pObject.width * pObject.width + pObject.height * pObject.height);\n}\n\n/**\n * Removes provided object from its parent and re-adds it.\n * @param pObject The object to send to the back.\n */\nexport function sendToFront(pObject: Container): void {\n  const parent: Container = pObject.parent;\n  parent.removeChild(pObject);\n  parent.addChild(pObject);\n}\n\n/**\n * Removes provided object from its parent and re-adds it at index 0.\n * @param pObject The object to send to the back.\n */\nexport function sendToBack(pObject: Container): void {\n  const parent: Container = pObject.parent;\n  parent.removeChild(pObject);\n  parent.addChildAt(pObject, 0);\n}\n\n/**\n *\n * @param pShape\n * @param pDelta\n */\nexport function offsetShape(pShape: PixiShape, pDelta: Point): PixiShape {\n  if (pShape instanceof Polygon) {\n    for (let i = 0; i < pShape.points.length; i += 2) {\n      pShape.points[i] += pDelta.x;\n      pShape.points[i + 1] += pDelta.y;\n    }\n    return pShape;\n  } else {\n    pShape.x += pDelta.x;\n    pShape.y += pDelta.y;\n    return pShape;\n  }\n}\n\n/**\n *\n * @param pShape\n * @param pDelta\n */\nexport function offsetSimpleShape(pShape: PixiSimpleShape, pDelta: Point): PixiSimpleShape {\n  pShape.x += pDelta.x;\n  pShape.y += pDelta.y;\n  return pShape;\n}\n\nexport function scaleUniform(obj: any, scaleNum: number, scaleProp: 'width' | 'height' = 'width') {\n  const scaleVal: 'x' | 'y' = scaleProp === 'width' ? 'y' : 'x';\n  const otherScaleVal: 'x' | 'y' = scaleProp === 'width' ? 'x' : 'y';\n  obj[scaleProp] = scaleNum;\n  obj.scale[scaleVal] = obj.scale[otherScaleVal];\n}\n\nexport function scaleToWidth(obj: Container, width: number) {\n  scaleUniform(obj, width, 'width');\n}\n\nexport function scaleToHeight(obj: Container, height: number) {\n  scaleUniform(obj, height, 'height');\n}\n\nexport function scaleToSize(obj: Container, size: PointLike | Size, firstProp: 'width' | 'height' = 'width') {\n  let resolvedSize;\n  if ((size as Size)?.width && (size as Size)?.height) {\n    resolvedSize = { x: (size as Size).width, y: (size as Size).height };\n  } else {\n    resolvedSize = resolvePointLike(size as PointLike);\n  }\n\n  if (firstProp === 'width') {\n    scaleToWidth(obj, resolvedSize.x);\n    if (obj.height < resolvedSize.y) {\n      scaleToHeight(obj, resolvedSize.y);\n    }\n  } else {\n    scaleToHeight(obj, resolvedSize.y);\n    if (obj.width < resolvedSize.x) {\n      scaleToWidth(obj, resolvedSize.x);\n    }\n  }\n}\n", "export function destroyCanvas(canvas: HTMLCanvasElement | OffscreenCanvas) {\n  const gl = canvas.getContext('webgl');\n  if (gl) {\n    const extension = gl.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n  // If you are using a 2D context, there's no direct resource release method,\n  // but you should ensure all operations are complete before nullifying the canvas\n  const ctx = canvas.getContext('2d');\n  if (ctx) {\n    // Perform any necessary cleanup tasks for 2D context\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n  if (!(canvas instanceof OffscreenCanvas)) {\n    if (canvas.parentNode) {\n      canvas.parentNode.removeChild(canvas);\n    }\n  }\n  canvas.width = 0;\n  canvas.height = 0;\n\n  // @ts-expect-error canvas can't be null;\n  canvas = null;\n}\n", "/**\n * Filters a Set based on the provided filter function.\n * @param set The original Set to filter.\n * @param filterFunction The function used to filter the Set.\n * @returns A new Set containing only the elements that satisfy the filter function.\n */\nexport function filterSet<T>(set: Set<T>, filterFunction: (item: T) => boolean): Set<T> {\n  const filteredSet = new Set<T>();\n  for (const item of set) {\n    if (filterFunction(item)) {\n      filteredSet.add(item);\n    }\n  }\n  return filteredSet;\n}\n\nexport function firstFromSet<T = any>(set: Set<T>): T | undefined {\n  return set?.values().next().value;\n}\n\n/**\n * Gets the last element of a Set.\n * @param set The Set from which to retrieve the last element.\n * @returns The last element of the Set, or undefined if the Set is empty.\n */\nexport function lastFromSet<T>(set: Set<T>): T | undefined {\n  let lastElement: T | undefined = undefined;\n  for (const item of set) {\n    lastElement = item;\n  }\n  return lastElement;\n}\n", "import { AssetsManifest } from 'pixi.js';\nimport { IPlugin, PluginListItem } from '../plugins/Plugin';\nimport { DataSchema, IStorageAdapter, StorageAdapterListItem } from '../store';\nimport { ImportList, Logger } from '../utils';\nimport { AppConfig } from './types';\n\nexport type PluginOrAdapterConfig = string | [string, { autoLoad?: boolean; options?: any }];\n\nexport async function generatePluginList<T extends IPlugin = IPlugin>(\n  plugins: PluginOrAdapterConfig[],\n): Promise<ImportList<T>> {\n  const globalThisAsAny = globalThis as any;\n  const pluginsList: PluginListItem[] = globalThisAsAny.getDillPixel('pluginsList') || [];\n\n  return plugins\n    .map((plugin) => {\n      const p = pluginsList.find((p) => p.id === plugin || p.id === plugin[0]);\n      if (!p) {\n        Logger.warn(`Plugin ${plugin} not found`);\n        return null;\n      }\n      const pluginAsArray = plugin as [string, { autoLoad?: boolean; options?: any }];\n      console.log({ p });\n      return {\n        id: p.id,\n        path: p.path,\n        module: p.module,\n        options: pluginAsArray[1]?.options,\n        autoLoad: pluginAsArray[1]?.autoLoad === false ? false : true,\n      };\n    })\n    .filter(Boolean) as ImportList<T>;\n}\n\nexport async function generateAdapterList<T extends IStorageAdapter = IStorageAdapter>(\n  adapters: PluginOrAdapterConfig[],\n): Promise<ImportList<T>> {\n  const globalThisAsAny = globalThis as any;\n  const storageAdaptersList: StorageAdapterListItem[] = globalThisAsAny.getDillPixel('storageAdaptersList') || [];\n\n  return adapters\n    .map((adapter) => {\n      const a = storageAdaptersList.find((a) => a.id === adapter || a.id === adapter[0]);\n      if (!a) {\n        Logger.warn(`Storage Adapter ${adapter} not found`);\n        return null;\n      }\n      const adapterAsArray = adapter as [string, { autoLoad?: boolean; options?: any }];\n      return {\n        id: a.id,\n        path: a.path,\n        module: a.module,\n        options: adapterAsArray[1]?.options,\n        autoLoad: adapterAsArray[1]?.autoLoad === false ? false : true,\n      };\n    })\n    .filter(Boolean) as ImportList<T>;\n}\n\nexport function defineConfig<D extends DataSchema = DataSchema>(config: Partial<AppConfig<D>>): AppConfig<D> {\n  // Provide sensible defaults\n  return {\n    id: 'DillPixelApplication',\n    showStats: false,\n    showSceneDebugMenu: false,\n    useHash: false,\n    useSpine: false,\n    useVoiceover: false,\n    defaultSceneLoadMethod: 'immediate',\n    data: {\n      initial: {} as D,\n      backupAll: false,\n    },\n    assets: {\n      manifest: {} as unknown as string | AssetsManifest | Promise<AssetsManifest> | undefined,\n      preload: {\n        bundles: ['required'],\n      },\n      background: {\n        bundles: [],\n      },\n    },\n    plugins: [],\n    scenes: [],\n    ...config,\n  };\n}\n", "// This file is auto-generated during the build process.\nexport const version: string = '8.18.2';\nexport const pixiVersion: string = '8.6.6';\n", "import { pixiVersion, version } from './version';\n\nexport function sayHello() {\n  const hello = `%c Dill Pixel Game Framework v${version} | %cPixi.js v${pixiVersion} %c| %chttps://dillpixel.io `;\n  console.log(\n    hello,\n    'background: rgba(31, 41, 55, 1);color: #74b64c',\n    'background: rgba(31, 41, 55, 1);color: #e91e63',\n    'background: rgba(31, 41, 55, 1);color: #74b64c',\n    'background: rgba(31, 41, 55, 1);color: #74b64c; font-weight: bold',\n  );\n}\n", "import { Application } from '../Application';\nimport { sayHello } from '../hello';\nimport { DataSchema } from '../store';\nimport { delay } from '../utils';\nimport { IApplication } from './interfaces';\nimport { AppConfig } from './types';\n\nexport const DEFAULT_GAME_CONTAINER_ID = 'dill-pixel-game-container';\n\nexport function createContainer(id: string) {\n  const container = document.createElement('div');\n  container.setAttribute('id', id);\n  document.body.appendChild(container);\n  return container;\n}\n\nexport async function create<T extends IApplication = Application, D extends DataSchema = DataSchema>(\n  config: AppConfig<D> = { id: 'DillPixelApplication' },\n  ApplicationClass: new () => IApplication = Application,\n  domElement: string | Window | HTMLElement = DEFAULT_GAME_CONTAINER_ID,\n  speak: boolean = true,\n): Promise<T> {\n  if (speak) {\n    sayHello();\n  }\n  let el: HTMLElement | null = null;\n  if (typeof domElement === 'string') {\n    el = document.getElementById(domElement);\n    if (!el) {\n      el = createContainer(domElement);\n    }\n  } else if (domElement instanceof HTMLElement) {\n    el = domElement;\n  } else if (domElement === window) {\n    el = document.body;\n  }\n  if (!el) {\n    // no element to use\n    throw new Error(\n      'You passed in a DOM Element, but none was found. If you instead pass in a string, a container will be created for you, using the string for its id.',\n    );\n  }\n  if (config.resizeToContainer) {\n    config.resizeTo = el;\n  }\n  config.container = el;\n  const instance = new ApplicationClass();\n  await instance.initialize(config as AppConfig<DataSchema>);\n  if (el) {\n    el.appendChild(instance.canvas as HTMLCanvasElement);\n    instance.setContainer(el);\n  } else {\n    throw new Error('No element found to append the view to.');\n  }\n  // ensure all plugins are initialized\n  await delay(0.01);\n\n  // call postInitialize on the instance\n  await instance.postInitialize();\n\n  // return the app instance\n  return instance as T;\n}\n", "import type { ICoreFunctions, ICoreSignals } from './interfaces';\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreSignalRegistry: { [K in keyof ICoreSignals]: ICoreSignals[K] } = {};\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreFunctionRegistry: { [K in keyof ICoreFunctions]: ICoreFunctions[K] } = {};\n", "import type {IApplication} from '../core';\nimport {Logger} from '../utils';\nimport type {IStorageAdapter} from './adapters';\n\n/**\n * Configuration for saving data with an adapter.\n */\ntype AdapterSaveConfig = {\n  adapterId: string;\n  awaitSave: boolean;\n};\n\n/**\n * Interface for the Store class.\n */\nexport interface IStore {\n  initialize(app: IApplication): IStore;\n\n  destroy(): void;\n\n  registerAdapter(adapter: IStorageAdapter, adapterOptions: any): void;\n\n  getAdapter<T extends IStorageAdapter = IStorageAdapter>(adapterId: string): T;\n\n  hasAdapter(adapterId: string): boolean;\n\n  save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave?: boolean,\n  ): Promise<any>;\n\n  load(adapterId: string, key: string): Promise<any>;\n}\n\n/**\n * A class representing a store of data, with multiple storage adapters.\n */\nexport class Store implements IStore {\n  private _app: IApplication;\n  private _adapters: Map<string, IStorageAdapter> = new Map<string, IStorageAdapter>();\n\n  /**\n   * Registers a new storage adapter with the store.\n   * @param {IStorageAdapter} adapter The adapter to register.\n   * @param {any} adapterOptions The options to initialize the adapter with.\n   * @returns {Promise<void>} A promise that resolves when the adapter has been registered and initialized.\n   */\n  async registerAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<void> {\n    if (this._adapters.has(adapter.id)) {\n      Logger.error(`Storage Adapter with id \"${adapter.id}\" already registered. Not registering.`);\n      return Promise.resolve();\n    }\n    this._adapters.set(adapter.id, adapter);\n    await adapter.initialize(this._app, adapterOptions);\n  }\n\n  /**\n   * Retrieves a registered storage adapter.\n   * @template T The type of the adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {T} The adapter.\n   */\n  getAdapter<T extends IStorageAdapter = IStorageAdapter>(adapterId: string): T {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return adapter as T;\n  }\n\n  /**\n   * Checks if a storage adapter is registered.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {boolean} True if the adapter is registered, false otherwise.\n   */\n  hasAdapter(adapterId: string): boolean {\n    return this._adapters.has(adapterId);\n  }\n\n  /**\n   * Destroys the store and all its adapters.\n   */\n  destroy(): void {\n    this._adapters.forEach((adapter) => {\n      adapter.destroy();\n    });\n    this._adapters.clear();\n  }\n\n  /**\n   * Saves data with a storage adapter.\n   * @param {string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[]} adapterId The ID of the adapter, or an array of IDs, or an array of save configurations.\n   * @param {string} key The key to save the data under.\n   * @param {any} data The data to save.\n   * @param {boolean} [awaitSave] Whether to wait for the save operation to complete before returning.\n   * @returns {Promise<any>} A promise that resolves with the result of the save operation.\n   */\n  async save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave = true,\n  ): Promise<any> {\n    let keys: string[] | Partial<AdapterSaveConfig>[] = [];\n    const result = [];\n\n    if (!Array.isArray(adapterId)) {\n      if (typeof adapterId === 'object') {\n        keys = [adapterId];\n      } else {\n        keys = [adapterId as string];\n      }\n    }\n\n    if ((keys[0] as string) === '*' || (keys[0] as Partial<AdapterSaveConfig>)?.adapterId === '*') {\n      // use all adapter\n      keys = Array.from(this._adapters.keys());\n    }\n    for (let i = 0; i < keys.length; i++) {\n      let aKey: string;\n      let shouldAwait: boolean = false;\n      if (typeof keys[i] === 'object') {\n        const obj = keys[i] as Partial<AdapterSaveConfig>;\n        aKey = obj.adapterId as string;\n        shouldAwait = obj.awaitSave ?? false;\n      } else {\n        aKey = keys[i] as unknown as string;\n        shouldAwait = awaitSave;\n      }\n      const adapter = this._adapters.get(aKey);\n      if (!adapter) {\n        throw new Error(`Adapter ${keys[i]} not found`);\n      }\n\n      if (shouldAwait) {\n        result.push(await adapter.save(key, data));\n      } else {\n        result.push(void adapter.save(key, data));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Loads data from a storage adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @param {string} key The key to load the data from.\n   * @returns {Promise<any>} A promise that resolves with the loaded data.\n   */\n  public async load(adapterId: string, key: string): Promise<any> {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return await adapter.load(key);\n  }\n\n  public initialize(app: IApplication): IStore {\n    this._app = app;\n    return this;\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\n/**\n * Base class for collectors.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Collector {\n    /**\n     * Create a new collector.\n     *\n     * @param signal The signal to emit.\n     */\n    constructor(signal) {\n        // eslint-disable-next-line dot-notation\n        this.emit = (...args) => {\n            // eslint-disable-next-line dot-notation\n            signal[\"emitCollecting\"](this, args);\n        };\n    }\n}\nexports.Collector = Collector;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorArray = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the all signal handlers from a signal emission in an array.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorArray extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = [];\n    }\n    handleResult(result) {\n        this.result.push(result);\n        return true;\n    }\n    /**\n     * Get the list of results from the signal handlers.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result.length = 0;\n    }\n}\nexports.CollectorArray = CollectorArray;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorLast = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the last signal handler from a signal emission.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorLast extends Collector_1.Collector {\n    handleResult(result) {\n        this.result = result;\n        return true;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        delete this.result;\n    }\n}\nexports.CollectorLast = CollectorLast;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorUntil0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return true.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorUntil0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorUntil0 = CollectorUntil0;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorWhile0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return false.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorWhile0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return !this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorWhile0 = CollectorWhile0;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnectionImpl = void 0;\n/**\n * Implementation of SignalConnection, for internal use only.\n * @private\n */\nclass SignalConnectionImpl {\n    /**\n     * @param link The actual link of the connection.\n     * @param parentCleanup Callback to cleanup the parent signal when a connection is disconnected\n     */\n    constructor(link, parentCleanup) {\n        this.link = link;\n        this.parentCleanup = parentCleanup;\n    }\n    disconnect() {\n        if (this.link !== null) {\n            this.link.unlink();\n            this.link = null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.parentCleanup();\n            this.parentCleanup = null;\n            return true;\n        }\n        return false;\n    }\n    set enabled(enable) {\n        if (this.link)\n            this.link.setEnabled(enable);\n    }\n    get enabled() {\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        return this.link !== null && this.link.isEnabled();\n    }\n}\nexports.SignalConnectionImpl = SignalConnectionImpl;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalLink = void 0;\n/**\n * SignalLink implements a doubly-linked ring with nodes containing the signal handlers.\n * @private\n */\nclass SignalLink {\n    constructor(prev = null, next = null, order = 0) {\n        this.enabled = true;\n        this.newLink = false;\n        this.callback = null;\n        this.prev = prev !== null && prev !== void 0 ? prev : this;\n        this.next = next !== null && next !== void 0 ? next : this;\n        this.order = order;\n    }\n    isEnabled() {\n        return this.enabled && !this.newLink;\n    }\n    setEnabled(flag) {\n        this.enabled = flag;\n    }\n    unlink() {\n        this.callback = null;\n        this.next.prev = this.prev;\n        this.prev.next = this.next;\n    }\n    insert(callback, order) {\n        let after = this.prev;\n        while (after !== this) {\n            if (after.order <= order)\n                break;\n            after = after.prev;\n        }\n        const link = new SignalLink(after, after.next, order);\n        link.callback = callback;\n        after.next = link;\n        link.next.prev = link;\n        return link;\n    }\n}\nexports.SignalLink = SignalLink;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signal = void 0;\nconst SignalConnection_1 = require(\"./SignalConnection\");\nconst SignalLink_1 = require(\"./SignalLink\");\n/**\n * A signal is a way to publish and subscribe to events.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Signal {\n    constructor() {\n        this.head = new SignalLink_1.SignalLink();\n        this.hasNewLinks = false;\n        this.emitDepth = 0;\n        this.connectionsCount = 0;\n    }\n    /**\n     * @returns The number of connections on this signal.\n     */\n    getConnectionsCount() {\n        return this.connectionsCount;\n    }\n    /**\n     * @returns true if this signal has connections.\n     */\n    hasConnections() {\n        return this.connectionsCount > 0;\n    }\n    /**\n     * Subscribe to this signal.\n     *\n     * @param callback This callback will be run when emit() is called.\n     * @param order Handlers with a higher order value will be called later.\n     */\n    connect(callback, order = 0) {\n        this.connectionsCount++;\n        const link = this.head.insert(callback, order);\n        if (this.emitDepth > 0) {\n            this.hasNewLinks = true;\n            link.newLink = true;\n        }\n        return new SignalConnection_1.SignalConnectionImpl(link, () => this.decrementConnectionCount());\n    }\n    decrementConnectionCount() {\n        this.connectionsCount--;\n    }\n    /**\n     * Unsubscribe from this signal with the original callback instance.\n     * While you can use this method, the SignalConnection returned by connect() will not be updated!\n     *\n     * @param callback The callback you passed to connect().\n     */\n    disconnect(callback) {\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.callback === callback) {\n                this.decrementConnectionCount();\n                link.unlink();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Disconnect all handlers from this signal event.\n     */\n    disconnectAll() {\n        while (this.head.next !== this.head) {\n            this.head.next.unlink();\n        }\n        this.connectionsCount = 0;\n    }\n    /**\n     * Publish this signal event (call all handlers).\n     */\n    emit(...args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback)\n                link.callback.apply(null, args);\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    emitCollecting(collector, args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback) {\n                const result = link.callback.apply(null, args);\n                if (!collector.handleResult(result))\n                    break;\n            }\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    unsetNewLink() {\n        if (this.hasNewLinks && this.emitDepth === 0) {\n            for (let link = this.head.next; link !== this.head; link = link.next)\n                link.newLink = false;\n            this.hasNewLinks = false;\n        }\n    }\n}\nexports.Signal = Signal;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = void 0;\n/**\n * Represents a list of connections to a signal for easy disconnect.\n */\nclass SignalConnections {\n    constructor() {\n        this.list = [];\n    }\n    /**\n     * Add a connection to the list.\n     * @param connection\n     */\n    add(connection) {\n        this.list.push(connection);\n    }\n    /**\n     * Disconnect all connections in the list and empty the list.\n     */\n    disconnectAll() {\n        for (const connection of this.list) {\n            connection.disconnect();\n        }\n        this.list = [];\n    }\n    /**\n     * @returns The number of connections in this list.\n     */\n    getCount() {\n        return this.list.length;\n    }\n    /**\n     * @returns true if this list is empty.\n     */\n    isEmpty() {\n        return this.list.length === 0;\n    }\n}\nexports.SignalConnections = SignalConnections;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = exports.Signal = exports.CollectorWhile0 = exports.CollectorUntil0 = exports.CollectorLast = exports.CollectorArray = exports.Collector = void 0;\nvar Collector_1 = require(\"./Collector\");\nObject.defineProperty(exports, \"Collector\", { enumerable: true, get: function () { return Collector_1.Collector; } });\nvar CollectorArray_1 = require(\"./CollectorArray\");\nObject.defineProperty(exports, \"CollectorArray\", { enumerable: true, get: function () { return CollectorArray_1.CollectorArray; } });\nvar CollectorLast_1 = require(\"./CollectorLast\");\nObject.defineProperty(exports, \"CollectorLast\", { enumerable: true, get: function () { return CollectorLast_1.CollectorLast; } });\nvar CollectorUntil0_1 = require(\"./CollectorUntil0\");\nObject.defineProperty(exports, \"CollectorUntil0\", { enumerable: true, get: function () { return CollectorUntil0_1.CollectorUntil0; } });\nvar CollectorWhile0_1 = require(\"./CollectorWhile0\");\nObject.defineProperty(exports, \"CollectorWhile0\", { enumerable: true, get: function () { return CollectorWhile0_1.CollectorWhile0; } });\nvar Signal_1 = require(\"./Signal\");\nObject.defineProperty(exports, \"Signal\", { enumerable: true, get: function () { return Signal_1.Signal; } });\nvar SignalConnections_1 = require(\"./SignalConnections\");\nObject.defineProperty(exports, \"SignalConnections\", { enumerable: true, get: function () { return SignalConnections_1.SignalConnections; } });\n", "import {\n  Collector,\n  CollectorArray,\n  CollectorLast,\n  CollectorUntil0,\n  CollectorWhile0,\n  SignalConnection,\n  SignalConnections,\n  Signal as TsSignal,\n} from 'typed-signals';\n\nconst signalPriorities = {\n  highest: Number.MIN_SAFE_INTEGER,\n  higher: -1000,\n  high: -100,\n  normal: 0,\n  low: 100,\n  lower: 1000,\n  lowest: Number.MAX_SAFE_INTEGER,\n} as const;\n\nexport type SignalOrder = 'highest' | 'high' | 'normal' | 'low' | 'lower' | 'lowest' | number;\n\nclass Signal<THandler extends (...args: any[]) => any> extends TsSignal<THandler> {\n  // add a connectOnce method to the Signal class, that will connect a listener to the signal, and then remove it after the first time it is called\n  public connectOnce(callback: THandler, order?: SignalOrder): SignalConnection {\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      // Assuming you have a method to remove the connection, using it here to disconnect\n      wrapperConnection.disconnect();\n    }) as THandler;\n\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n\n  public connectNTimes(callback: THandler, times: number, order?: SignalOrder): SignalConnection {\n    let numTimes = 0;\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      numTimes++;\n      if (numTimes >= times) {\n        wrapperConnection.disconnect();\n      }\n    }) as THandler;\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n\n  /**\n   * Subscribe to this signal.\n   *\n   * @param callback This callback will be run when emit() is called.\n   * @param order Handlers with a higher order value will be called later.\n   */\n  public connect(callback: THandler, order: SignalOrder = 'normal'): SignalConnection {\n    const priority = signalPriorities[order as keyof typeof signalPriorities] ?? order;\n    return super.connect(callback, priority);\n  }\n}\n\n// export anything useful from ts-signals, as well as the new Signal class\nexport { Collector, CollectorArray, CollectorLast, CollectorUntil0, CollectorWhile0, Signal, SignalConnections };\nexport type { SignalConnection };\n", "import { Application } from '../Application';\nimport type { IApplication, ICoreFunctions, ICoreSignals } from '../core';\nimport { coreFunctionRegistry, coreSignalRegistry } from '../core';\nimport { SignalConnection, SignalConnections } from '../signals';\nimport { bindAllMethods } from '../utils';\n\nexport interface IPlugin {\n  id: string;\n\n  app: IApplication;\n\n  initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  postInitialize(_app: IApplication): Promise<void> | void;\n\n  destroy(): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n\n  clearSignalConnections(): void;\n\n  registerCoreFunctions(): void;\n\n  registerCoreSignals(): void;\n}\n\nexport interface PluginListItem {\n  id: string;\n  path: string;\n  module: () => Promise<new () => IPlugin>;\n  assets?: string[];\n  plugins?: string[];\n}\n\nexport class Plugin<T extends Application = Application> implements IPlugin {\n  // A collection of signal connections.\n  __dill_pixel_method_binding_root: boolean;\n  protected _signalConnections: SignalConnections = new SignalConnections();\n\n  constructor(public id: string = 'Plugin') {\n    bindAllMethods(this);\n    this.__dill_pixel_method_binding_root = true;\n  }\n\n  public get app(): T {\n    return Application.getInstance<T>();\n  }\n\n  public destroy(): void {\n    this._signalConnections.disconnectAll();\n  }\n\n  public initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async initialize(_app: IApplication, _options?: any): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  public postInitialize(_app: IApplication): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async postInitialize(_app: IApplication): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * Add signal connections to the container.\n   * @param args - The signal connections to add.\n   */\n  public addSignalConnection(...args: SignalConnection[]) {\n    for (const connection of args) {\n      this._signalConnections.add(connection);\n    }\n  }\n\n  public clearSignalConnections() {\n    this._signalConnections.disconnectAll();\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreFunctions(): void {\n    const functions = this.getCoreFunctions();\n    functions.forEach((f) => {\n      const fName = f as keyof ICoreFunctions;\n      // @ts-expect-error implicit any\n      coreFunctionRegistry[fName] = this[f];\n    });\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreSignals(): void {\n    const signals = this.getCoreSignals();\n    signals.forEach((s) => {\n      const sName = s as keyof ICoreSignals;\n      // @ts-expect-error implicit any\n      coreSignalRegistry[sName] = this[s];\n    });\n  }\n\n  protected getCoreFunctions(): string[] {\n    return [];\n  }\n\n  protected getCoreSignals(): string[] {\n    return [];\n  }\n}\n", "import { Action, ActionContext, ActionDetail, ActionMap, ActionSignal } from '.';\nimport { IApplication } from '../../core';\nimport { Signal } from '../../signals';\nimport { Logger } from '../../utils';\nimport { IPlugin, Plugin } from '../Plugin';\n\nexport interface IActionsPlugin<C extends ActionContext = ActionContext> extends IPlugin {\n  context: C;\n  onActionContextChanged: Signal<(context: C) => void>;\n  initialize(app: IApplication): void;\n  getAction<TActionData = any>(action: Action | string): ActionSignal<TActionData>;\n  getActions(): ActionMap;\n  sendAction<TActionData = any>(actionId: Action | string, data?: TActionData): void;\n  setActionContext(context: C): string;\n  debug: boolean;\n}\n\nexport interface IActionsPluginOptions {\n  actions: Partial<ActionMap>;\n}\n\nexport class ActionsPlugin extends Plugin implements IActionsPlugin {\n  public readonly id = 'actions';\n  // signals\n  public onActionContextChanged: Signal<(context: string | ActionContext) => void> = new Signal<\n    (context: string | ActionContext) => void\n  >();\n\n  // private properties\n  private _context: ActionContext = 'default';\n  private _signals: Map<string | number, ActionSignal> = new Map();\n  private _actions: Partial<ActionMap> = {};\n  private _debug: boolean = false;\n  set debug(debug: boolean) {\n    this._debug = debug;\n  }\n  get debug(): boolean {\n    return this._debug;\n  }\n\n  // getter / setter\n  get context(): string | ActionContext {\n    return this._context;\n  }\n\n  set context(context: string | ActionContext) {\n    if (this._context === context) {\n      return;\n    }\n    this._context = context;\n    this.onActionContextChanged.emit(context);\n  }\n\n  initialize(app: IApplication): void {\n    this._actions = app?.config?.actions ? app.config.actions || {} : {};\n    console.log('ActionsPlugin initialized');\n  }\n\n  getAction<TActionData = any>(action: Action | string): ActionSignal<TActionData> {\n    if (!this._signals.has(action)) {\n      this._signals.set(action, new Signal<(actionDetail: ActionDetail<TActionData>) => void>());\n    }\n    return this._signals.get(action)!;\n  }\n\n  getActions(): ActionMap {\n    return this._actions as ActionMap;\n  }\n\n  sendAction<TActionData = any>(actionId: Action | string, data?: TActionData): void {\n    // check if action is defined\n    if (!this._actions[actionId]) {\n      if (this._debug) {\n        Logger.warn(`Action ${actionId} is not defined`);\n      }\n      return;\n    }\n\n    // check if action is allowed for current context\n    // send action if allowed\n    if (\n      this._actions[actionId]?.context === '*' ||\n      this._actions[actionId]?.context === this.context ||\n      this._actions[actionId]?.context?.includes(this.context)\n    ) {\n      return this.getAction<TActionData>(actionId).emit({ id: actionId, context: this.context, data });\n    }\n\n    // the action wasn't allowed\n    if (this._debug) {\n      Logger.warn(`Action ${actionId} is not allowed for context ${this.context}`);\n    }\n  }\n\n  setActionContext(context: string | ActionContext): string {\n    this.context = context;\n    return this.context;\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['getAction', 'sendAction', 'setActionContext', 'getActions'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onActionContextChanged'];\n  }\n}\n", "import { Action } from '../..';\n\nexport const DefaultActionContexts = {\n  default: 'default',\n  menu: 'menu',\n  pause: 'pause',\n  popup: 'popup',\n  game: 'game',\n};\n\nexport const DefaultActionContextsArray = ['default', 'menu', 'pause', 'popup', 'game'];\n\nexport const DefaultActions: Action[] = [\n  'up',\n  'down',\n  'left',\n  'right',\n  'action',\n  'pause',\n  'unpause',\n  'start',\n  'select',\n  'menu',\n  'back',\n  'next',\n];\n\nexport const defaultActionsList = {\n  action: { context: '*' },\n  back: { context: ['menu', 'default', 'popup'] },\n  next: { context: ['menu', 'default', 'popup'] },\n  select: { context: ['menu', 'default', 'popup'] },\n  menu: { context: ['default'] },\n  down: { context: ['menu', 'default', 'popup'] },\n  up: { context: ['menu', 'default', 'popup'] },\n  left: { context: ['menu', 'default', 'popup'] },\n  right: { context: '*' },\n  pause: { context: '*' },\n  unpause: { context: '*' },\n  start: { context: '*' },\n};\n\nexport const DefaultButtonIds = {\n  __default_do_not_use__: '__default_do_not_use__',\n};\n", "import { DefaultActionContextsArray, defaultActionsList } from './constants';\nimport { type UserActions, type UserButtons, type UserContexts } from './types';\n\n/**\n * Define the contexts for the actions.\n * @param contexts - The contexts to define.\n * @default ['default', 'game', 'menu', 'pause', 'popup', 'default']\n * @returns {ActionContext[]}\n */\n\nexport function defineContexts<C extends UserContexts = UserContexts>(contexts?: C): C {\n  return contexts ?? (DefaultActionContextsArray as unknown as C);\n}\n\nexport function defineActions<C extends UserContexts = UserContexts, U extends UserActions = UserActions<C>>(\n  contexts: C,\n  actions: U,\n  useDefaultActions: boolean = true,\n): U {\n  if (useDefaultActions) {\n    actions = { ...defaultActionsList, ...actions };\n  }\n  return actions;\n}\n\nexport function defineButtons<B extends UserButtons = UserButtons>(buttons?: B): B {\n  return buttons || ([] as unknown as B);\n}\n", "import type { AssetsPreferences, ResolvedAsset, UnresolvedAsset } from 'pixi.js';\nimport { Assets } from 'pixi.js';\nimport { IApplication } from '../core';\nimport type { IScene } from '../display';\nimport { Signal } from '../signals';\nimport { AssetLike, AssetLoadingOptions, AssetTypes, BundleTypes, isDev, Logger, SceneImportListItem } from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\nexport interface IAssetsPlugin extends IPlugin {\n  onLoadStart: Signal<() => void>;\n  onLoadProgress: Signal<(progress: number) => void>;\n  onLoadComplete: Signal<() => void>;\n\n  loadAssets(assets: string | string[] | UnresolvedAsset | UnresolvedAsset[] | AssetLike | AssetLike[]): Promise<void>;\n\n  loadBundles(bundle: string | string[]): Promise<void>;\n\n  loadSceneAssets(scene: IScene | SceneImportListItem<any>, background?: boolean): Promise<void>;\n\n  unloadSceneAssets(scene: IScene | SceneImportListItem<any>): Promise<void>;\n\n  loadRequired(): Promise<void>;\n\n  loadBackground(): void;\n}\n\nconst detaultAssetPreferences: Partial<AssetsPreferences> = {\n  preferWorkers: !isDev,\n  crossOrigin: 'anonymous',\n};\n\nconst imageExtensions = ['png', 'jpg', 'jpeg', 'webp', 'gif', 'avif', 'svg'];\n\nfunction addParseAsGraphicsContext(asset: string | UnresolvedAsset): string | UnresolvedAsset {\n  if (typeof asset === 'string') {\n    if (!asset?.includes('.svg')) {\n      return asset;\n    }\n    asset = { src: asset };\n  } else {\n    if (Array.isArray(asset.src) || !asset.src?.includes('.svg')) {\n      return asset;\n    }\n  }\n  if (!asset.data) {\n    asset.data = {};\n  }\n  asset.data.parseAsGraphicsContext = true;\n  return asset;\n}\n\nfunction getAssetList(assets: AssetTypes): UnresolvedAsset[] | string[] {\n  if (!Array.isArray(assets)) {\n    assets = [assets];\n  }\n  return assets.map((asset: string | UnresolvedAsset | AssetLike) => {\n    if (typeof asset === 'string') {\n      return addParseAsGraphicsContext(asset);\n    } else if (typeof asset === 'object') {\n      let alias: string | string[] = (asset?.src as string | string[]) || [];\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      if (asset.ext) {\n        if (asset.src && !Array.isArray(asset.src)) {\n          alias.push(asset.src as string);\n          asset.src = [asset.src];\n        }\n        asset.src = (asset.src as string[]).map((src: string) => {\n          return `${src}.${asset.ext}`;\n        });\n        asset.alias = [...alias, ...(asset.src as string[])].filter(Boolean);\n      } else {\n        addParseAsGraphicsContext(asset);\n      }\n      return asset;\n    }\n  });\n}\n\nexport class AssetsPlugin extends Plugin implements IAssetsPlugin {\n  public readonly id: string = 'assets';\n  public onLoadStart: Signal<() => void> = new Signal();\n  public onLoadProgress: Signal<(progress: number) => void> = new Signal();\n  public onLoadComplete: Signal<() => void> = new Signal();\n\n  public onBackgroundLoadStart: Signal<() => void> = new Signal();\n  public onBackgroundAssetLoaded: Signal<(asset: string) => void> = new Signal();\n  public onBackgroundBundlesLoaded: Signal<() => void> = new Signal();\n\n  private _loadedBundles: Set<string> = new Set();\n  private _loadedAssets: Set<string | UnresolvedAsset> = new Set();\n\n  private _required: { assets?: AssetTypes; bundles?: BundleTypes } = {};\n  private _background: { assets?: AssetTypes; bundles?: BundleTypes } = {};\n\n  public initialize(_app: IApplication, options?: AssetLoadingOptions): Promise<void> | void {\n    if (options?.preload) {\n      this._required = options.preload;\n    }\n    if (options?.background) {\n      this._background = options.background;\n    }\n    Assets.setPreferences({ ...detaultAssetPreferences, ...options?.assetPreferences });\n  }\n\n  public async loadRequired() {\n    this._handleLoadStart();\n    this._handleLoadProgress(0);\n    if (this._required) {\n      if (this._required.assets) {\n        await Assets.load(getAssetList(this._required.assets), this._handleLoadProgress);\n      }\n      if (this._required.bundles) {\n        await Assets.loadBundle(this._required.bundles, this._handleLoadProgress);\n      }\n    }\n    this._handleLoadComplete();\n    return Promise.resolve();\n  }\n\n  public loadBackground() {\n    this.onBackgroundLoadStart.emit();\n    if (this._background) {\n      if (this._background.assets) {\n        const list = getAssetList(this._background.assets);\n        list.forEach((asset) => {\n          if ((asset as UnresolvedAsset)?.src) {\n            const src = (asset as UnresolvedAsset).src as string[];\n            if (src) {\n              return Assets.backgroundLoad(src);\n            }\n          }\n          return Assets.backgroundLoad(asset as string).then(() => {\n            this.onBackgroundAssetLoaded.emit(asset as string);\n          });\n        });\n      }\n      if (this._background.bundles) {\n        void Assets.backgroundLoadBundle(this._background.bundles).then(() => {\n          this.onBackgroundBundlesLoaded.emit();\n        });\n      }\n    }\n  }\n\n  public async loadAssets(assets: AssetTypes) {\n    assets = getAssetList(assets);\n\n    await Assets.load(assets, this._handleLoadProgress);\n    this._markAssetsLoaded(assets as UnresolvedAsset[] | string[]);\n    return Promise.resolve();\n  }\n\n  public async loadBundles(bundles: string | string[]) {\n    await Assets.loadBundle(bundles, this._handleLoadProgress);\n    this._markBundlesLoaded(bundles);\n    return Promise.resolve();\n  }\n\n  public async unloadSceneAssets(scene: IScene | SceneImportListItem<any>) {\n    if (scene.assets?.preload?.assets) {\n      const assets = getAssetList(scene.assets.preload.assets);\n      Assets.unload(assets as ResolvedAsset[] | string[]).then(() => {\n        // Logger.log('assets unloaded');\n        this._markAssetsUnloaded(assets);\n      });\n    }\n    if (scene.assets?.preload?.bundles) {\n      const bundles = scene.assets.preload.bundles;\n      void Assets.unloadBundle(bundles).then(() => {\n        this._markBundlesUnloaded(bundles);\n      });\n    }\n    return Promise.resolve();\n  }\n\n  public async loadSceneAssets(scene: IScene | SceneImportListItem<any>, background = false) {\n    if (background) {\n      if (scene.assets?.background) {\n        if (scene.assets.background.assets) {\n          const assets = getAssetList(scene.assets.background.assets);\n          const filteredAssets = assets.filter((asset: string | UnresolvedAsset) => !this._isAssetLoaded(asset));\n          if (filteredAssets.length) {\n            filteredAssets.forEach((asset) => {\n              if ((asset as UnresolvedAsset)?.src) {\n                const src = (asset as UnresolvedAsset).src as string[];\n                if (src) {\n                  return Assets.backgroundLoad(src);\n                }\n              }\n              return Assets.backgroundLoad(asset as string);\n            });\n          }\n        }\n        if (scene.assets.background.bundles) {\n          let bundles = Array.isArray(scene.assets.background.bundles)\n            ? scene.assets.background.bundles\n            : [scene.assets.background.bundles];\n          bundles = bundles.filter((bundle) => !this._isBundleLoaded(bundle));\n          if (bundles.length) {\n            void Assets.backgroundLoadBundle(bundles);\n          }\n        }\n      }\n    } else {\n      this._handleLoadStart();\n      this._handleLoadProgress(0);\n      if (scene.assets?.preload?.assets) {\n        const assets = getAssetList(scene.assets.preload.assets);\n        const filteredAssets = assets.filter((asset) => !this._isAssetLoaded(asset));\n        if (filteredAssets.length) {\n          await Assets.load(filteredAssets, this._handleLoadProgress);\n          this._markAssetsLoaded(assets);\n        }\n      }\n      if (scene.assets?.preload?.bundles) {\n        let bundles: string[] = Array.isArray(scene.assets.preload.bundles)\n          ? scene.assets.preload.bundles\n          : [scene.assets.preload.bundles];\n        bundles = bundles.filter((bundle) => !this._isBundleLoaded(bundle));\n        if (bundles.length) {\n          Logger.log('loading bundles', bundles);\n          await Assets.loadBundle(bundles, this._handleLoadProgress);\n          this._markBundlesLoaded(bundles);\n        }\n      }\n      this._handleLoadComplete();\n    }\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['loadSceneAssets', 'unloadSceneAssets', 'loadAssets', 'loadBundles', 'loadRequired'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return [\n      'onLoadStart',\n      'onLoadProgress',\n      'onLoadComplete',\n      'onBackgroundLoadStart',\n      'onBackgroundAssetLoaded',\n      'onBackgroundBundlesLoaded',\n    ];\n  }\n\n  private _isAssetLoaded(alias: string | UnresolvedAsset) {\n    return this._loadedAssets.has(alias);\n  }\n\n  private _isBundleLoaded(alias: string) {\n    return this._loadedBundles.has(alias);\n  }\n\n  private _markAssetsLoaded(urls: UnresolvedAsset[] | string[]) {\n    urls.forEach((url) => {\n      this._loadedAssets.add(url);\n    });\n  }\n\n  private _markBundlesLoaded(aliases: string[] | string) {\n    if (!Array.isArray(aliases)) {\n      aliases = [aliases];\n    }\n    aliases.forEach((alias) => {\n      this._loadedBundles.add(alias);\n    });\n  }\n\n  private _markAssetsUnloaded(urls: string[] | string | UnresolvedAsset | UnresolvedAsset[]) {\n    if (!Array.isArray(urls)) {\n      urls = [urls];\n    }\n    urls.forEach((url: string | UnresolvedAsset) => {\n      this._loadedAssets.delete(url);\n    });\n  }\n\n  private _markBundlesUnloaded(aliases: string[] | string) {\n    if (!Array.isArray(aliases)) {\n      aliases = [aliases];\n    }\n    aliases.forEach((alias) => {\n      this._loadedBundles.delete(alias);\n    });\n  }\n\n  private _handleLoadStart() {\n    this.onLoadStart.emit();\n  }\n\n  private _handleLoadProgress(progress: number) {\n    this.onLoadProgress.emit(progress);\n  }\n\n  private _handleLoadComplete() {\n    this._handleLoadProgress(1);\n    this.onLoadComplete.emit();\n  }\n}\n", "import { IAudioInstance } from './AudioInstance';\nimport { ChannelName, IAudioManagerPlugin } from './AudioManagerPlugin';\n\nexport interface IAudioChannel {\n  name: string;\n  muted: boolean;\n  volume: number;\n  instances: IAudioInstance[];\n\n  add(id: string, instance: IAudioInstance): IAudioInstance;\n\n  get(id: string): IAudioInstance | undefined;\n\n  remove(id: string): IAudioInstance | undefined;\n\n  updateVolume(): void;\n\n  destroy(): void;\n}\n\nexport class AudioChannel<C extends ChannelName = ChannelName> {\n  private _sounds: Map<string, IAudioInstance> = new Map<string, IAudioInstance>();\n\n  constructor(\n    public name: C,\n    public manager: IAudioManagerPlugin<C>,\n  ) {\n    this.muted = this.manager.muted;\n  }\n\n  get instances(): IAudioInstance[] {\n    return Array.from(this._sounds.values());\n  }\n\n  private _muted: boolean = false;\n\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  set muted(value: boolean) {\n    this._muted = value;\n    this._setMuted();\n  }\n\n  private _volume: number = 1.0;\n\n  get volume(): number {\n    return this._volume;\n  }\n\n  set volume(value: number) {\n    this._volume = value;\n    this.updateVolume();\n  }\n\n  add(id: string, instance: IAudioInstance): IAudioInstance {\n    this._sounds.set(id, instance);\n    return instance;\n  }\n\n  get(id: string): IAudioInstance | undefined {\n    return this._sounds.get(id);\n  }\n\n  remove(id: string): IAudioInstance | undefined {\n    const instance = this._sounds.get(id);\n    if (instance) {\n      instance.destroy();\n      this._sounds.delete(id);\n    }\n    return instance;\n  }\n\n  _setMuted(): void {\n    this._sounds.forEach((sound) => {\n      sound.muted = this._muted;\n    });\n  }\n\n  updateVolume() {\n    this._sounds.forEach((sound) => {\n      sound.updateVolume();\n    });\n    this.manager.onChannelVolumeChanged.emit({ channel: this, volume: this._volume });\n  }\n\n  destroy() {}\n}\n", "import { IMediaInstance } from '@pixi/sound';\nimport { gsap } from 'gsap';\nimport { Signal } from '../../signals';\nimport { bindAllMethods } from '../../utils';\nimport { IAudioChannel } from './AudioChannel';\nimport { ChannelName, IAudioManagerPlugin } from './AudioManagerPlugin';\n\nexport interface IAudioInstance<C extends ChannelName = ChannelName> {\n  volume: number;\n  storedVolume: number;\n  media: IMediaInstance;\n  channel: IAudioChannel;\n  muted: boolean;\n  id: string;\n  manager: IAudioManagerPlugin<C>;\n  onStart: Signal<(instance: IAudioInstance) => void>;\n  onStop: Signal<(instance: IAudioInstance) => void>;\n  onEnd: Signal<(instance: IAudioInstance) => void>;\n  onPaused: Signal<(instance: IAudioInstance) => void>;\n  onResumed: Signal<(instance: IAudioInstance) => void>;\n  isPlaying: boolean;\n\n  fadeTo(volume: number, duration: number): gsap.core.Tween;\n\n  stop(): void;\n\n  destroy(): void;\n\n  remove(): void;\n\n  updateVolume(): void;\n\n  addListeners(): void;\n\n  removeListeners(): void;\n\n  pause(): void;\n\n  play(): void;\n\n  resume(): void;\n}\n\nexport class AudioInstance<C extends ChannelName = ChannelName> implements IAudioInstance {\n  public storedVolume: number;\n  public onStart: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onStop: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onEnd: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onPaused: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onResumed: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onProgress: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n\n  constructor(\n    public id: string,\n    public channel: IAudioChannel,\n    public manager: IAudioManagerPlugin,\n  ) {\n    bindAllMethods(this);\n    this.muted = this.channel.muted;\n  }\n\n  private _media: IMediaInstance;\n\n  get media(): IMediaInstance {\n    return this._media;\n  }\n\n  set media(value: IMediaInstance) {\n    this._media = value;\n    if (value) {\n      this._media.volume = this._volume * this.channel.volume * this.manager.masterVolume;\n      if (this.muted) {\n        this._media.muted = this.muted;\n      }\n      this.addListeners();\n    }\n  }\n\n  private _volume: number = 1;\n\n  public get volume(): number {\n    return this._volume;\n  }\n\n  public set volume(value: number) {\n    this._volume = value;\n    if (this._media) {\n      this._media.volume = this._volume * this.channel.volume * this.manager.masterVolume;\n    }\n  }\n\n  private _muted: boolean = false;\n\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  set muted(value: boolean) {\n    this._muted = value;\n    if (this._media) {\n      this._media.muted = this._muted;\n    }\n  }\n\n  private _isPlaying: boolean = false;\n\n  get isPlaying() {\n    return this._isPlaying;\n  }\n\n  set isPlaying(value: boolean) {\n    this._isPlaying = value;\n  }\n\n  pause(): void {\n    this._isPlaying = false;\n    if (this._media) {\n      this._media.paused = true;\n    }\n  }\n\n  resume(): void {\n    this._isPlaying = true;\n    if (this._media) {\n      this._media.paused = false;\n    }\n  }\n\n  remove(): void {\n    this._isPlaying = false;\n    this.channel.remove(this.id);\n  }\n\n  stop() {\n    if (this._media) {\n      this._media.stop();\n    }\n    this._isPlaying = false;\n    this.onEnd.emit(this);\n  }\n\n  updateVolume(): void {\n    this.volume = this._volume;\n  }\n\n  addListeners() {\n    this.removeListeners();\n    this._media.on('end', this._handleMediaEnded);\n    this._media.on('start', this._handleMediaStarted);\n    this._media.on('stop', this._handleMediaStopped);\n    this._media.on('pause', this._handleMediaPaused);\n    this._media.on('progress', this._handleMediaProgress);\n    this._media.on('resumed', this._handleMediaResumed);\n  }\n\n  removeListeners() {\n    if (!this.media) {\n      return;\n    }\n\n    this._media.off('end', this._handleMediaEnded);\n    this._media.off('start', this._handleMediaStarted);\n    this._media.off('stop', this._handleMediaStopped);\n    this._media.off('pause', this._handleMediaPaused);\n    this._media.off('progress', this._handleMediaProgress);\n    this._media.off('resumed', this._handleMediaResumed);\n  }\n\n  public destroy() {\n    this.stop();\n    this.removeListeners();\n  }\n\n  public fadeTo(volume: number, duration: number): gsap.core.Tween {\n    return gsap.to(this.media, { volume, duration });\n  }\n\n  public play(time?: number): void {\n    this._isPlaying = true;\n    if (time) {\n      this.media.play({ start: time });\n    } else {\n      this.media.play({});\n    }\n  }\n\n  private _handleMediaEnded() {\n    this._isPlaying = false;\n    this.onEnd.emit(this);\n  }\n\n  private _handleMediaStarted() {\n    this._isPlaying = true;\n    this.onStart.emit(this);\n  }\n\n  private _handleMediaStopped() {\n    this._isPlaying = false;\n    this.onStop.emit(this);\n  }\n\n  private _handleMediaPaused() {\n    this._isPlaying = false;\n    this.onPaused.emit(this);\n  }\n\n  private _handleMediaProgress() {\n    this.onProgress.emit(this);\n  }\n\n  private _handleMediaResumed() {\n    this._isPlaying = true;\n    this.onResumed.emit(this);\n  }\n}\n", "let instance;\nfunction setInstance(sound) {\n  instance = sound;\n  return sound;\n}\nfunction getInstance() {\n  return instance;\n}\n\nexport { getInstance, instance, setInstance };\n//# sourceMappingURL=instance.mjs.map\n", "import { getInstance } from '../instance.mjs';\n\nclass WebAudioUtils {\n  /**\n   * Dezippering is removed in the future Web Audio API, instead\n   * we use the `setValueAtTime` method, however, this is not available\n   * in all environments (e.g., Android webview), so we fallback to the `value` setter.\n   * @param param - AudioNode parameter object\n   * @param value - Value to set\n   * @return The value set\n   */\n  static setParamValue(param, value) {\n    if (param.setValueAtTime) {\n      const context = getInstance().context;\n      param.setValueAtTime(value, context.audioContext.currentTime);\n    } else {\n      param.value = value;\n    }\n    return value;\n  }\n}\n\nexport { WebAudioUtils };\n//# sourceMappingURL=WebAudioUtils.mjs.map\n", "import { EventEmitter } from 'pixi.js';\n\nclass HTMLAudioContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** Current global speed from 0 to 1 */\n    this.speed = 1;\n    /** Current muted status of the context */\n    this.muted = false;\n    /** Current volume from 0 to 1  */\n    this.volume = 1;\n    /** Current paused status */\n    this.paused = false;\n  }\n  /** Internal trigger when volume, mute or speed changes */\n  refresh() {\n    this.emit(\"refresh\");\n  }\n  /** Internal trigger paused changes */\n  refreshPaused() {\n    this.emit(\"refreshPaused\");\n  }\n  /**\n   * HTML Audio does not support filters, this is non-functional API.\n   */\n  get filters() {\n    console.warn(\"HTML Audio does not support filters\");\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  /**\n   * HTML Audio does not support `audioContext`\n   * @readonly\n   * @type {AudioContext}\n   */\n  get audioContext() {\n    console.warn(\"HTML Audio does not support audioContext\");\n    return null;\n  }\n  /**\n   * Toggles the muted state.\n   * @return The current muted state.\n   */\n  toggleMute() {\n    this.muted = !this.muted;\n    this.refresh();\n    return this.muted;\n  }\n  /**\n   * Toggles the paused state.\n   * @return The current paused state.\n   */\n  togglePause() {\n    this.paused = !this.paused;\n    this.refreshPaused();\n    return this.paused;\n  }\n  /** Destroy and don't use after this */\n  destroy() {\n    this.removeAllListeners();\n  }\n}\n\nexport { HTMLAudioContext };\n//# sourceMappingURL=HTMLAudioContext.mjs.map\n", "import { EventEmitter, Ticker } from 'pixi.js';\n\nlet id = 0;\nconst _HTMLAudioInstance = class extends EventEmitter {\n  /** @param parent - Parent element */\n  constructor(parent) {\n    super();\n    this.id = id++;\n    this.init(parent);\n  }\n  /**\n   * Set a property by name, this makes it easy to chain values\n   * @param name - Name of the property to set\n   * @param value - Value to set property to\n   */\n  set(name, value) {\n    if (this[name] === void 0) {\n      throw new Error(`Property with name ${name} does not exist.`);\n    } else {\n      switch (name) {\n        case \"speed\":\n          this.speed = value;\n          break;\n        case \"volume\":\n          this.volume = value;\n          break;\n        case \"paused\":\n          this.paused = value;\n          break;\n        case \"loop\":\n          this.loop = value;\n          break;\n        case \"muted\":\n          this.muted = value;\n          break;\n      }\n    }\n    return this;\n  }\n  /** The current playback progress from 0 to 1. */\n  get progress() {\n    const { currentTime } = this._source;\n    return currentTime / this._duration;\n  }\n  /** Pauses the sound. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /**\n   * Reference: http://stackoverflow.com/a/40370077\n   * @private\n   */\n  _onPlay() {\n    this._playing = true;\n  }\n  /**\n   * Reference: http://stackoverflow.com/a/40370077\n   * @private\n   */\n  _onPause() {\n    this._playing = false;\n  }\n  /**\n   * Initialize the instance.\n   * @param {htmlaudio.HTMLAudioMedia} media - Same as constructor\n   */\n  init(media) {\n    this._playing = false;\n    this._duration = media.source.duration;\n    const source = this._source = media.source.cloneNode(false);\n    source.src = media.parent.url;\n    source.onplay = this._onPlay.bind(this);\n    source.onpause = this._onPause.bind(this);\n    media.context.on(\"refresh\", this.refresh, this);\n    media.context.on(\"refreshPaused\", this.refreshPaused, this);\n    this._media = media;\n  }\n  /**\n   * Stop the sound playing\n   * @private\n   */\n  _internalStop() {\n    if (this._source && this._playing) {\n      this._source.onended = null;\n      this._source.pause();\n    }\n  }\n  /** Stop the sound playing */\n  stop() {\n    this._internalStop();\n    if (this._source) {\n      this.emit(\"stop\");\n    }\n  }\n  /** Set the instance speed from 0 to 1 */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n  }\n  /** Get the set the volume for this instance from 0 to 1 */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** If the sound instance should loop playback */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** `true` if the sound is muted */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /**\n   * HTML Audio does not support filters, this is non-functional API.\n   */\n  get filters() {\n    console.warn(\"HTML Audio does not support filters\");\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  /** Call whenever the loop, speed or volume changes */\n  refresh() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    this._source.loop = this._loop || sound.loop;\n    const globalVolume = global.volume * (global.muted ? 0 : 1);\n    const soundVolume = sound.volume * (sound.muted ? 0 : 1);\n    const instanceVolume = this._volume * (this._muted ? 0 : 1);\n    this._source.volume = instanceVolume * globalVolume * soundVolume;\n    this._source.playbackRate = this._speed * global.speed * sound.speed;\n  }\n  /** Handle changes in paused state, either globally or sound or instance */\n  refreshPaused() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    const pausedReal = this._paused || sound.paused || global.paused;\n    if (pausedReal !== this._pausedReal) {\n      this._pausedReal = pausedReal;\n      if (pausedReal) {\n        this._internalStop();\n        this.emit(\"paused\");\n      } else {\n        this.emit(\"resumed\");\n        this.play({\n          start: this._source.currentTime,\n          end: this._end,\n          volume: this._volume,\n          speed: this._speed,\n          loop: this._loop\n        });\n      }\n      this.emit(\"pause\", pausedReal);\n    }\n  }\n  /** Start playing the sound/ */\n  play(options) {\n    const { start, end, speed, loop, volume, muted } = options;\n    if (end) {\n      console.assert(end > start, \"End time is before start time\");\n    }\n    this._speed = speed;\n    this._volume = volume;\n    this._loop = !!loop;\n    this._muted = muted;\n    this.refresh();\n    if (this.loop && end !== null) {\n      console.warn('Looping not support when specifying an \"end\" time');\n      this.loop = false;\n    }\n    this._start = start;\n    this._end = end || this._duration;\n    this._start = Math.max(0, this._start - _HTMLAudioInstance.PADDING);\n    this._end = Math.min(this._end + _HTMLAudioInstance.PADDING, this._duration);\n    this._source.onloadedmetadata = () => {\n      if (this._source) {\n        this._source.currentTime = start;\n        this._source.onloadedmetadata = null;\n        this.emit(\"progress\", start / this._duration, this._duration);\n        Ticker.shared.add(this._onUpdate, this);\n      }\n    };\n    this._source.onended = this._onComplete.bind(this);\n    this._source.play();\n    this.emit(\"start\");\n  }\n  /**\n   * Handle time update on sound.\n   * @private\n   */\n  _onUpdate() {\n    this.emit(\"progress\", this.progress, this._duration);\n    if (this._source.currentTime >= this._end && !this._source.loop) {\n      this._onComplete();\n    }\n  }\n  /**\n   * Callback when completed.\n   * @private\n   */\n  _onComplete() {\n    Ticker.shared.remove(this._onUpdate, this);\n    this._internalStop();\n    this.emit(\"progress\", 1, this._duration);\n    this.emit(\"end\", this);\n  }\n  /** Don't use after this. */\n  destroy() {\n    Ticker.shared.remove(this._onUpdate, this);\n    this.removeAllListeners();\n    const source = this._source;\n    if (source) {\n      source.onended = null;\n      source.onplay = null;\n      source.onpause = null;\n      this._internalStop();\n    }\n    this._source = null;\n    this._speed = 1;\n    this._volume = 1;\n    this._loop = false;\n    this._end = null;\n    this._start = 0;\n    this._duration = 0;\n    this._playing = false;\n    this._pausedReal = false;\n    this._paused = false;\n    this._muted = false;\n    if (this._media) {\n      this._media.context.off(\"refresh\", this.refresh, this);\n      this._media.context.off(\"refreshPaused\", this.refreshPaused, this);\n      this._media = null;\n    }\n  }\n  /**\n   * To string method for instance.\n   * @return The string representation of instance.\n   */\n  toString() {\n    return `[HTMLAudioInstance id=${this.id}]`;\n  }\n};\nlet HTMLAudioInstance = _HTMLAudioInstance;\n/** Extra padding, in seconds, to deal with low-latecy of HTMLAudio. */\nHTMLAudioInstance.PADDING = 0.1;\n\nexport { HTMLAudioInstance };\n//# sourceMappingURL=HTMLAudioInstance.mjs.map\n", "import { EventEmitter } from 'pixi.js';\nimport { HTMLAudioInstance } from './HTMLAudioInstance.mjs';\n\nclass HTMLAudioMedia extends EventEmitter {\n  init(parent) {\n    this.parent = parent;\n    this._source = parent.options.source || new Audio();\n    if (parent.url) {\n      this._source.src = parent.url;\n    }\n  }\n  // Implement create\n  create() {\n    return new HTMLAudioInstance(this);\n  }\n  /**\n   * If the audio media is playable (ready).\n   * @readonly\n   */\n  get isPlayable() {\n    return !!this._source && this._source.readyState === 4;\n  }\n  /**\n   * THe duration of the media in seconds.\n   * @readonly\n   */\n  get duration() {\n    return this._source.duration;\n  }\n  /**\n   * Reference to the context.\n   * @readonly\n   */\n  get context() {\n    return this.parent.context;\n  }\n  /** The collection of filters, does not apply to HTML Audio. */\n  get filters() {\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  // Override the destroy\n  destroy() {\n    this.removeAllListeners();\n    this.parent = null;\n    if (this._source) {\n      this._source.src = \"\";\n      this._source.load();\n      this._source = null;\n    }\n  }\n  /**\n   * Get the audio source element.\n   * @type {HTMLAudioElement}\n   * @readonly\n   */\n  get source() {\n    return this._source;\n  }\n  // Implement the method to being preloading\n  load(callback) {\n    const source = this._source;\n    const sound = this.parent;\n    if (source.readyState === 4) {\n      sound.isLoaded = true;\n      const instance = sound.autoPlayStart();\n      if (callback) {\n        setTimeout(() => {\n          callback(null, sound, instance);\n        }, 0);\n      }\n      return;\n    }\n    if (!sound.url) {\n      callback(new Error(\"sound.url or sound.source must be set\"));\n      return;\n    }\n    source.src = sound.url;\n    const onLoad = () => {\n      removeListeners();\n      sound.isLoaded = true;\n      const instance = sound.autoPlayStart();\n      if (callback) {\n        callback(null, sound, instance);\n      }\n    };\n    const onAbort = () => {\n      removeListeners();\n      if (callback) {\n        callback(new Error(\"Sound loading has been aborted\"));\n      }\n    };\n    const onError = () => {\n      removeListeners();\n      const message = `Failed to load audio element (code: ${source.error.code})`;\n      if (callback) {\n        callback(new Error(message));\n      } else {\n        console.error(message);\n      }\n    };\n    const removeListeners = () => {\n      source.removeEventListener(\"canplaythrough\", onLoad);\n      source.removeEventListener(\"load\", onLoad);\n      source.removeEventListener(\"abort\", onAbort);\n      source.removeEventListener(\"error\", onError);\n    };\n    source.addEventListener(\"canplaythrough\", onLoad, false);\n    source.addEventListener(\"load\", onLoad, false);\n    source.addEventListener(\"abort\", onAbort, false);\n    source.addEventListener(\"error\", onError, false);\n    source.load();\n  }\n}\n\nexport { HTMLAudioMedia };\n//# sourceMappingURL=HTMLAudioMedia.mjs.map\n", "class SoundSprite {\n  /**\n   * @param parent - The parent sound\n   * @param options - Data associated with object.\n   */\n  constructor(parent, options) {\n    this.parent = parent;\n    Object.assign(this, options);\n    this.duration = this.end - this.start;\n    console.assert(this.duration > 0, \"End time must be after start time\");\n  }\n  /**\n   * Play the sound sprite.\n   * @param {Function} [complete] - Function call when complete\n   * @return Sound instance being played.\n   */\n  play(complete) {\n    return this.parent.play({\n      complete,\n      speed: this.speed || this.parent.speed,\n      end: this.end,\n      start: this.start,\n      loop: this.loop\n    });\n  }\n  /** Destroy and don't use after this */\n  destroy() {\n    this.parent = null;\n  }\n}\n\nexport { SoundSprite };\n//# sourceMappingURL=SoundSprite.mjs.map\n", "const extensions = [\n  \"ogg\",\n  \"oga\",\n  \"opus\",\n  \"m4a\",\n  \"mp3\",\n  \"mpeg\",\n  \"wav\",\n  \"aiff\",\n  \"wma\",\n  \"mid\",\n  \"caf\"\n];\nconst mimes = [\n  \"audio/mpeg\",\n  \"audio/ogg\"\n];\nconst supported = {};\nfunction validateFormats(typeOverrides) {\n  const overrides = {\n    m4a: \"audio/mp4\",\n    oga: \"audio/ogg\",\n    opus: 'audio/ogg; codecs=\"opus\"',\n    caf: 'audio/x-caf; codecs=\"opus\"',\n    ...typeOverrides || {}\n  };\n  const audio = document.createElement(\"audio\");\n  const formats = {};\n  const no = /^no$/;\n  extensions.forEach((ext) => {\n    const canByExt = audio.canPlayType(`audio/${ext}`).replace(no, \"\");\n    const canByType = overrides[ext] ? audio.canPlayType(overrides[ext]).replace(no, \"\") : \"\";\n    formats[ext] = !!canByExt || !!canByType;\n  });\n  Object.assign(supported, formats);\n}\nvalidateFormats();\n\nexport { extensions, mimes, supported, validateFormats };\n//# sourceMappingURL=supported.mjs.map\n", "import { EventEmitter, Ticker } from 'pixi.js';\nimport { WebAudioUtils } from './WebAudioUtils.mjs';\n\nlet id = 0;\nclass WebAudioInstance extends EventEmitter {\n  constructor(media) {\n    super();\n    this.id = id++;\n    this._media = null;\n    this._paused = false;\n    this._muted = false;\n    this._elapsed = 0;\n    this.init(media);\n  }\n  /**\n   * Set a property by name, this makes it easy to chain values\n   * @param name - Name of the property to set.\n   * @param value - Value to set property to.\n   */\n  set(name, value) {\n    if (this[name] === void 0) {\n      throw new Error(`Property with name ${name} does not exist.`);\n    } else {\n      switch (name) {\n        case \"speed\":\n          this.speed = value;\n          break;\n        case \"volume\":\n          this.volume = value;\n          break;\n        case \"muted\":\n          this.muted = value;\n          break;\n        case \"loop\":\n          this.loop = value;\n          break;\n        case \"paused\":\n          this.paused = value;\n          break;\n      }\n    }\n    return this;\n  }\n  /** Stops the instance, don't use after this. */\n  stop() {\n    if (this._source) {\n      this._internalStop();\n      this.emit(\"stop\");\n    }\n  }\n  /** Set the instance speed from 0 to 1 */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n    this._update(true);\n  }\n  /** Get the set the volume for this instance from 0 to 1 */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** `true` if the sound is muted */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /** If the sound instance should loop playback */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** The collection of filters. */\n  get filters() {\n    return this._filters;\n  }\n  set filters(filters) {\n    if (this._filters) {\n      this._filters?.filter((filter) => filter).forEach((filter) => filter.disconnect());\n      this._filters = null;\n      this._source.connect(this._gain);\n    }\n    this._filters = filters?.length ? filters.slice(0) : null;\n    this.refresh();\n  }\n  /** Refresh loop, volume and speed based on changes to parent */\n  refresh() {\n    if (!this._source) {\n      return;\n    }\n    const global = this._media.context;\n    const sound = this._media.parent;\n    this._source.loop = this._loop || sound.loop;\n    const globalVolume = global.volume * (global.muted ? 0 : 1);\n    const soundVolume = sound.volume * (sound.muted ? 0 : 1);\n    const instanceVolume = this._volume * (this._muted ? 0 : 1);\n    WebAudioUtils.setParamValue(this._gain.gain, instanceVolume * soundVolume * globalVolume);\n    WebAudioUtils.setParamValue(this._source.playbackRate, this._speed * sound.speed * global.speed);\n    this.applyFilters();\n  }\n  /** Connect filters nodes to audio context */\n  applyFilters() {\n    if (this._filters?.length) {\n      this._source.disconnect();\n      let source = this._source;\n      this._filters.forEach((filter) => {\n        source.connect(filter.destination);\n        source = filter;\n      });\n      source.connect(this._gain);\n    }\n  }\n  /** Handle changes in paused state, either globally or sound or instance */\n  refreshPaused() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    const pausedReal = this._paused || sound.paused || global.paused;\n    if (pausedReal !== this._pausedReal) {\n      this._pausedReal = pausedReal;\n      if (pausedReal) {\n        this._internalStop();\n        this.emit(\"paused\");\n      } else {\n        this.emit(\"resumed\");\n        this.play({\n          start: this._elapsed % this._duration,\n          end: this._end,\n          speed: this._speed,\n          loop: this._loop,\n          volume: this._volume\n        });\n      }\n      this.emit(\"pause\", pausedReal);\n    }\n  }\n  /**\n   * Plays the sound.\n   * @param options - Play options.\n   */\n  play(options) {\n    const { start, end, speed, loop, volume, muted, filters } = options;\n    if (end) {\n      console.assert(end > start, \"End time is before start time\");\n    }\n    this._paused = false;\n    const { source, gain } = this._media.nodes.cloneBufferSource();\n    this._source = source;\n    this._gain = gain;\n    this._speed = speed;\n    this._volume = volume;\n    this._loop = !!loop;\n    this._muted = muted;\n    this._filters = filters;\n    this.refresh();\n    const duration = this._source.buffer.duration;\n    this._duration = duration;\n    this._end = end;\n    this._lastUpdate = this._now();\n    this._elapsed = start;\n    this._source.onended = this._onComplete.bind(this);\n    if (this._loop) {\n      this._source.loopEnd = end;\n      this._source.loopStart = start;\n      this._source.start(0, start);\n    } else if (end) {\n      this._source.start(0, start, end - start);\n    } else {\n      this._source.start(0, start);\n    }\n    this.emit(\"start\");\n    this._update(true);\n    this.enableTicker(true);\n  }\n  /** Start the update progress. */\n  enableTicker(enabled) {\n    Ticker.shared.remove(this._updateListener, this);\n    if (enabled) {\n      Ticker.shared.add(this._updateListener, this);\n    }\n  }\n  /** The current playback progress from 0 to 1. */\n  get progress() {\n    return this._progress;\n  }\n  /** Pauses the sound. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /** Don't use after this. */\n  destroy() {\n    this.removeAllListeners();\n    this._internalStop();\n    if (this._gain) {\n      this._gain.disconnect();\n      this._gain = null;\n    }\n    if (this._media) {\n      this._media.context.events.off(\"refresh\", this.refresh, this);\n      this._media.context.events.off(\"refreshPaused\", this.refreshPaused, this);\n      this._media = null;\n    }\n    this._filters?.forEach((filter) => filter.disconnect());\n    this._filters = null;\n    this._end = null;\n    this._speed = 1;\n    this._volume = 1;\n    this._loop = false;\n    this._elapsed = 0;\n    this._duration = 0;\n    this._paused = false;\n    this._muted = false;\n    this._pausedReal = false;\n  }\n  /**\n   * To string method for instance.\n   * @return The string representation of instance.\n   */\n  toString() {\n    return `[WebAudioInstance id=${this.id}]`;\n  }\n  /**\n   * Get the current time in seconds.\n   * @return Seconds since start of context\n   */\n  _now() {\n    return this._media.context.audioContext.currentTime;\n  }\n  /** Callback for update listener */\n  _updateListener() {\n    this._update();\n  }\n  /** Internal update the progress. */\n  _update(force = false) {\n    if (this._source) {\n      const now = this._now();\n      const delta = now - this._lastUpdate;\n      if (delta > 0 || force) {\n        const speed = this._source.playbackRate.value;\n        this._elapsed += delta * speed;\n        this._lastUpdate = now;\n        const duration = this._duration;\n        let progress;\n        if (this._source.loopStart) {\n          const soundLength = this._source.loopEnd - this._source.loopStart;\n          progress = (this._source.loopStart + this._elapsed % soundLength) / duration;\n        } else {\n          progress = this._elapsed % duration / duration;\n        }\n        this._progress = progress;\n        this.emit(\"progress\", this._progress, duration);\n      }\n    }\n  }\n  /** Initializes the instance. */\n  init(media) {\n    this._media = media;\n    media.context.events.on(\"refresh\", this.refresh, this);\n    media.context.events.on(\"refreshPaused\", this.refreshPaused, this);\n  }\n  /** Stops the instance. */\n  _internalStop() {\n    if (this._source) {\n      this.enableTicker(false);\n      this._source.onended = null;\n      this._source.stop(0);\n      this._source.disconnect();\n      try {\n        this._source.buffer = null;\n      } catch (err) {\n        console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n      }\n      this._source = null;\n    }\n  }\n  /** Callback when completed. */\n  _onComplete() {\n    if (this._source) {\n      this.enableTicker(false);\n      this._source.onended = null;\n      this._source.disconnect();\n      try {\n        this._source.buffer = null;\n      } catch (err) {\n        console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n      }\n    }\n    this._source = null;\n    this._progress = 1;\n    this.emit(\"progress\", 1, this._duration);\n    this.emit(\"end\", this);\n  }\n}\n\nexport { WebAudioInstance };\n//# sourceMappingURL=WebAudioInstance.mjs.map\n", "class Filterable {\n  /**\n   * @param input - The source audio node\n   * @param output - The output audio node\n   */\n  constructor(input, output) {\n    this._output = output;\n    this._input = input;\n  }\n  /** The destination output audio node */\n  get destination() {\n    return this._input;\n  }\n  /** The collection of filters. */\n  get filters() {\n    return this._filters;\n  }\n  set filters(filters) {\n    if (this._filters) {\n      this._filters.forEach((filter) => {\n        if (filter) {\n          filter.disconnect();\n        }\n      });\n      this._filters = null;\n      this._input.connect(this._output);\n    }\n    if (filters && filters.length) {\n      this._filters = filters.slice(0);\n      this._input.disconnect();\n      let prevFilter = null;\n      filters.forEach((filter) => {\n        if (prevFilter === null) {\n          this._input.connect(filter.destination);\n        } else {\n          prevFilter.connect(filter.destination);\n        }\n        prevFilter = filter;\n      });\n      prevFilter.connect(this._output);\n    }\n  }\n  /** Cleans up. */\n  destroy() {\n    this.filters = null;\n    this._input = null;\n    this._output = null;\n  }\n}\n\nexport { Filterable };\n//# sourceMappingURL=Filterable.mjs.map\n", "import { Filterable } from '../Filterable.mjs';\nimport { WebAudioUtils } from './WebAudioUtils.mjs';\n\nconst _WebAudioNodes = class extends Filterable {\n  /**\n   * @param context - The audio context.\n   */\n  constructor(context) {\n    const audioContext = context.audioContext;\n    const bufferSource = audioContext.createBufferSource();\n    const gain = audioContext.createGain();\n    const analyser = audioContext.createAnalyser();\n    bufferSource.connect(analyser);\n    analyser.connect(gain);\n    gain.connect(context.destination);\n    super(analyser, gain);\n    this.context = context;\n    this.bufferSource = bufferSource;\n    this.gain = gain;\n    this.analyser = analyser;\n  }\n  /**\n   * Get the script processor node.\n   * @readonly\n   */\n  get script() {\n    if (!this._script) {\n      this._script = this.context.audioContext.createScriptProcessor(_WebAudioNodes.BUFFER_SIZE);\n      this._script.connect(this.context.destination);\n    }\n    return this._script;\n  }\n  /** Cleans up. */\n  destroy() {\n    super.destroy();\n    this.bufferSource.disconnect();\n    if (this._script) {\n      this._script.disconnect();\n    }\n    this.gain.disconnect();\n    this.analyser.disconnect();\n    this.bufferSource = null;\n    this._script = null;\n    this.gain = null;\n    this.analyser = null;\n    this.context = null;\n  }\n  /**\n   * Clones the bufferSource. Used just before playing a sound.\n   * @returns {SourceClone} The clone AudioBufferSourceNode.\n   */\n  cloneBufferSource() {\n    const orig = this.bufferSource;\n    const source = this.context.audioContext.createBufferSource();\n    source.buffer = orig.buffer;\n    WebAudioUtils.setParamValue(source.playbackRate, orig.playbackRate.value);\n    source.loop = orig.loop;\n    const gain = this.context.audioContext.createGain();\n    source.connect(gain);\n    gain.connect(this.destination);\n    return { source, gain };\n  }\n  /**\n   * Get buffer size of `ScriptProcessorNode`.\n   * @readonly\n   */\n  get bufferSize() {\n    return this.script.bufferSize;\n  }\n};\nlet WebAudioNodes = _WebAudioNodes;\n/**\n * The buffer size for script processor, default is `0` which auto-detects. If you plan to use\n * script node on iOS, you'll need to provide a non-zero amount.\n * @default 0\n */\nWebAudioNodes.BUFFER_SIZE = 0;\n\nexport { WebAudioNodes };\n//# sourceMappingURL=WebAudioNodes.mjs.map\n", "import { DOMAdapter } from 'pixi.js';\nimport { WebAudioInstance } from './WebAudioInstance.mjs';\nimport { WebAudioNodes } from './WebAudioNodes.mjs';\n\nclass WebAudioMedia {\n  /**\n   * Re-initialize without constructing.\n   * @param parent - - Instance of parent Sound container\n   */\n  init(parent) {\n    this.parent = parent;\n    this._nodes = new WebAudioNodes(this.context);\n    this._source = this._nodes.bufferSource;\n    this.source = parent.options.source;\n  }\n  /** Destructor, safer to use `SoundLibrary.remove(alias)` to remove this sound. */\n  destroy() {\n    this.parent = null;\n    this._nodes.destroy();\n    this._nodes = null;\n    try {\n      this._source.buffer = null;\n    } catch (err) {\n      console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n    }\n    this._source = null;\n    this.source = null;\n  }\n  // Implement create\n  create() {\n    return new WebAudioInstance(this);\n  }\n  // Implement context\n  get context() {\n    return this.parent.context;\n  }\n  // Implement isPlayable\n  get isPlayable() {\n    return !!this._source && !!this._source.buffer;\n  }\n  // Implement filters\n  get filters() {\n    return this._nodes.filters;\n  }\n  set filters(filters) {\n    this._nodes.filters = filters;\n  }\n  // Implements duration\n  get duration() {\n    console.assert(this.isPlayable, \"Sound not yet playable, no duration\");\n    return this._source.buffer.duration;\n  }\n  /** Gets and sets the buffer. */\n  get buffer() {\n    return this._source.buffer;\n  }\n  set buffer(buffer) {\n    this._source.buffer = buffer;\n  }\n  /** Get the current chained nodes object */\n  get nodes() {\n    return this._nodes;\n  }\n  // Implements load\n  load(callback) {\n    if (this.source) {\n      this._decode(this.source, callback);\n    } else if (this.parent.url) {\n      this._loadUrl(callback);\n    } else if (callback) {\n      callback(new Error(\"sound.url or sound.source must be set\"));\n    } else {\n      console.error(\"sound.url or sound.source must be set\");\n    }\n  }\n  /** Loads a sound using XHMLHttpRequest object. */\n  async _loadUrl(callback) {\n    const url = this.parent.url;\n    const response = await DOMAdapter.get().fetch(url);\n    this._decode(await response.arrayBuffer(), callback);\n  }\n  /**\n   * Decodes the array buffer.\n   * @param arrayBuffer - From load.\n   * @param {Function} callback - Callback optional\n   */\n  _decode(arrayBuffer, callback) {\n    const audioBufferReadyFn = (err, buffer) => {\n      if (err) {\n        if (callback) {\n          callback(err);\n        }\n      } else {\n        this.parent.isLoaded = true;\n        this.buffer = buffer;\n        const instance = this.parent.autoPlayStart();\n        if (callback) {\n          callback(null, this.parent, instance);\n        }\n      }\n    };\n    if (arrayBuffer instanceof AudioBuffer) {\n      audioBufferReadyFn(null, arrayBuffer);\n    } else {\n      const context = this.parent.context;\n      context.decode(arrayBuffer, audioBufferReadyFn);\n    }\n  }\n}\n\nexport { WebAudioMedia };\n//# sourceMappingURL=WebAudioMedia.mjs.map\n", "import { path } from 'pixi.js';\nimport { HTMLAudioMedia } from './htmlaudio/HTMLAudioMedia.mjs';\nimport { getInstance } from './instance.mjs';\nimport { SoundSprite } from './SoundSprite.mjs';\nimport { supported, extensions } from './utils/supported.mjs';\nimport { WebAudioMedia } from './webaudio/WebAudioMedia.mjs';\n\nconst _Sound = class {\n  /**\n   * Create a new sound instance from source.\n   * @param source - Either the path or url to the source file.\n   *        or the object of options to use.\n   * @return Created sound instance.\n   */\n  static from(source) {\n    let options = {};\n    if (typeof source === \"string\") {\n      options.url = source;\n    } else if (source instanceof ArrayBuffer || source instanceof AudioBuffer || source instanceof HTMLAudioElement) {\n      options.source = source;\n    } else if (Array.isArray(source)) {\n      options.url = source;\n    } else {\n      options = source;\n    }\n    options = {\n      autoPlay: false,\n      singleInstance: false,\n      url: null,\n      source: null,\n      preload: false,\n      volume: 1,\n      speed: 1,\n      complete: null,\n      loaded: null,\n      loop: false,\n      ...options\n    };\n    Object.freeze(options);\n    const media = getInstance().useLegacy ? new HTMLAudioMedia() : new WebAudioMedia();\n    return new _Sound(media, options);\n  }\n  /**\n   * Use `Sound.from`\n   * @ignore\n   */\n  constructor(media, options) {\n    this.media = media;\n    this.options = options;\n    this._instances = [];\n    this._sprites = {};\n    this.media.init(this);\n    const complete = options.complete;\n    this._autoPlayOptions = complete ? { complete } : null;\n    this.isLoaded = false;\n    this._preloadQueue = null;\n    this.isPlaying = false;\n    this.autoPlay = options.autoPlay;\n    this.singleInstance = options.singleInstance;\n    this.preload = options.preload || this.autoPlay;\n    this.url = Array.isArray(options.url) ? this.preferUrl(options.url) : options.url;\n    this.speed = options.speed;\n    this.volume = options.volume;\n    this.loop = options.loop;\n    if (options.sprites) {\n      this.addSprites(options.sprites);\n    }\n    if (this.preload) {\n      this._preload(options.loaded);\n    }\n  }\n  /**\n   * Internal help for resolving which file to use if there are multiple provide\n   * this is especially helpful for working with bundlers (non Assets loading).\n   */\n  preferUrl(urls) {\n    const [file] = urls.map((url) => ({ url, ext: path.extname(url).slice(1) })).filter(({ ext }) => supported[ext]).sort((a, b) => extensions.indexOf(a.ext) - extensions.indexOf(b.ext));\n    if (!file) {\n      throw new Error(\"No supported file type found\");\n    }\n    return file.url;\n  }\n  /** Instance of the media context. */\n  get context() {\n    return getInstance().context;\n  }\n  /** Stops all the instances of this sound from playing. */\n  pause() {\n    this.isPlaying = false;\n    this.paused = true;\n    return this;\n  }\n  /** Resuming all the instances of this sound from playing */\n  resume() {\n    this.isPlaying = this._instances.length > 0;\n    this.paused = false;\n    return this;\n  }\n  /** Stops all the instances of this sound from playing. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /** The playback rate. */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n  }\n  /** Set the filters. Only supported with WebAudio. */\n  get filters() {\n    return this.media.filters;\n  }\n  set filters(filters) {\n    this.media.filters = filters;\n  }\n  /**\n   * @ignore\n   */\n  addSprites(source, data) {\n    if (typeof source === \"object\") {\n      const results = {};\n      for (const alias in source) {\n        results[alias] = this.addSprites(alias, source[alias]);\n      }\n      return results;\n    }\n    console.assert(!this._sprites[source], `Alias ${source} is already taken`);\n    const sprite = new SoundSprite(this, data);\n    this._sprites[source] = sprite;\n    return sprite;\n  }\n  /** Destructor, safer to use `SoundLibrary.remove(alias)` to remove this sound. */\n  destroy() {\n    this._removeInstances();\n    this.removeSprites();\n    this.media.destroy();\n    this.media = null;\n    this._sprites = null;\n    this._instances = null;\n  }\n  /**\n   * Remove a sound sprite.\n   * @param alias - The unique name of the sound sprite, if alias is omitted, removes all sprites.\n   */\n  removeSprites(alias) {\n    if (!alias) {\n      for (const name in this._sprites) {\n        this.removeSprites(name);\n      }\n    } else {\n      const sprite = this._sprites[alias];\n      if (sprite !== void 0) {\n        sprite.destroy();\n        delete this._sprites[alias];\n      }\n    }\n    return this;\n  }\n  /** If the current sound is playable (loaded). */\n  get isPlayable() {\n    return this.isLoaded && this.media && this.media.isPlayable;\n  }\n  /** Stops all the instances of this sound from playing. */\n  stop() {\n    if (!this.isPlayable) {\n      this.autoPlay = false;\n      this._autoPlayOptions = null;\n      return this;\n    }\n    this.isPlaying = false;\n    for (let i = this._instances.length - 1; i >= 0; i--) {\n      this._instances[i].stop();\n    }\n    return this;\n  }\n  // Overloaded function\n  play(source, complete) {\n    let options;\n    if (typeof source === \"string\") {\n      const sprite = source;\n      options = { sprite, loop: this.loop, complete };\n    } else if (typeof source === \"function\") {\n      options = {};\n      options.complete = source;\n    } else {\n      options = source;\n    }\n    options = {\n      complete: null,\n      loaded: null,\n      sprite: null,\n      end: null,\n      start: 0,\n      volume: 1,\n      speed: 1,\n      muted: false,\n      loop: false,\n      ...options || {}\n    };\n    if (options.sprite) {\n      const alias = options.sprite;\n      console.assert(!!this._sprites[alias], `Alias ${alias} is not available`);\n      const sprite = this._sprites[alias];\n      options.start = sprite.start + (options.start || 0);\n      options.end = sprite.end;\n      options.speed = sprite.speed || 1;\n      options.loop = sprite.loop || options.loop;\n      delete options.sprite;\n    }\n    if (options.offset) {\n      options.start = options.offset;\n    }\n    if (!this.isLoaded) {\n      if (this._preloadQueue) {\n        return new Promise((resolve) => {\n          this._preloadQueue.push(() => {\n            resolve(this.play(options));\n          });\n        });\n      }\n      this._preloadQueue = [];\n      this.autoPlay = true;\n      this._autoPlayOptions = options;\n      return new Promise((resolve, reject) => {\n        this._preload((err, sound, media) => {\n          this._preloadQueue.forEach((resolve2) => resolve2());\n          this._preloadQueue = null;\n          if (err) {\n            reject(err);\n          } else {\n            if (options.loaded) {\n              options.loaded(err, sound, media);\n            }\n            resolve(media);\n          }\n        });\n      });\n    }\n    if (this.singleInstance || options.singleInstance) {\n      this._removeInstances();\n    }\n    const instance = this._createInstance();\n    this._instances.push(instance);\n    this.isPlaying = true;\n    instance.once(\"end\", () => {\n      if (options.complete) {\n        options.complete(this);\n      }\n      this._onComplete(instance);\n    });\n    instance.once(\"stop\", () => {\n      this._onComplete(instance);\n    });\n    instance.play(options);\n    return instance;\n  }\n  /** Internal only, speed, loop, volume change occured. */\n  refresh() {\n    const len = this._instances.length;\n    for (let i = 0; i < len; i++) {\n      this._instances[i].refresh();\n    }\n  }\n  /** Handle changes in paused state. Internal only. */\n  refreshPaused() {\n    const len = this._instances.length;\n    for (let i = 0; i < len; i++) {\n      this._instances[i].refreshPaused();\n    }\n  }\n  /** Gets and sets the volume. */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** Gets and sets the muted flag. */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /** Gets and sets the looping. */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** Starts the preloading of sound. */\n  _preload(callback) {\n    this.media.load(callback);\n  }\n  /** Gets the list of instances that are currently being played of this sound. */\n  get instances() {\n    return this._instances;\n  }\n  /** Get the map of sprites. */\n  get sprites() {\n    return this._sprites;\n  }\n  /** Get the duration of the audio in seconds. */\n  get duration() {\n    return this.media.duration;\n  }\n  /** Auto play the first instance. */\n  autoPlayStart() {\n    let instance;\n    if (this.autoPlay) {\n      instance = this.play(this._autoPlayOptions);\n    }\n    return instance;\n  }\n  /** Removes all instances. */\n  _removeInstances() {\n    for (let i = this._instances.length - 1; i >= 0; i--) {\n      this._poolInstance(this._instances[i]);\n    }\n    this._instances.length = 0;\n  }\n  /**\n   * Sound instance completed.\n   * @param instance\n   */\n  _onComplete(instance) {\n    if (this._instances) {\n      const index = this._instances.indexOf(instance);\n      if (index > -1) {\n        this._instances.splice(index, 1);\n      }\n      this.isPlaying = this._instances.length > 0;\n    }\n    this._poolInstance(instance);\n  }\n  /** Create a new instance. */\n  _createInstance() {\n    if (_Sound._pool.length > 0) {\n      const instance = _Sound._pool.pop();\n      instance.init(this.media);\n      return instance;\n    }\n    return this.media.create();\n  }\n  /**\n   * Destroy/recycling the instance object.\n   * @param instance - Instance to recycle\n   */\n  _poolInstance(instance) {\n    instance.destroy();\n    if (_Sound._pool.indexOf(instance) < 0) {\n      _Sound._pool.push(instance);\n    }\n  }\n};\nlet Sound = _Sound;\n/** Pool of instances */\nSound._pool = [];\n\nexport { Sound };\n//# sourceMappingURL=Sound.mjs.map\n", "import { EventEmitter } from 'pixi.js';\nimport { Filterable } from '../Filterable.mjs';\n\nclass WebAudioContext extends Filterable {\n  constructor() {\n    const win = window;\n    const ctx = new WebAudioContext.AudioContext();\n    const compressor = ctx.createDynamicsCompressor();\n    const analyser = ctx.createAnalyser();\n    analyser.connect(compressor);\n    compressor.connect(ctx.destination);\n    super(analyser, compressor);\n    /** Set to false ignore suspending when window is blurred */\n    this.autoPause = true;\n    this._ctx = ctx;\n    this._offlineCtx = new WebAudioContext.OfflineAudioContext(\n      1,\n      2,\n      win.OfflineAudioContext ? Math.max(8e3, Math.min(96e3, ctx.sampleRate)) : 44100\n    );\n    this.compressor = compressor;\n    this.analyser = analyser;\n    this.events = new EventEmitter();\n    this.volume = 1;\n    this.speed = 1;\n    this.muted = false;\n    this.paused = false;\n    this._locked = ctx.state === \"suspended\" && (\"ontouchstart\" in globalThis || \"onclick\" in globalThis);\n    if (this._locked) {\n      this._unlock();\n      this._unlock = this._unlock.bind(this);\n      document.addEventListener(\"mousedown\", this._unlock, true);\n      document.addEventListener(\"touchstart\", this._unlock, true);\n      document.addEventListener(\"touchend\", this._unlock, true);\n    }\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    globalThis.addEventListener(\"focus\", this.onFocus);\n    globalThis.addEventListener(\"blur\", this.onBlur);\n  }\n  /** Handle mobile WebAudio context resume */\n  onFocus() {\n    if (!this.autoPause) {\n      return;\n    }\n    const state = this._ctx.state;\n    if (state === \"suspended\" || state === \"interrupted\" || !this._locked) {\n      this.paused = this._pausedOnBlur;\n      this.refreshPaused();\n    }\n  }\n  /** Handle mobile WebAudio context suspend */\n  onBlur() {\n    if (!this.autoPause) {\n      return;\n    }\n    if (!this._locked) {\n      this._pausedOnBlur = this._paused;\n      this.paused = true;\n      this.refreshPaused();\n    }\n  }\n  /**\n   * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n   * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n   * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n   *\n   * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n   * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n   * stick with `mousedown` and `touchend`.\n   */\n  _unlock() {\n    if (!this._locked) {\n      return;\n    }\n    this.playEmptySound();\n    if (this._ctx.state === \"running\") {\n      document.removeEventListener(\"mousedown\", this._unlock, true);\n      document.removeEventListener(\"touchend\", this._unlock, true);\n      document.removeEventListener(\"touchstart\", this._unlock, true);\n      this._locked = false;\n    }\n  }\n  /**\n   * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n   * require the first sound to be played inside of a user initiated event (touch/click).\n   */\n  playEmptySound() {\n    const source = this._ctx.createBufferSource();\n    source.buffer = this._ctx.createBuffer(1, 1, 22050);\n    source.connect(this._ctx.destination);\n    source.start(0, 0, 0);\n    if (source.context.state === \"suspended\") {\n      source.context.resume();\n    }\n  }\n  /**\n   * Get AudioContext class, if not supported returns `null`\n   * @type {AudioContext}\n   * @readonly\n   */\n  static get AudioContext() {\n    const win = window;\n    return win.AudioContext || win.webkitAudioContext || null;\n  }\n  /**\n   * Get OfflineAudioContext class, if not supported returns `null`\n   * @type {OfflineAudioContext}\n   * @readonly\n   */\n  static get OfflineAudioContext() {\n    const win = window;\n    return win.OfflineAudioContext || win.webkitOfflineAudioContext || null;\n  }\n  /** Destroy this context. */\n  destroy() {\n    super.destroy();\n    const ctx = this._ctx;\n    if (typeof ctx.close !== \"undefined\") {\n      ctx.close();\n    }\n    globalThis.removeEventListener(\"focus\", this.onFocus);\n    globalThis.removeEventListener(\"blur\", this.onBlur);\n    this.events.removeAllListeners();\n    this.analyser.disconnect();\n    this.compressor.disconnect();\n    this.analyser = null;\n    this.compressor = null;\n    this.events = null;\n    this._offlineCtx = null;\n    this._ctx = null;\n  }\n  /**\n   * The WebAudio API AudioContext object.\n   * @readonly\n   * @type {AudioContext}\n   */\n  get audioContext() {\n    return this._ctx;\n  }\n  /**\n   * The WebAudio API OfflineAudioContext object.\n   * @readonly\n   * @type {OfflineAudioContext}\n   */\n  get offlineContext() {\n    return this._offlineCtx;\n  }\n  /**\n   * Pauses all sounds, even though we handle this at the instance\n   * level, we'll also pause the audioContext so that the\n   * time used to compute progress isn't messed up.\n   * @default false\n   */\n  set paused(paused) {\n    if (paused && this._ctx.state === \"running\") {\n      this._ctx.suspend();\n    } else if (!paused && this._ctx.state === \"suspended\") {\n      this._ctx.resume();\n    }\n    this._paused = paused;\n  }\n  get paused() {\n    return this._paused;\n  }\n  /** Emit event when muted, volume or speed changes */\n  refresh() {\n    this.events.emit(\"refresh\");\n  }\n  /** Emit event when muted, volume or speed changes */\n  refreshPaused() {\n    this.events.emit(\"refreshPaused\");\n  }\n  /**\n   * Toggles the muted state.\n   * @return The current muted state.\n   */\n  toggleMute() {\n    this.muted = !this.muted;\n    this.refresh();\n    return this.muted;\n  }\n  /**\n   * Toggles the paused state.\n   * @return The current muted state.\n   */\n  togglePause() {\n    this.paused = !this.paused;\n    this.refreshPaused();\n    return this._paused;\n  }\n  /**\n   * Decode the audio data\n   * @param arrayBuffer - Buffer from loader\n   * @param callback - When completed, error and audioBuffer are parameters.\n   */\n  decode(arrayBuffer, callback) {\n    const handleError = (err) => {\n      callback(new Error(err?.message || \"Unable to decode file\"));\n    };\n    const result = this._offlineCtx.decodeAudioData(\n      arrayBuffer,\n      (buffer) => {\n        callback(null, buffer);\n      },\n      handleError\n    );\n    if (result) {\n      result.catch(handleError);\n    }\n  }\n}\n\nexport { WebAudioContext };\n//# sourceMappingURL=WebAudioContext.mjs.map\n", "import { HTMLAudioContext } from './htmlaudio/HTMLAudioContext.mjs';\nimport { Sound } from './Sound.mjs';\nimport { WebAudioContext } from './webaudio/WebAudioContext.mjs';\n\nclass SoundLibrary {\n  constructor() {\n    this.init();\n  }\n  /**\n   * Re-initialize the sound library, this will\n   * recreate the AudioContext. If there's a hardware-failure\n   * call `close` and then `init`.\n   * @return Sound instance\n   */\n  init() {\n    if (this.supported) {\n      this._webAudioContext = new WebAudioContext();\n    }\n    this._htmlAudioContext = new HTMLAudioContext();\n    this._sounds = {};\n    this.useLegacy = !this.supported;\n    return this;\n  }\n  /**\n   * The global context to use.\n   * @readonly\n   */\n  get context() {\n    return this._context;\n  }\n  /**\n   * Apply filters to all sounds. Can be useful\n   * for setting global planning or global effects.\n   * **Only supported with WebAudio.**\n   * @example\n   * import { sound, filters } from '@pixi/sound';\n   * // Adds a filter to pan all output left\n   * sound.filtersAll = [\n   *     new filters.StereoFilter(-1)\n   * ];\n   */\n  get filtersAll() {\n    if (!this.useLegacy) {\n      return this._context.filters;\n    }\n    return [];\n  }\n  set filtersAll(filtersAll) {\n    if (!this.useLegacy) {\n      this._context.filters = filtersAll;\n    }\n  }\n  /**\n   * `true` if WebAudio is supported on the current browser.\n   */\n  get supported() {\n    return WebAudioContext.AudioContext !== null;\n  }\n  /**\n   * @ignore\n   */\n  add(source, sourceOptions) {\n    if (typeof source === \"object\") {\n      const results = {};\n      for (const alias in source) {\n        const options2 = this._getOptions(\n          source[alias],\n          sourceOptions\n        );\n        results[alias] = this.add(alias, options2);\n      }\n      return results;\n    }\n    console.assert(!this._sounds[source], `Sound with alias ${source} already exists.`);\n    if (sourceOptions instanceof Sound) {\n      this._sounds[source] = sourceOptions;\n      return sourceOptions;\n    }\n    const options = this._getOptions(sourceOptions);\n    const sound = Sound.from(options);\n    this._sounds[source] = sound;\n    return sound;\n  }\n  /**\n   * Internal methods for getting the options object\n   * @private\n   * @param source - The source options\n   * @param overrides - Override default options\n   * @return The construction options\n   */\n  _getOptions(source, overrides) {\n    let options;\n    if (typeof source === \"string\") {\n      options = { url: source };\n    } else if (Array.isArray(source)) {\n      options = { url: source };\n    } else if (source instanceof ArrayBuffer || source instanceof AudioBuffer || source instanceof HTMLAudioElement) {\n      options = { source };\n    } else {\n      options = source;\n    }\n    options = { ...options, ...overrides || {} };\n    return options;\n  }\n  /**\n   * Do not use WebAudio, force the use of legacy. This **must** be called before loading any files.\n   */\n  get useLegacy() {\n    return this._useLegacy;\n  }\n  set useLegacy(legacy) {\n    this._useLegacy = legacy;\n    this._context = !legacy && this.supported ? this._webAudioContext : this._htmlAudioContext;\n  }\n  /**\n   * This disables auto-pause all playback when the window blurs (WebAudio only).\n   * This is helpful to keep from playing sounds when the user switches tabs.\n   * However, if you're running content within an iframe, this may be undesirable\n   * and you should disable (set to `true`) this behavior.\n   * @default false\n   */\n  get disableAutoPause() {\n    return !this._webAudioContext.autoPause;\n  }\n  set disableAutoPause(autoPause) {\n    this._webAudioContext.autoPause = !autoPause;\n  }\n  /**\n   * Removes a sound by alias.\n   * @param alias - The sound alias reference.\n   * @return Instance for chaining.\n   */\n  remove(alias) {\n    this.exists(alias, true);\n    this._sounds[alias].destroy();\n    delete this._sounds[alias];\n    return this;\n  }\n  /**\n   * Set the global volume for all sounds. To set per-sound volume see {@link SoundLibrary#volume}.\n   */\n  get volumeAll() {\n    return this._context.volume;\n  }\n  set volumeAll(volume) {\n    this._context.volume = volume;\n    this._context.refresh();\n  }\n  /**\n   * Set the global speed for all sounds. To set per-sound speed see {@link SoundLibrary#speed}.\n   */\n  get speedAll() {\n    return this._context.speed;\n  }\n  set speedAll(speed) {\n    this._context.speed = speed;\n    this._context.refresh();\n  }\n  /**\n   * Toggle paused property for all sounds.\n   * @return `true` if all sounds are paused.\n   */\n  togglePauseAll() {\n    return this._context.togglePause();\n  }\n  /**\n   * Pauses any playing sounds.\n   * @return Instance for chaining.\n   */\n  pauseAll() {\n    this._context.paused = true;\n    this._context.refreshPaused();\n    return this;\n  }\n  /**\n   * Resumes any sounds.\n   * @return Instance for chaining.\n   */\n  resumeAll() {\n    this._context.paused = false;\n    this._context.refreshPaused();\n    return this;\n  }\n  /**\n   * Toggle muted property for all sounds.\n   * @return `true` if all sounds are muted.\n   */\n  toggleMuteAll() {\n    return this._context.toggleMute();\n  }\n  /**\n   * Mutes all playing sounds.\n   * @return Instance for chaining.\n   */\n  muteAll() {\n    this._context.muted = true;\n    this._context.refresh();\n    return this;\n  }\n  /**\n   * Unmutes all playing sounds.\n   * @return Instance for chaining.\n   */\n  unmuteAll() {\n    this._context.muted = false;\n    this._context.refresh();\n    return this;\n  }\n  /**\n   * Stops and removes all sounds. They cannot be used after this.\n   * @return Instance for chaining.\n   */\n  removeAll() {\n    for (const alias in this._sounds) {\n      this._sounds[alias].destroy();\n      delete this._sounds[alias];\n    }\n    return this;\n  }\n  /**\n   * Stops all sounds.\n   * @return Instance for chaining.\n   */\n  stopAll() {\n    for (const alias in this._sounds) {\n      this._sounds[alias].stop();\n    }\n    return this;\n  }\n  /**\n   * Checks if a sound by alias exists.\n   * @param alias - Check for alias.\n   * @param assert - Whether enable console.assert.\n   * @return true if the sound exists.\n   */\n  exists(alias, assert = false) {\n    const exists = !!this._sounds[alias];\n    if (assert) {\n      console.assert(exists, `No sound matching alias '${alias}'.`);\n    }\n    return exists;\n  }\n  /**\n   * Convenience function to check to see if any sound is playing.\n   * @returns `true` if any sound is currently playing.\n   */\n  isPlaying() {\n    for (const alias in this._sounds) {\n      if (this._sounds[alias].isPlaying) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Find a sound by alias.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  find(alias) {\n    this.exists(alias, true);\n    return this._sounds[alias];\n  }\n  /**\n   * Plays a sound.\n   * @method play\n   * @instance\n   * @param {string} alias - The sound alias reference.\n   * @param {string} sprite - The alias of the sprite to play.\n   * @return {IMediaInstance|null} The sound instance, this cannot be reused\n   *         after it is done playing. Returns `null` if the sound has not yet loaded.\n   */\n  /**\n   * Plays a sound.\n   * @param alias - The sound alias reference.\n   * @param {PlayOptions|Function} options - The options or callback when done.\n   * @return The sound instance,\n   *        this cannot be reused after it is done playing. Returns a Promise if the sound\n   *        has not yet loaded.\n   */\n  play(alias, options) {\n    return this.find(alias).play(options);\n  }\n  /**\n   * Stops a sound.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  stop(alias) {\n    return this.find(alias).stop();\n  }\n  /**\n   * Pauses a sound.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  pause(alias) {\n    return this.find(alias).pause();\n  }\n  /**\n   * Resumes a sound.\n   * @param alias - The sound alias reference.\n   * @return Instance for chaining.\n   */\n  resume(alias) {\n    return this.find(alias).resume();\n  }\n  /**\n   * Get or set the volume for a sound.\n   * @param alias - The sound alias reference.\n   * @param volume - Optional current volume to set.\n   * @return The current volume.\n   */\n  volume(alias, volume) {\n    const sound = this.find(alias);\n    if (volume !== void 0) {\n      sound.volume = volume;\n    }\n    return sound.volume;\n  }\n  /**\n   * Get or set the speed for a sound.\n   * @param alias - The sound alias reference.\n   * @param speed - Optional current speed to set.\n   * @return The current speed.\n   */\n  speed(alias, speed) {\n    const sound = this.find(alias);\n    if (speed !== void 0) {\n      sound.speed = speed;\n    }\n    return sound.speed;\n  }\n  /**\n   * Get the length of a sound in seconds.\n   * @param alias - The sound alias reference.\n   * @return The current duration in seconds.\n   */\n  duration(alias) {\n    return this.find(alias).duration;\n  }\n  /**\n   * Closes the sound library. This will release/destroy\n   * the AudioContext(s). Can be used safely if you want to\n   * initialize the sound library later. Use `init` method.\n   */\n  close() {\n    this.removeAll();\n    this._sounds = null;\n    if (this._webAudioContext) {\n      this._webAudioContext.destroy();\n      this._webAudioContext = null;\n    }\n    if (this._htmlAudioContext) {\n      this._htmlAudioContext.destroy();\n      this._htmlAudioContext = null;\n    }\n    this._context = null;\n    return this;\n  }\n}\n\nexport { SoundLibrary };\n//# sourceMappingURL=SoundLibrary.mjs.map\n", "import { ExtensionType, LoaderParserPriority, path, extensions as extensions$1 } from 'pixi.js';\nimport { getInstance } from './instance.mjs';\nimport { Sound } from './Sound.mjs';\nimport { extensions, supported, mimes } from './utils/supported.mjs';\n\nconst getAlias = (asset) => {\n  const src = asset.src;\n  let alias = asset?.alias?.[0];\n  if (!alias || asset.src === alias) {\n    alias = path.basename(src, path.extname(src));\n  }\n  return alias;\n};\nconst soundAsset = {\n  extension: ExtensionType.Asset,\n  detection: {\n    test: async () => true,\n    add: async (formats) => [...formats, ...extensions.filter((ext) => supported[ext])],\n    remove: async (formats) => formats.filter((ext) => formats.includes(ext))\n  },\n  loader: {\n    name: \"sound\",\n    extension: {\n      type: [ExtensionType.LoadParser],\n      priority: LoaderParserPriority.High\n    },\n    /** Should we attempt to load this file? */\n    test(url) {\n      const ext = path.extname(url).slice(1);\n      return !!supported[ext] || mimes.some((mime) => url.startsWith(`data:${mime}`));\n    },\n    /** Load the sound file, this is mostly handled by Sound.from() */\n    async load(url, asset) {\n      const sound = await new Promise((resolve, reject) => Sound.from({\n        ...asset.data,\n        url,\n        preload: true,\n        loaded(err, sound2) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(sound2);\n          }\n          asset.data?.loaded?.(err, sound2);\n        }\n      }));\n      getInstance().add(getAlias(asset), sound);\n      return sound;\n    },\n    /** Remove the sound from the library */\n    async unload(_sound, asset) {\n      getInstance().remove(getAlias(asset));\n    }\n  }\n};\nextensions$1.add(soundAsset);\n\nexport { soundAsset };\n//# sourceMappingURL=soundAsset.mjs.map\n", "import * as index from './filters/index.mjs';\nexport { index as filters };\nimport * as index$1 from './htmlaudio/index.mjs';\nexport { index$1 as htmlaudio };\nimport { setInstance } from './instance.mjs';\nimport { SoundLibrary } from './SoundLibrary.mjs';\nimport * as index$2 from './utils/index.mjs';\nexport { index$2 as utils };\nimport * as index$3 from './webaudio/index.mjs';\nexport { index$3 as webaudio };\nexport { Filterable } from './Filterable.mjs';\nexport { Filter } from './filters/Filter.mjs';\nexport { Sound } from './Sound.mjs';\nexport { soundAsset } from './soundAsset.mjs';\nexport { SoundSprite } from './SoundSprite.mjs';\n\nconst sound = setInstance(new SoundLibrary());\n\nexport { SoundLibrary, sound };\n//# sourceMappingURL=index.mjs.map\n", "import { PlayOptions, Sound, sound, SoundSourceMap } from '@pixi/sound';\nimport { gsap } from 'gsap';\nimport { Assets, AssetsManifest, UnresolvedAsset } from 'pixi.js';\nimport { Signal } from '../../signals';\nimport { Logger } from '../../utils';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\n\nimport { IApplication } from '../../core';\nimport { AudioChannel, IAudioChannel } from './AudioChannel';\nimport { AudioInstance, IAudioInstance } from './AudioInstance';\nimport TweenVars = gsap.TweenVars;\n\nexport type SoundDetail = { id: string; instance: IAudioInstance; channelName: string };\nexport type ChannelVolumeDetail = { channel: IAudioChannel; volume: number };\nexport type ChannelName = 'music' | 'sfx' | 'voiceover' | (string & {});\n\nexport interface IAudioManagerPlugin<C extends ChannelName = ChannelName> extends IPlugin {\n  onSoundStarted: Signal<(detail: SoundDetail) => void>;\n  onSoundEnded: Signal<(detail: SoundDetail) => void>;\n  onMasterVolumeChanged: Signal<(volume: number) => void>;\n  onChannelVolumeChanged: Signal<(detail: ChannelVolumeDetail) => void>;\n  onMuted: Signal<(muted: boolean) => void>;\n\n  masterVolume: number;\n  muted: boolean;\n  channels: Map<string, IAudioChannel>;\n  music: IAudioChannel;\n  sfx: IAudioChannel;\n  voiceover: IAudioChannel;\n  vo: IAudioChannel;\n\n  createChannel(name: string): void;\n\n  play(soundId: string, channelName: C, options?: PlayOptions): Promise<IAudioInstance>;\n\n  isPlaying(soundId: string, channelName: C): boolean;\n\n  load(soundId: string | string[], channelName: C, options?: PlayOptions): void;\n\n  stop(soundId: string, channelName: C): IAudioInstance | undefined;\n\n  setChannelVolume(channelName: C | C[], volume: number): void;\n\n  getChannel(name: C): IAudioChannel | undefined;\n\n  addAllFromManifest(manifest: AssetsManifest): void;\n\n  addAllFromBundle(bundleName: string, manifest?: AssetsManifest | string | undefined): void;\n\n  add(soundAsset: UnresolvedAsset): void;\n\n  fade(soundId: string, channelName: C, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  fadeIn(soundId: string, channelName: C, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  fadeOut(soundId: string, channelName: C, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  crossFade(outSoundId: string, inSoundId: string, channelName: C, duration?: number): Promise<gsap.core.Tween | null>;\n\n  mute(): void;\n\n  unmute(): void;\n\n  pause(): void;\n\n  resume(): void;\n\n  suspend(): void;\n\n  restore(): Promise<void>;\n\n  getAudioInstance(soundId: string, channelName: C): IAudioInstance | undefined;\n\n  stopAll(fade?: boolean, duration?: number, props?: TweenVars): void;\n}\n\n/**\n * AudioManager is a class that manages audio playback in the application.\n * It provides methods to play, stop, fade in/out, and crossfade sounds.\n * It also allows you to create and manage audio channels.\n *\n * @example\n * const audioManager = new AudioManager();\n * audioManager.play('soundId', 'music');\n */\nexport class AudioManagerPlugin<C extends ChannelName = ChannelName> extends Plugin implements IAudioManagerPlugin<C> {\n  // signals\n  /**\n   * Signal that is emitted when a sound starts playing.\n   * The callback function receives a SoundDetail object.\n   */\n  public onSoundStarted: Signal<(detail: SoundDetail) => void> = new Signal<(detail: SoundDetail) => void>();\n  /**\n   * Signal that is emitted when a sound ends.\n   * The callback function receives a SoundDetail object.\n   */\n  public onSoundEnded: Signal<(detail: SoundDetail) => void> = new Signal<(detail: SoundDetail) => void>();\n  /**\n   * Signal that is emitted when the system is muted or unmuted.\n   */\n  public onMuted: Signal<(muted: boolean) => void> = new Signal<(muted: boolean) => void>();\n  /**\n   * Signal that is emitted when the master volume changes.\n   * The callback function receives the new volume as a number.\n   */\n  public onMasterVolumeChanged: Signal<(volume: number) => void> = new Signal<(volume: number) => void>();\n  /**\n   * Signal that is emitted when a channel's volume changes.\n   * The callback function receives a ChannelVolumeDetail object.\n   */\n  public onChannelVolumeChanged: Signal<(detail: ChannelVolumeDetail) => void> = new Signal<\n    (detail: ChannelVolumeDetail) => void\n  >();\n  private _storedVolume: number | undefined = undefined;\n  private _paused: boolean = false;\n  private _idMap: Map<string, string> = new Map();\n\n  /**\n   * Creates a new AudioManager instance.\n   * @param {string} id - The ID of the AudioManager. Default is 'AudioManager'.\n   */\n  public constructor(id: string = 'audio') {\n    super(id);\n\n    this.createChannel('music');\n    this.createChannel('sfx');\n    this.createChannel('voiceover');\n  }\n\n  private _masterVolume: number = 1;\n\n  /**\n   * Gets the master volume.\n   * @returns {number} The master volume.\n   */\n  get masterVolume(): number {\n    return this._masterVolume;\n  }\n\n  /**\n   * Sets the master volume.\n   * @param {number} value - The new master volume.\n   */\n  set masterVolume(value: number) {\n    this._masterVolume = value;\n    this._channels.forEach((channel) => channel.updateVolume());\n  }\n\n  private _muted: boolean = false;\n\n  /**\n   * Gets whether the audio is muted.\n   * @returns {boolean} True if the audio is muted, false otherwise.\n   */\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  /**\n   * Sets whether the audio is muted.\n   * @param {boolean} value - True to mute the audio, false to unmute.\n   */\n  set muted(value: boolean) {\n    this._muted = value;\n    this._setMuted();\n  }\n\n  private _channels: Map<C, IAudioChannel> = new Map();\n\n  /**\n   * Gets the map of audio channels.\n   * @returns {Map<string, IAudioChannel>} The map of audio channels.\n   */\n  get channels(): Map<string, IAudioChannel> {\n    return this._channels;\n  }\n\n  get music(): IAudioChannel {\n    return this._channels.get('music' as C)!;\n  }\n\n  get sfx(): IAudioChannel {\n    return this._channels.get('sfx' as C)!;\n  }\n\n  get voiceover(): IAudioChannel {\n    return this._channels.get('voiceover' as C)!;\n  }\n\n  get vo(): IAudioChannel {\n    return this._channels.get('voiceover' as C)!;\n  }\n\n  public destroy(): void {\n    this._channels.forEach((channel) => {\n      channel.destroy();\n    });\n    this._channels.clear();\n    this.onSoundStarted.disconnectAll();\n    this.onSoundEnded.disconnectAll();\n    this.onMuted.disconnectAll();\n    this.onMasterVolumeChanged.disconnectAll();\n    this.onChannelVolumeChanged.disconnectAll();\n\n    super.destroy();\n  }\n\n  /**\n   * Initializes the AudioManager.\n   * @param {IApplication} app\n   * @returns {Promise<void>}\n   */\n  public initialize(app: IApplication): Promise<void> {\n    if (typeof app?.manifest === 'object') {\n      this.addAllFromManifest(app.manifest);\n    }\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * Creates a new audio channel.\n   * @param {string} name\n   */\n  public createChannel(name: string): void {\n    if (this._channels.has(name as C)) {\n      throw new Error(`Channel with name ${name} already exists.`);\n    }\n    const channel = new AudioChannel<C>(name as C, this);\n    this._channels.set(name as C, channel);\n  }\n\n  /**\n   * Sets the volume of the specified channel.\n   * @param {ChannelName|ChannelName[]} channelName\n   * @param {number} volume\n   */\n  public setChannelVolume(channelName: C | C[], volume: number): void {\n    if (!Array.isArray(channelName)) {\n      channelName = [channelName];\n    }\n    channelName.forEach((name) => this._setChannelVolume(name as C, volume));\n  }\n\n  /**\n   * Gets the audio channel with the specified name.\n   * @param {C} name\n   * @returns {IAudioChannel | undefined}\n   */\n  public getChannel(name: C): IAudioChannel | undefined {\n    return this._channels.get(name);\n  }\n\n  /**\n   * Mutes the audio.\n   */\n  public mute() {\n    this._muted = true;\n    this._setMuted();\n  }\n\n  /**\n   * Unmutes the audio.\n   */\n  public unmute() {\n    this._muted = false;\n    this._setMuted();\n  }\n\n  /**\n   * Pauses the audio.\n   */\n  public pause(): void {\n    this._paused = true;\n    this._setPaused();\n  }\n\n  /**\n   * Resumes the audio.\n   */\n  public resume(): void {\n    this._paused = false;\n    this._setPaused();\n  }\n\n  /**\n   * Adds all sound assets from the specified manifest.\n   * @param {AssetsManifest} manifest\n   */\n  public addAllFromManifest(manifest: AssetsManifest) {\n    manifest.bundles.forEach((bundle) => {\n      this.addAllFromBundle(bundle.name, manifest);\n    });\n  }\n\n  /**\n   * Adds all sound assets from the specified bundle.\n   * @param {string} bundleName\n   * @param {AssetsManifest | string | undefined} manifest\n   */\n  public addAllFromBundle(bundleName: string, manifest?: AssetsManifest | string | undefined) {\n    if (!manifest) {\n      manifest = this.app.manifest;\n    }\n    if (manifest === undefined || typeof manifest === 'string') {\n      throw new Error('Manifest is not available');\n    }\n    const bundle = manifest.bundles.find((b) => b.name === bundleName);\n    if (bundle === undefined) {\n      throw new Error(`Bundle with name ${bundleName} does not exist.`);\n    }\n    if (!Array.isArray(bundle?.assets)) {\n      bundle.assets = [bundle.assets];\n    }\n    bundle.assets.forEach((asset) => {\n      // detect sound assets by asset.src extension\n      let src = asset.src;\n      if (Array.isArray(src)) {\n        src = src[0];\n      }\n      const ext = (src as string).split('.').pop();\n      if (ext === 'mp3' || ext === 'ogg' || ext === 'wav' || ext === 'webm') {\n        this.add(asset);\n      }\n    });\n  }\n\n  /**\n   * Adds a sound asset to the AudioManager.\n   * @param {UnresolvedAsset} soundAsset\n   */\n  public add(soundAsset: UnresolvedAsset): void {\n    let alias = soundAsset.alias;\n    if (!Array.isArray(soundAsset.alias)) {\n      alias = [soundAsset.alias as string];\n    }\n    if (alias) {\n      const obj: SoundSourceMap = {};\n      (alias as string[]).forEach((a: string) => {\n        if (a === undefined) {\n          return;\n        }\n        // @ts-expect-error soundAsset is not a string error\n        obj[a] = soundAsset.src;\n      });\n      sound.add(obj);\n    }\n  }\n\n  isPlaying(soundId: string, channelName: C): boolean {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      return channel.get(soundId)?.isPlaying === true;\n    }\n    return false;\n  }\n\n  /**\n   * Plays a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {C} channelName\n   * @param {PlayOptions} options\n   * @returns {Promise<IAudioInstance>}\n   */\n  public async play(soundId: string, channelName: C = 'sfx' as C, options?: PlayOptions): Promise<IAudioInstance> {\n    if (this._idMap.has(soundId)) {\n      soundId = this._idMap.get(soundId) as string;\n    }\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n      const audioInstance = channel.add(\n        soundId,\n        new AudioInstance<C>(soundId, channel, this as IAudioManagerPlugin<C>),\n      );\n      const mediaInstance = await sound.play(soundId, options);\n      audioInstance.media = mediaInstance;\n      if (options?.volume !== undefined) {\n        mediaInstance.volume = options.volume;\n\n        audioInstance.onStart.connect(() => {\n          () => this._soundStarted(soundId, audioInstance, channelName);\n        });\n        audioInstance.onEnd.connect(() => {\n          () => this._soundEnded(soundId, audioInstance, channelName);\n        });\n      }\n      audioInstance.isPlaying = true;\n      return audioInstance;\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Stops a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {C} channelName\n   * @returns {IAudioInstance | undefined}\n   */\n  public stop(soundId: string, channelName: C = 'sfx' as C): IAudioInstance | undefined {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      return channel.remove(soundId);\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Fades in a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {C} channelName\n   * @param {gsap.TweenVars} props\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fadeIn(\n    soundId: string,\n    channelName: C = 'music' as C,\n    props: gsap.TweenVars,\n  ): Promise<gsap.core.Tween | null> {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n    }\n    if (!channel?.get(soundId)) {\n      await this.play(soundId, channelName, { volume: 0 });\n    }\n    if (props?.volume === 0) {\n      Logger.warn('fadeIn volume is 0', soundId, channelName, props);\n    }\n    const fadeProps = Object.assign({ volume: props?.volume ?? 1, duration: 1, ease: 'linear.easeNone' }, props);\n    return this.fade(soundId, channelName, fadeProps);\n  }\n\n  /**\n   * Fades out a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {C} channelName\n   * @param {Partial<gsap.TweenVars>} props\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fadeOut(\n    soundId: string,\n    channelName: C = 'music' as C,\n    props: Partial<gsap.TweenVars> = { volume: 0 },\n  ): Promise<gsap.core.Tween | null> {\n    if (!props) {\n      props = {};\n    }\n    if (props?.volume === undefined) {\n      props.volume = 0;\n    }\n    if (props?.volume > 0) {\n      Logger.warn('fadeOut volume should probably be 0', soundId, channelName, props);\n    }\n    const fadeProps = Object.assign({ volume: 0, duration: 1, ease: 'linear.easeNone' }, props);\n    return this.fade(soundId, channelName, fadeProps, true);\n  }\n\n  /**\n   * Crossfades between two sounds in the specified channel.\n   * @param {string} outSoundId\n   * @param {string} inSoundId\n   * @param {ChannelName} channelName\n   * @param {number} duration\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async crossFade(\n    outSoundId: string,\n    inSoundId: string,\n    channelName: ChannelName = 'music',\n    duration: number = 2,\n  ): Promise<gsap.core.Tween | null> {\n    const crossFadeProps = { duration, ease: 'linear.easeNone' };\n    void this.fadeOut(outSoundId, channelName as C, crossFadeProps);\n    return this.fadeIn(inSoundId, channelName as C, crossFadeProps);\n  }\n\n  /**\n   * Fades a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @param {gsap.TweenVars} props\n   * @param {boolean} stopOnComplete\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fade(\n    soundId: string,\n    channelName: ChannelName = 'music',\n    props: gsap.TweenVars,\n    stopOnComplete: boolean = false,\n  ): Promise<gsap.core.Tween | null> {\n    const channel = this._channels.get(channelName as C);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n    }\n    const soundInstance = channel?.get(soundId);\n    if (soundInstance) {\n      const tween = gsap.to(soundInstance, props);\n      tween.eventCallback('onComplete', () => {\n        if (stopOnComplete) {\n          this.stop(soundId, channelName as C);\n        }\n      });\n      return tween;\n    }\n    return null;\n  }\n\n  /**\n   * Restores the audio state after it has been suspended.\n   */\n  public async restore() {\n    const ctx = sound?.context?.audioContext;\n    if (ctx) {\n      await ctx.resume();\n    }\n    if (this._storedVolume !== undefined) {\n      this.masterVolume = this._storedVolume;\n    }\n    this.muted = this._muted;\n    this.resume();\n  }\n\n  /**\n   * Suspends the audio by setting the master volume to 0 and pausing all sounds.\n   */\n  public suspend() {\n    this._storedVolume = this._masterVolume;\n    this.masterVolume = 0;\n    this.pause();\n  }\n\n  public getAudioInstance(soundId: string, channelName: C = 'sfx' as C): IAudioInstance | undefined {\n    const channel = this._channels.get(channelName);\n    soundId = this._verifySoundId(soundId);\n    if (channel) {\n      return channel.get(soundId);\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  public load(soundId: string | string[], channelName: C = 'sfx' as C, options?: PlayOptions): void {\n    if (!Array.isArray(soundId)) {\n      soundId = [soundId];\n    }\n    for (let id of soundId) {\n      if (this._idMap.has(id)) {\n        soundId = this._idMap.get(id) as string;\n      }\n      const channel = this._channels.get(channelName);\n      if (channel) {\n        id = this._verifySoundId(id);\n        // const audioInstance = new AudioInstance(id, channel, this);\n        const soundInstance = sound.find(id);\n        soundInstance.options = { ...options, autoPlay: false };\n        const audioInstance = channel.add(id, new AudioInstance<C>(id, channel, this as IAudioManagerPlugin<C>));\n        audioInstance.media = soundInstance.instances[0];\n        audioInstance.pause();\n      } else {\n        throw new Error(`Channel ${channelName} does not exist.`);\n      }\n    }\n  }\n\n  public stopAll(fade: boolean = false, duration: number = 1, props: TweenVars = {}) {\n    if (fade) {\n      // get all playing sounds\n      const playingSounds: IAudioInstance[] = [];\n      this._channels.forEach((channel) => {\n        channel.instances.forEach((instance) => {\n          if (instance.isPlaying) {\n            instance.storedVolume = instance.volume;\n            playingSounds.push(instance);\n          }\n        });\n      });\n      gsap.to(playingSounds, {\n        volume: 0,\n        duration,\n        ...props,\n        onComplete: () => {\n          playingSounds.forEach((instance) => {\n            instance.stop();\n            instance.volume = instance.storedVolume;\n          });\n        },\n      });\n    } else {\n      sound.stopAll();\n    }\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onSoundStarted', 'onSoundEnded', 'onMuted', 'onMasterVolumeChanged', 'onChannelVolumeChanged'];\n  }\n\n  private _verifySoundId(soundId: string): string {\n    const originalSoundId = soundId;\n    if (this._idMap.has(soundId)) {\n      return this._idMap.get(soundId) as string;\n    }\n    // try appending .mp3 or .ogg\n    if (!sound.exists(soundId)) {\n      // Logger.log(`Sound with ID ${soundId} does not exist. Trying different extensions.`);\n      if (sound.exists(soundId + '.mp3')) {\n        soundId += '.mp3';\n      } else if (sound.exists(soundId + '.ogg')) {\n        soundId += '.ogg';\n      } else if (sound.exists(soundId + '.wav')) {\n        soundId += '.wav';\n      } else {\n        soundId = originalSoundId;\n        let sound = Assets.get(soundId);\n        if (!sound) {\n          soundId = originalSoundId + '.mp3';\n          sound = Assets.get(soundId);\n        }\n        if (!sound) {\n          soundId = originalSoundId + '.ogg';\n          sound = Assets.get(soundId);\n        }\n        if (!sound) {\n          soundId = originalSoundId + '.wav';\n          sound = Assets.get(soundId);\n        }\n        if (sound) {\n          this._findAndAddFromManifest(soundId, sound);\n        } else {\n          throw new Error(`Sound with ID ${soundId} does not exist.`);\n        }\n      }\n    }\n    this._idMap.set(soundId, soundId);\n    return soundId;\n  }\n\n  private _findAndAddFromManifest(soundId: string, sound: Sound) {\n    const manifest = this.app.manifest;\n    if (manifest === undefined || typeof manifest === 'string') {\n      throw new Error('Manifest is not available');\n    }\n    for (let i = 0; i < manifest.bundles.length; i++) {\n      const bundle = manifest.bundles[i];\n      if (!Array.isArray(bundle?.assets)) {\n        bundle.assets = [bundle.assets];\n      }\n      for (let j = 0; j < bundle.assets.length; j++) {\n        const asset = bundle.assets[j];\n        // detect sound assets by asset.src extension\n        const src = asset.src;\n        const filename = sound.url.split('/').pop() ?? '';\n        if (Array.isArray(src)) {\n          for (let s = 0; s < src.length; s++) {\n            const urlOrResolvedSrc = src[s];\n            let url: string;\n            if (typeof urlOrResolvedSrc !== 'string') {\n              url = urlOrResolvedSrc.src!;\n            } else {\n              url = urlOrResolvedSrc as string;\n            }\n            if (url.includes(filename)) {\n              this.add(asset);\n              return;\n            }\n          }\n        } else {\n          if (src?.includes(filename)) {\n            this.add(asset);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  private _setMuted(): void {\n    this._channels.forEach((channel) => {\n      channel.muted = this._muted;\n    });\n    if (this._muted) {\n      sound.muteAll();\n    } else {\n      sound.unmuteAll();\n    }\n    this.onMuted.emit(this._muted);\n  }\n\n  /**\n   * @private\n   */\n  private _setPaused(): void {\n    if (this._paused) {\n      sound.pauseAll();\n    } else {\n      sound.resumeAll();\n    }\n  }\n\n  /**\n   * Sets the volume of the specified channel.\n   * @param {C} channelName\n   * @param {number} volume\n   * @private\n   */\n  private _setChannelVolume(channelName: C, volume: number): void {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      channel.volume = volume;\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Sound started event handler. Emit the onSoundStarted signal.\n   * @param {string} id\n   * @param {IAudioInstance} instance\n   * @param {C} channelName\n   * @private\n   */\n  private _soundStarted(id: string, instance: IAudioInstance, channelName: C): void {\n    // Logger.log(`${id} started in ${channelName} channel`);\n    this.onSoundStarted.emit({ id, instance, channelName });\n  }\n\n  /**\n   * Sound ended event handler. Emit the onSoundEnded signal.\n   * @param {string} id\n   * @param {IAudioInstance} instance\n   * @param {C} channelName\n   * @private\n   */\n  private _soundEnded(id: string, instance: IAudioInstance, channelName: C): void {\n    // Logger.log(`${id} ended in ${channelName} channel`);\n    this.onSoundEnded.emit({ id, instance, channelName });\n  }\n}\n", "import { Bounds, Container, DestroyOptions, Graphics, PointLike } from 'pixi.js';\nimport { Application } from '../../Application';\nimport { bindAllMethods, resolvePointLike } from '../../utils';\nimport type { IFocusable } from './FocusManagerPlugin';\n\nexport type FocusOutlinerConfig = {\n  color: number;\n  shape: 'rectangle' | 'rounded rectangle';\n  lineWidth?: number;\n  radius?: number;\n};\n\nexport interface IFocusOutliner {\n  position: PointLike;\n  focusBounds: Bounds;\n\n  draw(focusTarget: IFocusable): void;\n\n  clear(): void;\n\n  destroy(args?: DestroyOptions): void;\n\n  setFocusTarget(focusTarget: IFocusable): void;\n\n  clearFocusTarget(): void;\n\n  updatePosition(): void;\n}\n\nexport class FocusOutliner extends Container implements IFocusOutliner {\n  focusBounds: Bounds;\n  focusTarget: IFocusable | null;\n  protected _config: FocusOutlinerConfig;\n  protected _graphics: Graphics;\n\n  constructor(config?: Partial<FocusOutlinerConfig>) {\n    super();\n    bindAllMethods(this);\n    this._config = {\n      color: 0x00ffff,\n      shape: 'rounded rectangle',\n      radius: 8,\n      lineWidth: 2,\n      ...config,\n    };\n    this._graphics = new Graphics();\n    this.addChild(this._graphics);\n  }\n\n  public draw(focusTarget: IFocusable): void {\n    this.clear();\n    this.setFocusTarget(focusTarget);\n    if (!this.focusTarget) {\n      return;\n    }\n    this._graphics.strokeStyle = { width: this._config.lineWidth, color: this._config.color, alpha: 1 };\n    if (this._config.shape === 'rectangle') {\n      this._graphics.rect(0, 0, this.focusBounds.width, this.focusBounds.height);\n    } else {\n      this._graphics.roundRect(0, 0, this.focusBounds.width, this.focusBounds.height, this._config.radius);\n    }\n    this._graphics.stroke();\n  }\n\n  public clear(): void {\n    this.clearFocusTarget();\n  }\n\n  public destroy(options?: DestroyOptions) {\n    this.clear();\n    this._graphics.destroy();\n    super.destroy(options);\n  }\n\n  public setFocusTarget(focusTarget: IFocusable) {\n    if (focusTarget) {\n      this.focusTarget = focusTarget;\n      this.focusBounds = this.focusTarget.getFocusArea().clone();\n      Application.getInstance().ticker.add(this.updatePosition);\n    }\n  }\n\n  public clearFocusTarget() {\n    this.focusTarget = null;\n    Application.getInstance().ticker.remove(this.updatePosition);\n  }\n\n  public updatePosition() {\n    if (!this.focusTarget) {\n      return;\n    }\n    const pos = this.focusTarget.getGlobalPosition();\n    const focusPos = this.focusTarget.getFocusPosition();\n    if (focusPos) {\n      const fp = resolvePointLike(focusPos);\n      pos.x += fp.x;\n      pos.y += fp.y;\n    }\n\n    this.position.set(pos.x, pos.y);\n  }\n}\n", "import { Bounds, Container, Point, PointerEvents } from 'pixi.js';\nimport { IApplication } from '../../core';\nimport { Signal } from '../../signals';\nimport type { Constructor, PointLike as DillPixelPointLike } from '../../utils';\nimport { bindMethods, getLastMapEntry, getPreviousMapEntry, Logger } from '../../utils';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\nimport type { IFocusOutliner } from './FocusOutliner';\nimport { FocusOutliner, FocusOutlinerConfig } from './FocusOutliner';\n\nexport type FocusManagerPluginOptions = {\n  outliner: IFocusOutliner | Partial<FocusOutlinerConfig> | typeof FocusOutliner;\n  usePixiAccessibility: boolean;\n};\n\nexport interface IFocusable extends Container {\n  isFocused: boolean;\n  isKeyDown: boolean;\n  focusEnabled: boolean;\n  tabIndex: number;\n  _accessibleDiv?: HTMLElement;\n\n  // pixi accessibility features\n  accessible: boolean;\n  accessibleType: string;\n  accessibleTitle: string;\n  accessibleHint: string;\n  accessiblePointerEvents?: PointerEvents;\n  accessibleChildren: boolean;\n\n  // signals\n  onFocusIn: Signal<(focusable: IFocusable) => void>;\n  onFocusOut: Signal<(focusable: IFocusable) => void>;\n  onFocus: Signal<(focusable: IFocusable) => void>;\n  onBlur: Signal<(focusable: IFocusable) => void>;\n\n  focusIn(): void;\n\n  focusOut(): void;\n\n  click(): void;\n\n  blur(): void;\n\n  getGlobalPosition(): Point;\n\n  getFocusArea(): Bounds;\n\n  getFocusPosition(): DillPixelPointLike | null;\n\n  getFocusSize(): DillPixelPointLike | null;\n}\n\nexport interface IFocusLayer {\n  currentFocusable: IFocusable | null;\n  defaultFocusable: IFocusable | null;\n  lastFocusable: IFocusable | null;\n  current: boolean;\n  availableFocusables: IFocusable[];\n\n  setCurrentFocusable(focusable: IFocusable | null): IFocusable | null;\n\n  hasFocusable(focusable: IFocusable | null): boolean;\n\n  setCurrent(): void;\n\n  addFocusable(focusable: IFocusable, isDefault?: boolean): void;\n\n  removeFocusable(focusable: IFocusable): void;\n\n  sortFocusables(): void;\n\n  sortFocusablesByPosition(): void;\n\n  next(): IFocusable | null;\n\n  prev(): IFocusable | null;\n}\n\nclass FocusLayer implements IFocusLayer {\n  public currentFocusable: IFocusable | null = null;\n  public lastFocusable: IFocusable | null = null;\n  public defaultFocusable: IFocusable | null = null;\n\n  private _focusables: IFocusable[] = [];\n  private _currentIndex: number = 0;\n\n  constructor(public id: string | number) {}\n\n  private _current: boolean = false;\n\n  set current(value: boolean) {\n    this._current = value;\n    this.setCurrent();\n  }\n\n  public get availableFocusables(): IFocusable[] {\n    return this._focusables.filter((f) => f.focusEnabled);\n  }\n\n  public setCurrent() {\n    if (this._current) {\n      if (!this.defaultFocusable) {\n        this.defaultFocusable = this._focusables[0];\n      }\n      this.sortFocusables();\n    } else {\n      for (let i = 0; i < this._focusables.length; i++) {\n        this._focusables[i].accessible = false;\n      }\n    }\n  }\n\n  public hasFocusable(focusable: IFocusable | null) {\n    if (!focusable) {\n      return false;\n    }\n    return this._focusables.indexOf(focusable) > -1;\n  }\n\n  public addFocusable(focusable: IFocusable, isDefault: boolean = false): void {\n    this._focusables.push(focusable);\n    if (isDefault) {\n      this.defaultFocusable = focusable;\n    }\n    if (this._current) {\n      this.sortFocusables();\n    }\n  }\n\n  public removeFocusable(focusable: IFocusable) {\n    const index = this._focusables.indexOf(focusable);\n    if (index !== -1) {\n      this._focusables.splice(index, 1);\n\n      if (this.currentFocusable === focusable) {\n        this.currentFocusable = null;\n      }\n\n      if (this.lastFocusable === focusable) {\n        this.lastFocusable = null;\n      }\n\n      if (this.defaultFocusable === focusable) {\n        this.defaultFocusable = null;\n      }\n    }\n    if (this._current) {\n      this.sortFocusables();\n    }\n  }\n\n  public sortFocusables() {\n    for (let i = 0; i < this._focusables.length; i++) {\n      this._focusables[i].accessible = this._current;\n      this._focusables[i].tabIndex = this._current ? Math.max(i, 1) + 1 : -1;\n      if (this._focusables[i] === this.defaultFocusable) {\n        this._focusables[i].tabIndex = this._current ? 1 : -1;\n      }\n    }\n    if (this._current) {\n      this._focusables.sort((a, b) => a.tabIndex - b.tabIndex);\n    }\n  }\n\n  public sortFocusablesByPosition() {\n    if (this._current) {\n      this._focusables.sort((a: IFocusable, b: IFocusable) => {\n        if (a.position.y !== b.position.y) {\n          return a.position.y - b.position.y;\n        }\n        return a.position.x - b.position.x;\n      });\n    }\n  }\n\n  setCurrentFocusable(focusable: IFocusable | null) {\n    if (focusable) {\n      this._currentIndex = this._focusables.indexOf(focusable);\n      this.currentFocusable = focusable;\n    } else {\n      this._currentIndex = -1;\n      this.currentFocusable = null;\n    }\n    return this.currentFocusable;\n  }\n\n  public next() {\n    this._currentIndex = this._currentIndex + 1;\n    if (this._currentIndex >= this._focusables.length) {\n      this._currentIndex = 0;\n    }\n    this.currentFocusable = this._focusables[this._currentIndex];\n    return this.currentFocusable;\n  }\n\n  public prev() {\n    this._currentIndex = this._currentIndex - 1;\n    if (this._currentIndex < 0) {\n      this._currentIndex = this._focusables.length - 1;\n    }\n    this.currentFocusable = this._focusables[this._currentIndex];\n    return this.currentFocusable;\n  }\n}\n\nexport type FocusChangeDetail = { layer: string | number | null; focusable: IFocusable | null };\n\nexport interface IFocusManagerPlugin extends IPlugin {\n  readonly view: Container;\n  readonly layerCount: number;\n  readonly currentLayer: IFocusLayer | undefined;\n  readonly currentLayerId: string | number | null;\n  readonly active: boolean;\n  readonly layers: Map<string | number, IFocusLayer>;\n\n  onFocusManagerActivated: Signal<() => void>;\n  onFocusManagerDeactivated: Signal<() => void>;\n  onFocusLayerChange: Signal<(currentLayerId: string | number) => void>;\n  onFocusChange: Signal<(detail: FocusChangeDetail) => void>;\n\n  enabled: boolean;\n\n  restart(): void;\n\n  focus(focusable: IFocusable): void;\n\n  forceFocus(focusable: IFocusable): void;\n\n  setFocus(focusable: IFocusable): void;\n\n  addFocusLayer(layerId?: string | number, setAsCurrent?: boolean, focusables?: IFocusable | IFocusable[]): IFocusLayer;\n\n  removeFocusLayer(layerId?: string | number): void;\n\n  setFocusLayer(layerId: string | number): void;\n\n  setLayerOrder(layerIds: (string | number)[]): void;\n\n  add(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault?: boolean): void;\n\n  addFocusable(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault?: boolean): void;\n\n  remove(focusable: IFocusable | IFocusable[]): void;\n\n  removeFocusable(focusable: IFocusable | IFocusable[]): void;\n\n  deactivate(): void;\n\n  clearFocus(): void;\n\n  removeAllFocusLayers(): void;\n\n  sortFocusablesByPosition(): void;\n}\n\nexport class FocusManagerPlugin extends Plugin implements IFocusManagerPlugin {\n  public override readonly id: string = 'focus';\n  public readonly view = new Container();\n  // signals\n  public onFocusManagerActivated: Signal<() => void> = new Signal<() => void>();\n  public onFocusManagerDeactivated: Signal<() => void> = new Signal<() => void>();\n  public onFocusLayerChange: Signal<(currentLayerId: string | number) => void> = new Signal<\n    (currentLayerId: string | number) => void\n  >();\n  public onFocusChange: Signal<(detail: FocusChangeDetail) => void> = new Signal<(detail: FocusChangeDetail) => void>();\n  //\n  private _focusOutliner: IFocusOutliner;\n  private _focusTarget: IFocusable | null = null;\n  private _keyboardActive: boolean = false;\n  private _options: FocusManagerPluginOptions;\n\n  private _layers: Map<string | number, IFocusLayer> = new Map();\n\n  public get layers(): Map<string | number, IFocusLayer> {\n    return this._layers;\n  }\n\n  private _currentLayerId: string | number | null = null;\n\n  get currentLayerId(): string | number | null {\n    return this._currentLayerId;\n  }\n\n  get currentLayer(): IFocusLayer | undefined {\n    if (!this._currentLayerId) {\n      return undefined;\n    }\n    return this._layers.get(this._currentLayerId);\n  }\n\n  private _active: boolean = false;\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  private _enabled: boolean = true;\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  set enabled(value: boolean) {\n    this._enabled = value;\n  }\n\n  public get layerCount(): number {\n    return this._layers.size;\n  }\n\n  public sortFocusablesByPosition() {\n    this._getCurrentLayer()?.sortFocusablesByPosition();\n  }\n\n  public initialize(app: IApplication): void {\n    bindMethods(this, 'removeAllFocusLayers', '_handleGlobalMouseMove', '_handleGlobalPointerDown');\n    const options: Partial<FocusManagerPluginOptions> = app.config?.focus || {};\n    options.usePixiAccessibility = options.usePixiAccessibility ?? false;\n    this._focusOutliner =\n      typeof options?.outliner === 'function'\n        ? new (options.outliner as Constructor<IFocusOutliner>)()\n        : new FocusOutliner(options.outliner as Partial<FocusOutlinerConfig>);\n\n    this._options = options as FocusManagerPluginOptions;\n\n    this.view.addChild(this._focusOutliner as unknown as Container);\n\n    this._updatePixiAccessibility();\n\n    this._setupKeyboardListeners();\n    this._setupAppListeners();\n  }\n\n  public destroy(): void {\n    this._removeGlobalListeners();\n    this.deactivate();\n    this._focusOutliner.destroy();\n    this._layers.clear();\n    super.destroy();\n  }\n\n  public deactivate(): void {\n    this._setTarget(null);\n    this._updateOutliner();\n    this._active = false;\n  }\n\n  public add(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault: boolean = false): void {\n    this.addFocusable(focusable, layerId, isDefault);\n  }\n\n  public addFocusable(\n    focusable: IFocusable | IFocusable[],\n    layerId?: string | number | null | undefined,\n    isDefault: boolean = false,\n  ): void {\n    if (layerId === undefined || layerId == null) {\n      layerId = this._currentLayerId ?? null;\n    }\n    const layer = this._layers.get(layerId!);\n    if (!layer) {\n      Logger.error(`Layer with ID ${layerId} does not exist.`);\n      return;\n    }\n    if (!Array.isArray(focusable)) {\n      focusable = [focusable];\n    }\n    (focusable as IFocusable[]).forEach((f, idx) => {\n      layer.addFocusable(f, idx === 0 && isDefault);\n    });\n\n    if (this._active && isDefault) {\n      this._setTarget(layer.currentFocusable || layer.defaultFocusable || null, !this._active);\n    }\n  }\n\n  public remove(focusable: IFocusable | IFocusable[]) {\n    this.removeFocusable(focusable);\n  }\n\n  public removeFocusable(focusable: IFocusable | IFocusable[]) {\n    if (!Array.isArray(focusable)) {\n      focusable = [focusable];\n    }\n    this._layers.forEach((layer) => {\n      (focusable as IFocusable[]).forEach((f) => {\n        layer.removeFocusable(f);\n      });\n    });\n    if (this._focusTarget && focusable.includes(this._focusTarget)) {\n      this._setTarget(null);\n    }\n  }\n\n  public setLayerOrder(layerIds: (string | number)[]): void {\n    const newLayers: Map<string | number, IFocusLayer> = new Map();\n    layerIds.forEach((layerId) => {\n      if (!this._layers.has(layerId)) {\n        throw new Error(`Layer with ID ${layerId} does not exist.`);\n      }\n      newLayers.set(layerId, this._layers.get(layerId)!);\n    });\n    this._layers = newLayers;\n  }\n\n  public addFocusLayer(\n    layerId?: string | number,\n    setAsCurrent: boolean = true,\n    focusables?: IFocusable | IFocusable[],\n  ): IFocusLayer {\n    if (layerId === undefined) {\n      layerId = this._layers.size;\n    }\n    let newLayer;\n    if (this._layers.has(layerId)) {\n      Logger.error(`Layer with ID ${layerId} already exists.`);\n      newLayer = this._layers.get(layerId)!;\n    } else {\n      newLayer = new FocusLayer(layerId);\n      this._layers.set(layerId, newLayer);\n    }\n\n    if (setAsCurrent || this._currentLayerId === null) {\n      this.setFocusLayer(layerId);\n    }\n    if (focusables) {\n      this.addFocusable(focusables, layerId);\n    }\n    return newLayer;\n  }\n\n  public removeFocusLayer(layerId?: string | number, removeTopLayerIfUndefined = true): void {\n    if (layerId === undefined && removeTopLayerIfUndefined) {\n      return this._removeTopLayer();\n    }\n    if (!this._layers.has(layerId!)) {\n      throw new Error(`Layer with ID ${layerId} does not exist.`);\n    }\n    const nextLayerId = getPreviousMapEntry(this._layers, layerId)?.[0];\n    this._layers.delete(layerId!);\n    this._postDelete(nextLayerId);\n  }\n\n  public restart(reverse: boolean = false) {\n    const layer = this._getCurrentLayer();\n    this._setTarget(\n      reverse\n        ? layer?.availableFocusables?.[layer?.availableFocusables?.length - 1] || null\n        : layer?.availableFocusables?.[0] || null,\n    );\n  }\n\n  public forceFocus(focusable: IFocusable) {\n    this.focus(focusable);\n  }\n\n  public setFocus(focusable: IFocusable) {\n    this.focus(focusable);\n  }\n\n  public focus(focusable: IFocusable) {\n    this._setTarget(focusable);\n  }\n\n  public setFocusLayer(layerId: string | number): void {\n    if (!this._layers.has(layerId)) {\n      throw new Error(`Layer with ID ${layerId} does not exist.`);\n    }\n    this._currentLayerId = layerId;\n    const currentLayer = this._getCurrentLayer();\n    if (currentLayer) {\n      currentLayer.current = true;\n      this._layers.forEach((layer, key) => {\n        layer.current = key === layerId;\n      });\n      currentLayer.sortFocusables();\n      this._setTarget(currentLayer.currentFocusable || currentLayer.defaultFocusable || null, !this._active);\n    }\n    this.onFocusLayerChange.emit(this._currentLayerId);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public postInitialize(_app: IApplication): Promise<void> | void {}\n\n  public clearFocus() {\n    this._setTarget(null);\n  }\n\n  public removeAllFocusLayers(): void {\n    this._layers.clear();\n    this._setTarget(null);\n  }\n\n  _onKeyDown(e: KeyboardEvent) {\n    if (!this._enabled || (e.key !== 'Tab' && e.key !== 'Enter' && e.key !== ' ' && e.key !== 'Space')) {\n      return;\n    }\n    if (!this._options.usePixiAccessibility) {\n      // e.preventDefault();\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        const layer = this._getCurrentLayer();\n        const focusables = layer?.availableFocusables;\n        if (!focusables) {\n          return;\n        }\n        if (!this._keyboardActive) {\n          this._activate();\n          this._setTarget(this._focusTarget || layer.currentFocusable || layer.defaultFocusable || null);\n        } else {\n          // check if we're on the last focusable\n          if (e.shiftKey) {\n            this._prev();\n          } else {\n            this._next();\n          }\n        }\n      } else if (e.key === 'Enter' || e.key === ' ' || e.key === 'Space') {\n        if (this._focusTarget && this._focusTarget.isFocused) {\n          // @ts-expect-error event assignment\n          this._focusTarget.emit('pointerdown', { type: 'pointerdown' });\n        }\n      }\n    }\n  }\n\n  _onKeyUp(e: any) {\n    if (!this._enabled || (e.key !== 'Enter' && e.key !== ' ' && e.key !== 'Space')) {\n      return;\n    }\n    if (!this._options.usePixiAccessibility) {\n      // e.preventDefault();\n      if (this._focusTarget && this._focusTarget.isFocused) {\n        // @ts-expect-error event assignment\n        this._focusTarget?.emit('click', { type: 'click', originalEvent: e });\n        // @ts-expect-error event assignment\n        this._focusTarget?.emit('pointerup', { type: 'pointerup', originalEvent: e });\n      }\n    }\n  }\n\n  _onMouseMove(e: MouseEvent) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n\n  protected getCoreFunctions(): string[] {\n    return [\n      'addFocusable',\n      'removeFocusable',\n      'setLayerOrder',\n      'addFocusLayer',\n      'removeFocusLayer',\n      'setFocusLayer',\n      'setFocus',\n      'focus',\n      'clearFocus',\n      'removeAllFocusLayers',\n    ];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onFocusManagerActivated', 'onFocusManagerDeactivated', 'onFocusLayerChange', 'onFocusChange'];\n  }\n\n  private _next() {\n    const nextTarget = this._getCurrentLayer()?.next();\n    if (!nextTarget) {\n      Logger.error('FocusManager:: _next():: No focusable found in the current layer.');\n      return;\n    }\n    this._setTarget(nextTarget);\n  }\n\n  private _prev() {\n    const nextTarget = this._getCurrentLayer()?.prev();\n    if (!nextTarget) {\n      Logger.error('FocusManager:: _prev():: No focusable found in the current layer.');\n      return;\n    }\n    this._setTarget(nextTarget);\n  }\n\n  private _deactivate() {\n    if (!this._keyboardActive) {\n      return;\n    }\n    this._keyboardActive = false;\n  }\n\n  private _activate() {\n    if (this._keyboardActive) {\n      return;\n    }\n    this._keyboardActive = true;\n    globalThis.document.addEventListener('mousemove', this._onMouseMove, true);\n  }\n\n  private _updatePixiAccessibility() {\n    // @ts-expect-error _div is protected\n    this.app.renderer.accessibility._div.setAttribute('id', 'pixi-accessibility');\n    if (!this._options.usePixiAccessibility) {\n      // @ts-expect-error _div is protected\n      this.app.renderer.accessibility._div.setAttribute('disabled', 'disabled');\n      this.app.renderer.accessibility.destroy();\n      globalThis.addEventListener('keydown', this._onKeyDown, false);\n      globalThis.addEventListener('keyup', this._onKeyUp, false);\n    }\n  }\n\n  private _getCurrentLayer(): IFocusLayer | null {\n    return this._currentLayerId != null ? this._layers.get(this._currentLayerId) || null : null;\n  }\n\n  private _removeTopLayer() {\n    const layerId = getLastMapEntry(this._layers)?.[0];\n    const nextLayerId = getPreviousMapEntry(this._layers, layerId)?.[0];\n    if (layerId === undefined) {\n      return;\n    }\n    this._layers.delete(layerId);\n    this._postDelete(nextLayerId);\n  }\n\n  private _postDelete(nextLayerId: string | number | undefined) {\n    if (this._layers.size === 0) {\n      this._currentLayerId = null;\n    } else if (nextLayerId !== undefined) {\n      this.setFocusLayer(nextLayerId);\n    }\n  }\n\n  private _setTarget(focusTarget: IFocusable | null, setInactiveOnNull: boolean = true) {\n    const layer = this._getCurrentLayer();\n    const oldFocusTarget = this._focusTarget;\n    this._focusTarget = focusTarget;\n    // call the focus out methods on the current focusable, which is changing\n    if (oldFocusTarget && this._active) {\n      this._clearFocusTarget(oldFocusTarget);\n    }\n    if (this.app.renderer.accessibility.isActive || this._keyboardActive) {\n      if (this._focusTarget) {\n        if (!this._active) {\n          this._active = true;\n        }\n        if (this._options.usePixiAccessibility && !this._focusTarget._accessibleDiv) {\n          this.app.renderer.accessibility.postrender();\n        }\n\n        if (this._options.usePixiAccessibility) {\n          this.app.ticker.addOnce(() => {\n            this._focusTarget?._accessibleDiv?.focus();\n          });\n        }\n\n        if (layer?.hasFocusable(focusTarget)) {\n          // call focusIn on the focusable\n          if (this._focusTarget) {\n            this._focusTarget.focusIn();\n            this._focusTarget.isFocused = true;\n            this._focusTarget.onFocusIn.emit(this._focusTarget);\n            layer.setCurrentFocusable(this._focusTarget);\n            this._updateOutliner();\n          }\n        } else {\n          Logger.warn(\n            `The focusable`,\n            focusTarget,\n            `does not exist on the current focus layer: ${this._currentLayerId}`,\n          );\n        }\n      } else {\n        this._focusOutliner.clear();\n      }\n    } else {\n      this._focusOutliner.clear();\n      if (this._active && setInactiveOnNull) {\n        this._active = false;\n        this.onFocusManagerDeactivated.emit();\n        return;\n      }\n    }\n\n    if (oldFocusTarget !== focusTarget && this._active) {\n      this.onFocusChange.emit({ focusable: this._focusTarget, layer: this._currentLayerId });\n    }\n  }\n\n  private _clearFocusTarget(focusTarget: IFocusable | null) {\n    if (!focusTarget) {\n      return;\n    }\n    focusTarget.focusOut();\n    focusTarget.isFocused = false;\n    focusTarget.onFocusOut.emit(focusTarget);\n    focusTarget.blur();\n    focusTarget.onBlur.emit(focusTarget);\n  }\n\n  private _setupKeyboardListeners(): void {\n    window.addEventListener('keydown', this._onKeyDown, false);\n    this._addGlobalListeners();\n  }\n\n  private _addGlobalListeners() {\n    globalThis.document.addEventListener('mousemove', this._handleGlobalMouseMove);\n    globalThis.document.addEventListener('pointerdown', this._handleGlobalPointerDown);\n  }\n\n  private _removeGlobalListeners() {\n    globalThis.document.removeEventListener('mousemove', this._handleGlobalMouseMove);\n    globalThis.document.removeEventListener('pointerdown', this._handleGlobalPointerDown);\n  }\n\n  private _handleGlobalMouseMove() {\n    if (!this._enabled) {\n      return;\n    }\n    if (this._active) {\n      this.deactivate();\n    }\n  }\n\n  private _handleGlobalPointerDown() {\n    if (!this._enabled) {\n      return;\n    }\n    if (this._active) {\n      this.deactivate();\n    }\n    if (this.app.renderer.accessibility.isActive || this._keyboardActive) {\n      // @ts-expect-error _deactivate is protected\n      this.app.renderer.accessibility._deactivate();\n      this._deactivate();\n    }\n  }\n\n  private _setupAppListeners(): void {\n    this.app.scenes.onSceneChangeStart.connect(this.removeAllFocusLayers);\n  }\n\n  private _updateOutliner() {\n    if (this._focusTarget) {\n      this._focusOutliner.position.set(this._focusTarget.position.x, this._focusTarget.position.y);\n      this._focusOutliner.draw(this._focusTarget);\n    } else {\n      this._focusOutliner.clear();\n    }\n  }\n}\n", "import {Assets} from 'pixi.js';\nimport {IApplication} from '../core';\nimport {Signal} from '../signals';\nimport type {ImportListItem, ImportListItemModule} from '../utils';\nimport {getDynamicModuleFromImportListItem, Logger} from '../utils';\nimport type {IPlugin} from './Plugin';\nimport {Plugin} from './Plugin';\n\n/**\n * Type definition for i18n dictionary.\n */\nexport type i18nDict = Record<string, any>;\n\n/**\n * Type definition for i18n translation parameters.\n */\nexport type i18nTParams = { variant?: number | 'random' } & Record<string, any>;\n\n/**\n * Type definition for i18n import list item.\n */\ntype i18nImportListItem<T> = {\n  id: string;\n  namedExport?: string;\n  options?: any;\n  module?: ImportListItemModule<T>;\n} & {\n  json?: string;\n};\n\n/**\n * Type definition for i18n options.\n */\nexport type i18nOptions = {\n  defaultLocale: string;\n  locales: string[];\n  loadAll: boolean;\n  files: i18nImportListItem<i18nDict>[];\n};\n\n/**\n * Default options for i18n module.\n */\nconst defaultOptions: i18nOptions = {\n  defaultLocale: 'en',\n  locales: ['en'],\n  loadAll: false,\n  files: [],\n};\n\n/**\n * Interface for i18n module.\n */\nexport interface Ii18nPlugin extends IPlugin {\n  readonly locale: string;\n  readonly locales: string[];\n  onLocaleChanged: Signal<(locale: string) => void>;\n\n  setLocale(localeId: string): Promise<string>;\n\n  loadLocale(localeId: string): Promise<void>;\n\n  t(key: string, params?: i18nTParams, locale?: string): string;\n\n  parse(input: string, locale?: string): string;\n}\n\n/**\n * i18n module class.\n */\nexport class i18nPlugin extends Plugin implements Ii18nPlugin {\n  public readonly id = 'i18n';\n  public onLocaleChanged: Signal<(locale: string) => void> = new Signal<(locale: string) => void>();\n\n  private _dicts: Record<string, i18nDict> = {};\n  private _options: i18nOptions;\n\n  private _locale: string;\n\n  /**\n   * Getter for locale.\n   */\n  get locale(): string {\n    return this._locale;\n  }\n\n  get locales(): string[] {\n    return this._options.locales;\n  }\n\n  /**\n   * Initializes the i18n module.\n   * sets the default locale and loads the locale files.\n   * @param app The application instance.\n   * @param options The i18n options.\n   * @returns Promise<void>\n   */\n  public async initialize(app: IApplication, options: Partial<i18nOptions>): Promise<void> {\n    super.initialize(app);\n    this._options = { ...defaultOptions, ...options };\n    this._locale = this._options.defaultLocale;\n    if (this._options.loadAll && this._options.files.length > 0) {\n      const files = this._options.files.filter((file) => this._options.locales.includes(file.id));\n      for (const file of files) {\n        await this.loadLocale(file.id);\n      }\n    } else if (this._options.files.length > 0) {\n      await this.loadLocale(this._locale);\n    }\n  }\n\n  /**\n   * Sets the locale.\n   * If the locale is not loaded, it will load it first.\n   * @param localeId The locale id to set.\n   * @returns Promise<string>\n   */\n\n  async setLocale(localeId: string) {\n    this._locale = localeId;\n    await this._loadAndSetLocale(localeId);\n    return this._locale;\n  }\n\n  /**\n   * Translates a key into a string.\n   * If the key is not found, it will return an empty string.\n   * If the key is found, it will replace any placeholders in the string with the values from the params object.\n   * If the key contains a variant, it will select a random variant if the variant param is set to 'random'.\n   * If the key contains a number variant, it will select the variant based on the variant param.\n   * @param key The key to translate.\n   * @param params The parameters to replace in the string.\n   * @param locale The locale to use for translation.\n   * @returns The translated string.\n   */\n\n  t(key: string, params?: i18nTParams, locale: string = this._locale): string {\n    const dict = this._dicts[locale];\n    if (!dict) {\n      Logger.error(`i18n:: No dictionary loaded for current locale: ${locale}`);\n      return '';\n    }\n    let str = dict[key];\n\n    if (!str) {\n      Logger.error(`i18n:: No result found for the key ${key} in the locale: ${this._locale}`);\n      return '';\n    }\n\n    if (params) {\n      if (typeof params.variant === 'number' || params.variant === 'random') {\n        const match = /\\[(.*?)\\]/.exec(str);\n        if (match) {\n          // Split the string by the \"|\" character to get an array of variations.\n          const items = match[1].split('|');\n\n          // Get the selected variant based on the \"variation\" param.\n          const num = params.variant === 'random' ? Math.floor(Math.random() * items.length) : params.variant;\n\n          // Replace the original string with the selected variant\n          str = str.replace(match[0], items[num]);\n        }\n      }\n\n      // Iterate over all params to replace placeholders in the string.\n      for (const f in params) {\n        // Create a regular expression to match the placeholder for the current param.\n        const re = new RegExp(`{${f}}`, 'g');\n\n        //Replace all occurences of the placeholder with the value of the param.\n        str = str.replace(re, String(params[f]));\n      }\n    }\n\n    /**\n     * Return the final translated string.\n     */\n    return str;\n  }\n\n  /**\n   * Parses the input string and replaces anything in between {} braces, assuming it is a key in the dictionary.\n   * @param {string} input\n   * @param locale\n   * @returns {string}\n   */\n  parse(input: string, locale: string = this._locale): string {\n    const dict = this._dicts[locale];\n    if (!dict) {\n      Logger.error(`i18n:: No dictionary loaded for current locale: ${this._locale}`);\n      return '';\n    }\n    let str = input;\n    const matches = str.match(/{(.*?)}/g);\n    if (matches) {\n      matches.forEach((match) => {\n        const key = match.slice(1, -1);\n        if (dict[key]) {\n          str = str.replace(match, dict[key]);\n        }\n      });\n    }\n    return str;\n  }\n\n  /**\n   * Loads a locale.\n   * @param localeId The locale id to load.\n   * @returns Promise<void>\n   */\n  async loadLocale(localeId: string) {\n    const file = this._options.files.find((file) => localeId === file.id);\n    if (!file) {\n      Logger.error(`i18n:: Could not find locale file for ${localeId}`);\n      return;\n    }\n    this._dicts[localeId] = file.json\n      ? await Assets.load(file.json)\n      : await getDynamicModuleFromImportListItem(file as ImportListItem<i18nDict>);\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['t', 'setLocale'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onLocaleChanged'];\n  }\n\n  /**\n   * Loads and sets a locale.\n   * If the locale is not loaded, it will load it first.\n   * @param localeId The locale id to load and set.\n   */\n  private async _loadAndSetLocale(localeId: string) {\n    if (!this._dicts[localeId]) {\n      await this.loadLocale(localeId);\n    }\n    this.onLocaleChanged.emit(localeId);\n  }\n}\n", "export enum InputControllerTypes {\n  Keyboard = 'keyboard',\n  GamePad = 'gamepad',\n  Mouse = 'mouse',\n  Touch = 'touch',\n}\n\nexport type InputController =\n  | InputControllerTypes.Keyboard\n  | InputControllerTypes.GamePad\n  | InputControllerTypes.Mouse\n  | InputControllerTypes.Touch;\n", "import { DestroyOptions } from 'pixi.js';\nimport { SignalConnection, SignalConnections } from '../signals';\nimport type { Constructor } from '../utils';\n\n/**\n * Interface for animated entities.\n */\nexport interface ISignalContainer {\n  signalConnections: SignalConnections;\n\n  destroy(options?: DestroyOptions): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n  connectSignal(...args: SignalConnection[]): void;\n  connectAction(...args: SignalConnection[]): void;\n}\n\nexport function WithSignals<TBase extends Constructor<any>>(Base: TBase): TBase & Constructor<ISignalContainer> {\n  return class extends Base implements ISignalContainer {\n    signalConnections: SignalConnections = new SignalConnections();\n\n    /**\n     * Add signal connections to the container.\n     * @param args - The signal connections to add.\n     */\n    public addSignalConnection(...args: SignalConnection[]) {\n      for (const connection of args) {\n        this.signalConnections.add(connection);\n      }\n    }\n\n    public connectSignal(...args: SignalConnection[]) {\n      for (const connection of args) {\n        this.signalConnections.add(connection);\n      }\n    }\n\n    public connectAction(...args: SignalConnection[]) {\n      for (const connection of args) {\n        this.signalConnections.add(connection);\n      }\n    }\n\n    destroy(options?: DestroyOptions): void {\n      this.signalConnections.disconnectAll();\n      super.destroy(options);\n    }\n  } as unknown as TBase & Constructor<ISignalContainer>;\n}\n", "import {gsap} from 'gsap';\nimport {Signal} from '../signals';\nimport type {Constructor} from '../utils';\n\n/**\n * Extended GSAP animation configuration interface.\n */\nexport interface GSAPAnimationConfigExtended extends gsap.TweenVars {}\n\n/**\n * Type for GSAP entity.\n */\ntype GSAPEntity = gsap.core.Tween | gsap.core.Timeline;\n\n/**\n * Interface for animated entities.\n */\nexport interface IAnimated {\n  onAnimationStart: Signal<(entity: GSAPEntity) => void>;\n  onAnimationUpdate: Signal<(entity: GSAPEntity) => void>;\n  onAnimationComplete: Signal<(entity: GSAPEntity) => void>;\n\n  animate(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFrom(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFromTo(\n    fromProps: GSAPAnimationConfigExtended,\n    toProps: GSAPAnimationConfigExtended,\n    instance?: any,\n  ): gsap.core.Tween;\n\n  animateSequence(sequences: GSAPAnimationConfigExtended[], instance?: any): gsap.core.Timeline;\n\n  pauseAnimations(): void;\n\n  resumeAnimations(): void;\n\n  destroyAnimations(): void;\n\n  reverseAnimation(): void;\n\n  isAnimationPlaying(): boolean;\n\n  //utility\n  shake(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  pulse(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  bob(config?: { duration?: number; intensity?: number }, instance?: any): gsap.core.Tween;\n}\n\n/**\n * Animated mixin function.\n * @param Base - Base class to extend.\n * @returns Class that extends the base class and implements IAnimated.\n */\nexport function Animated<TBase extends Constructor>(Base: TBase): TBase & Constructor<IAnimated> {\n  return class extends Base implements IAnimated {\n    // signals for animation events\n    onAnimationStart = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationUpdate = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationComplete = new Signal<(entity: GSAPEntity) => void>();\n\n    // store active tweens / timelines\n    _activeTweens: gsap.core.Tween[] = [];\n    _activeTimeline?: gsap.core.Timeline;\n\n    /**\n     * Animate method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animate(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.to(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate from method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFrom(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.from(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate sequence method.\n     * @param sequences - Array of animation sequences.\n     * @param instance - Instance to animate.\n     * @returns GSAP Timeline instance.\n     */\n    public animateSequence(sequences: GSAPAnimationConfigExtended[], instance: any = this): gsap.core.Timeline {\n      if (!this._activeTimeline) {\n        this._activeTimeline = gsap.timeline({\n          onStart: () => this._onAnimationStart(this._activeTimeline),\n          onUpdate: () => this._onAnimationUpdate(this._activeTimeline),\n          onComplete: () => {\n            this._onAnimationComplete(this._activeTimeline);\n            this._activeTimeline = undefined;\n          },\n        });\n      }\n\n      sequences.forEach((sequence) => {\n        this._activeTimeline?.to(instance, sequence);\n      });\n\n      return this._activeTimeline;\n    }\n\n    /**\n     * Clear animations method.\n     */\n    public destroyAnimations() {\n      this._activeTweens.forEach((tween) => tween.kill());\n      this._activeTweens = [];\n      this._activeTimeline?.clear();\n      this._activeTimeline = undefined;\n    }\n\n    /**\n     * Pause animations method.\n     */\n    public pauseAnimations() {\n      this._activeTweens.forEach((tween) => tween.pause());\n      this._activeTimeline?.pause();\n    }\n\n    /**\n     * Resume animations method.\n     */\n    public resumeAnimations() {\n      this._activeTweens.forEach((tween) => tween.play());\n      this._activeTimeline?.play();\n    }\n\n    /**\n     * Animate from-to method.\n     * @param fromProps - Animation properties for the start state.\n     * @param toProps - Animation properties for the end state.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFromTo(\n      fromProps: GSAPAnimationConfigExtended,\n      toProps: GSAPAnimationConfigExtended,\n      instance: any = this,\n    ) {\n      const tween = gsap.fromTo(\n        instance,\n        {\n          ...fromProps,\n        },\n        {\n          ...toProps,\n        },\n      );\n      tween.eventCallback('onStart', () => {\n        this._onAnimationStart(tween);\n      });\n      tween.eventCallback('onUpdate', () => {\n        this._onAnimationUpdate(tween);\n      });\n      tween.eventCallback('onComplete', () => {\n        this._onAnimationComplete(tween);\n        this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n      });\n\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Reverses animations.\n     */\n    public reverseAnimation(): void {\n      this._activeTweens.forEach((tween) => tween.reverse());\n      this._activeTimeline?.reverse();\n    }\n\n    public isAnimationPlaying(): boolean {\n      return (\n        this._activeTweens?.some((tween) => !tween.paused()) ||\n        (this._activeTimeline && !this._activeTimeline.paused()) ||\n        false\n      );\n    }\n\n    // utility animations\n    /**\n     * Shake animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public shake(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.05, intensity = 12, times = 41 } = config;\n      const obj = { x: instance.x, y: instance.y };\n      const origX = obj.x;\n\n      const repeat = times % 2 === 0 ? times + 1 : times;\n\n      const tween = gsap.to(instance, {\n        x: origX + gsap.utils.random(-Math.max(intensity, 2), Math.max(intensity, 2)),\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Pulse animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public pulse(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 1.2, times = 1 } = config;\n      const repeat = times * 2 - 1;\n      const tween = gsap.to(instance?.scale, {\n        x: intensity,\n        y: intensity,\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Bob animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public bob(\n      config: {\n        duration?: number;\n        intensity?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 10 } = config;\n      const tween = gsap.to(instance, {\n        y: `-=${intensity}`,\n        repeat: -1,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Private method for handling animation start event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationStart(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationStart.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation update event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationUpdate(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationUpdate.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation complete event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationComplete(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationComplete.emit(animationEntity as GSAPEntity);\n    }\n  } as unknown as TBase & Constructor<IAnimated>;\n}\n", "import type {Constructor, PointLike} from '../utils';\nimport type {DestroyOptions, PointerEvents} from 'pixi.js';\nimport {Container, FederatedEvent} from 'pixi.js';\n\nimport {Application} from '../Application';\nimport type {IFocusable} from '../plugins';\nimport {Signal} from '../signals';\n\n/**\n * The Focusable function is a higher-order function that adds focus-related functionality to a given class.\n *\n * @param {TBase extends Constructor<Container>} Base - The base class to add focus functionality to.\n *\n * @returns {TBase & Constructor<IFocusable>} The modified class with focus functionality.\n */\nexport function Focusable<TBase extends Constructor<Container>>(Base: TBase): TBase & Constructor<IFocusable> {\n  return class extends Base implements IFocusable {\n    _accessibleDiv: HTMLElement;\n    isFocused = false;\n    isKeyDown = false;\n    focusEnabled = true;\n    tabIndex = 0;\n    // pixi accessibility options\n    accessible = false;\n    accessibleType: 'button' | 'div' | 'heading' = 'button';\n    accessibleTitle = 'Focusable';\n    accessibleHint = 'Press enter to focus';\n    accessiblePointerEvents: PointerEvents = 'auto';\n    accessibleChildren = true;\n    // signals\n    onFocus = new Signal<(focusable: IFocusable) => void>();\n    onFocusIn = new Signal<(focusable: IFocusable) => void>();\n    onFocusOut = new Signal<(focusable: IFocusable) => void>();\n    onBlur = new Signal<(focusable: IFocusable) => void>();\n\n    private _eventsDisabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this.eventMode = 'static';\n      this.on('mouseover', this._onMouseOver);\n      this.on('mousedown', this._onMouseDown);\n      this.on('click', this._handleClick);\n      this.on('tap', this._handleClick);\n    }\n\n    get app() {\n      return Application.getInstance();\n    }\n\n    public destroy(options?: DestroyOptions): void {\n      this.off('mouseover', this._onMouseOver);\n      this.off('mousedown', this._onMouseDown);\n      this.off('click', this._handleClick);\n      this.off('tap', this._handleClick);\n      super.destroy(options);\n    }\n\n    public focusIn() {\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerover', { type: 'pointerover' });\n      }\n    }\n\n    public blur() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n    }\n\n    public focusOut() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerout', { type: 'pointerout' });\n      }\n    }\n\n    public click() {}\n\n    public getFocusPosition() {\n      return null;\n    }\n\n    public getFocusArea() {\n      return this.getBounds();\n    }\n\n    public getFocusSize(): PointLike | null {\n      return [this.getFocusArea().width, this.getFocusArea().height];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _onMouseOver(_e: MouseEvent) {\n      this.app.focus.setFocus(this);\n    }\n\n    protected _onMouseDown(e: FederatedEvent) {\n      this._maybeEmit('pointerdown', e);\n    }\n\n    protected _handleClick(e: FederatedEvent) {\n      this._maybeEmit('click', e);\n      this.click();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _handleKeyUp(_e: KeyboardEvent) {}\n\n    private _maybeEmit(type: string, e: FederatedEvent) {\n      if (this._eventsDisabled || e.type) {\n        return;\n      }\n      this._eventsDisabled = true;\n      this.emit(type, { type });\n      this._eventsDisabled = false;\n    }\n  } as unknown as TBase & Constructor<IFocusable>;\n}\n\nFocusable.INITTED = false;\n", "import type { AllFederatedEventMap, DestroyOptions } from 'pixi.js';\nimport { Container, FederatedEvent } from 'pixi.js';\nimport { Signal } from '../signals';\n\nimport { type Constructor } from '../utils';\n\n// gets all the event names from the PIXI event map\ntype InteractionEventName = keyof AllFederatedEventMap;\n\nexport type InteractionSignal = Signal<(event: FederatedEvent) => void>;\n\n/**\n * Represents an interactive element.\n */\nexport interface IInteractive {\n  onInteraction: (eventName: InteractionEventName) => InteractionSignal;\n}\n\n/**\n * Adds interactive functionality to a container.\n *\n * @param {Constructor<Container>} Base - The base container class.\n * @returns {Constructor<IInteractive>} - The extended container class with interactive functionality.\n */\nexport function Interactive<TBase extends Constructor<Container>>(Base: TBase): TBase & Constructor<IInteractive> {\n  return class extends Base implements IInteractive {\n    private _signals: Map<InteractionEventName, InteractionSignal> = new Map();\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._emitSignal = this._emitSignal.bind(this);\n      this.eventMode = 'static';\n    }\n\n    /**\n     * Handles interaction events and returns the corresponding signal.\n     *\n     * @param {InteractionEventName} eventName - The name of the interaction event.\n     * @return {InteractionSignal} The signal associated with the interaction event.\n     */\n    public onInteraction(eventName: InteractionEventName) {\n      if (!this._signals.has(eventName)) {\n        const signal = new Signal<(event: FederatedEvent) => void>();\n        this._signals.set(eventName, signal);\n        this.on(eventName, this._emitSignal);\n      }\n      return this._signals.get(eventName) as InteractionSignal;\n    }\n\n    public destroy(options: DestroyOptions): void {\n      for (const eventName of this._signals.keys()) {\n        this.off(eventName, this._emitSignal);\n      }\n      this._signals.clear();\n      super.destroy(options);\n    }\n\n    /**\n     * Emits a signal with the given event.\n     *\n     * @param {FederatedEvent} event - The event to emit.\n     *\n     * @return {void}\n     */\n    private _emitSignal(event: FederatedEvent) {\n      const signalName = event.type as InteractionEventName;\n      const signal = this._signals.get(signalName);\n\n      if (signal) {\n        signal.emit(event);\n      }\n    }\n  } as unknown as TBase & Constructor<IInteractive>;\n}\n", "import { defaultFactoryMethods } from './index';\n\nexport function createFactoryMethods<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  methods: Partial<T>,\n  instance: any,\n  addToStage: boolean,\n): T {\n  const factoryMethods: any = {};\n  for (const key in methods) {\n    factoryMethods[key] = (...args: any[]) => {\n      // @ts-expect-error - this is fine\n      const obj = methods[key](...args);\n      if (addToStage) {\n        instance.addChild(obj);\n        // instance.addChild(obj);\n      }\n      return obj;\n    };\n  }\n  return factoryMethods as T;\n}\n", "import { DestroyOptions, Sprite, Texture, Ticker } from 'pixi.js';\nimport { Animated, Factory, WithSignals } from '../mixins';\n\nimport { Application } from '../Application';\nimport type { IApplication } from '../core';\nimport { Signal } from '../signals';\nimport { SignalOrder } from '../signals/Signal';\nimport type { PointLike, Size } from '../utils';\nimport { bindAllMethods } from '../utils';\n\n/**\n * Configuration for the Container class.\n */\nexport type ContainerConfig = {\n  autoResize: boolean;\n  autoUpdate: boolean;\n  priority: SignalOrder;\n};\n\nexport const ContainerConfigKeys: (keyof ContainerConfig)[] = ['autoResize', 'autoUpdate', 'priority'];\n\nconst defaultConfig: ContainerConfig = { autoResize: true, autoUpdate: false, priority: 0 };\n\nexport type BackgroundConfig = {\n  color: number;\n  alpha: number;\n  width: number;\n  height: number;\n  anchor: PointLike;\n  autoResize: boolean;\n};\n\n/**\n * Interface for the Container class.\n */\nexport interface IContainer {\n  app: IApplication;\n\n  onDestroy: Signal<() => void>;\n\n  destroy(options?: DestroyOptions): void;\n\n  added(): Promise<void> | void;\n\n  resize(size?: Size): void;\n\n  update(ticker?: Ticker | number): void;\n\n  addColoredBackground(colorOrConfig?: number | Partial<BackgroundConfig>, alpha?: number): Sprite;\n}\n\n/**\n * The Container class extends the _Container class (which includes the Animated and Factory mixins) and implements the IContainer interface.\n * It represents a container for PIXI.js display objects.\n */\nexport class Container<A extends Application = Application>\n  extends Animated(WithSignals(Factory()))\n  implements IContainer\n{\n  onDestroy: Signal<() => void> = new Signal();\n  __dill_pixel_method_binding_root = true;\n  protected __background: Sprite;\n  private __config: ContainerConfig;\n\n  /**\n   * The constructor for the Container class.\n   * @param config - The configuration for the container.\n   */\n  constructor(config: Partial<ContainerConfig> = {}) {\n    super();\n    this.__config = { ...defaultConfig, ...config };\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('removed', this._removed);\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): A {\n    return Application.getInstance() as A;\n  }\n\n  addColoredBackground(color?: number, alpha?: number): Sprite;\n  addColoredBackground(colorOrConfig: number | Partial<BackgroundConfig> = 0x0, alpha: number = 1): Sprite {\n    const defaultConfig = {\n      color: 0x0,\n      width: this.app.size.width,\n      height: this.app.size.height,\n      anchor: 0.5,\n      alpha: 1,\n      autoResize: true,\n    };\n\n    const opts: BackgroundConfig = Object.assign(\n      defaultConfig,\n      typeof colorOrConfig === 'number'\n        ? {\n            color: colorOrConfig,\n            alpha: alpha,\n          }\n        : colorOrConfig,\n    );\n\n    this.__background = this.add.sprite({\n      asset: Texture.WHITE,\n      width: opts.width,\n      height: opts.height,\n      anchor: opts.anchor,\n      tint: opts.color,\n      alpha: opts.alpha,\n      resolution: 2,\n    });\n\n    this.setChildIndex(this.__background, 0);\n\n    if (opts.autoResize) {\n      this.addSignalConnection(this.app.signal.onResize.connect(this.__resizeBackground));\n    }\n\n    return this.__background;\n  }\n\n  /**\n   * Update the container. This method is meant to be overridden by subclasses.\n   * @param ticker\n   */\n  public update(ticker?: Ticker | number) {\n    void ticker;\n  }\n\n  /**\n   * Resize the container. This method is meant to be overridden by subclasses.\n   * @param size\n   */\n  public resize(size?: Size) {\n    void size;\n  }\n\n  /**\n   * This method is called when the container is added to the stage. It is meant to be overridden by subclasses.\n   */\n  public added() {}\n\n  destroy(options?: DestroyOptions): void {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n    this.onDestroy.emit();\n    super.destroy(options);\n  }\n\n  public removed() {}\n\n  protected __resizeBackground() {\n    this.__background.width = this.app.size.width;\n    this.__background.height = this.app.size.height;\n  }\n\n  /**\n   * This method is called when the container is added to the stage. It sets up auto-resizing and auto-updating if enabled.\n   */\n  private _added() {\n    if (this.__config.autoResize) {\n      this.addSignalConnection(this.app.onResize.connect( this.resize,this.__config.priority ?? 'highest'));\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.add(this.update, this, -999999);\n    }\n    this.added();\n  }\n\n  private _removed() {\n    if (this.__config.autoResize) {\n      this.app.onResize.disconnect(this.resize);\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n\n    this.removed();\n  }\n}\n", "import { DestroyOptions, ParticleContainerOptions, ParticleContainer as PIXIParticleContainer, Ticker } from 'pixi.js';\n\nimport { Application } from '../Application';\nimport { IApplication } from '../core';\nimport { Signal } from '../signals';\nimport type { Size } from '../utils';\nimport { bindAllMethods } from '../utils';\n\n/**\n * Configuration for the Container class.\n */\nexport interface ParticleContainerConfig extends ParticleContainerOptions {\n  autoUpdate: boolean;\n  priority: number;\n}\n\nexport const ParticleContainerConfigKeys: (keyof ParticleContainerConfig)[] = ['autoUpdate', 'priority'];\n\nconst defaultConfig: ParticleContainerConfig = { autoUpdate: true, priority: 0 };\n\nexport interface IParticleContainer {\n  app: IApplication;\n\n  onDestroy: Signal<() => void>;\n\n  destroy(options?: DestroyOptions): void;\n\n  added(): Promise<void> | void;\n\n  update(ticker?: Ticker | number): void;\n}\n\n/**\n * The Container class extends the _Container class (which includes the Animated and Factory mixins) and implements the IContainer interface.\n * It represents a container for PIXI.js display objects.\n */\nexport class ParticleContainer<A extends Application = Application>\n  extends PIXIParticleContainer\n  implements IParticleContainer\n{\n  onDestroy: Signal<() => void> = new Signal();\n  __dill_pixel_method_binding_root = true;\n  private __config: ParticleContainerConfig;\n\n  /**\n   * The constructor for the Container class.\n   * @param config - The configuration for the container.\n   */\n  constructor(config: Partial<ParticleContainerConfig> = {}) {\n    super(config);\n    this.__config = { ...defaultConfig, ...config };\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('removed', this._removed);\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): A {\n    return Application.getInstance() as A;\n  }\n  /**\n   * Update the container. This method is meant to be overridden by subclasses.\n   * @param ticker\n   */\n  public update(ticker?: Ticker | number) {\n    void ticker;\n  }\n\n  /**\n   * Resize the container. This method is meant to be overridden by subclasses.\n   * @param size\n   */\n  public resize(size?: Size) {\n    void size;\n  }\n\n  /**\n   * This method is called when the container is added to the stage. It is meant to be overridden by subclasses.\n   */\n  public added() {}\n\n  destroy(options?: DestroyOptions): void {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n    this.onDestroy.emit();\n    super.destroy(options);\n  }\n\n  public removed() {}\n  /**\n   * This method is called when the container is added to the stage. It sets up auto-resizing and auto-updating if enabled.\n   */\n  private _added() {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.add(this.update, this, this.__config.priority);\n    }\n    this.added();\n  }\n\n  private _removed() {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n    this.removed();\n  }\n}\n", "import { Ticker } from 'pixi.js';\nimport { Application } from '../Application';\nimport { AssetLoadingOptions, Logger, Size } from '../utils';\nimport type { IContainer } from './Container';\nimport { Container } from './Container';\n\nexport type SceneAssets = Omit<AssetLoadingOptions, 'manifest' | 'initOptions' | 'assetPreferences'>;\n\nexport interface IScene extends IContainer {\n  id: string;\n  assets?: SceneAssets;\n  autoUnloadAssets?: boolean;\n\n  enter(): Promise<any>;\n\n  exit(): Promise<any>;\n\n  initialize(): Promise<void> | void;\n\n  start(): Promise<void> | void;\n}\n\nexport interface SceneListItem {\n  id: string;\n  path: string;\n  scene: () => Promise<new () => IScene> | IScene;\n  debug?: {\n    label?: string;\n    group?: string;\n  };\n  assets?: string[];\n  plugins?: string[];\n  autoUnloadAssets: boolean;\n}\n\nexport class Scene<T extends Application = Application> extends Container<T> implements IScene {\n  public readonly id: string;\n  public autoUnloadAssets: boolean = false;\n\n  constructor() {\n    super({ autoResize: true, autoUpdate: true, priority: 'highest' });\n  }\n\n  /**\n   * The assets to load for the scene\n   * @private\n   * @type {AssetLoadingOptions}\n   * @example\n   * ```ts\n   * assets: {\n   *  preload: {\n   *  assets: ['path/to/asset.png'],\n   *  bundles: ['bundle1', 'bundle2'],\n   *  },\n   *  background: {\n   *   assets: ['path/to/asset.png'],\n   *   bundles: ['bundle1', 'bundle2'],\n   *   },\n   * }\n   * ```\n   */\n  private _assets: AssetLoadingOptions;\n\n  get assets(): AssetLoadingOptions {\n    return this._assets;\n  }\n\n  set assets(value: AssetLoadingOptions) {\n    this._assets = value;\n  }\n\n  /**\n   * Called to initialize the scene\n   * Called before the scene is added to the stage\n   * and before the scene is animated in\n   * @returns {Promise<void> | void}\n   */\n  public initialize(): Promise<void> | void;\n\n  public async initialize(): Promise<void> {}\n\n  /**\n   * Called to animate the scene in\n   * @returns {Promise<void>}\n   */\n  public enter(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called to animate the scene out\n   * @returns {Promise<void>}\n   */\n  public exit(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after the enter resolves\n   * If enter doesn't return a promise, this is called immediately after enter\n   * @returns {Promise<void> | void}\n   */\n  public start(): Promise<void> | void;\n\n  public async start(): Promise<void> {}\n\n  /**\n   * Called every frame\n   * @param {Ticker} ticker\n   */\n  public update(ticker?: Ticker) {\n    void ticker;\n  }\n\n  /**\n   * Called when the window is resized\n   * @param {Size} size\n   * @override\n   */\n  public resize(size?: Size): void {\n    void size;\n    Logger.log('Scene.resize', this, size);\n  }\n\n  public destroy() {\n    this.app.ticker.remove(this.update);\n    super.destroy({ children: true });\n  }\n}\n", "import { Container } from './Container';\nimport { Sprite } from 'pixi.js';\n\nexport interface ISceneTransition extends Container {\n  progress: number;\n  active: boolean;\n\n  enter(): Promise<any>;\n\n  exit(): Promise<any>;\n}\n\nexport class SceneTransition extends Container {\n  protected __background: Sprite;\n\n  constructor(autoUpdate: boolean = false) {\n    super({ autoResize: true, autoUpdate, priority: -9999 });\n    this.addSignalConnection(\n      this.app.assets.onLoadStart.connect(this.handleLoadStart),\n      this.app.assets.onLoadProgress.connect(this.handleLoadProgress),\n      this.app.assets.onLoadProgress.connect(this.handleLoadComplete),\n    );\n  }\n\n  private _active: boolean = false;\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  set active(value: boolean) {\n    this._active = value;\n  }\n\n  private _progress: number;\n\n  get progress(): number {\n    return this._progress;\n  }\n\n  set progress(value: number) {\n    this._progress = value;\n  }\n\n  /**\n   * Called to animate the scene in\n   * @returns {Promise<void>}\n   */\n  public enter(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called to animate the scene out\n   * @returns {Promise<void>}\n   */\n  public exit(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  protected handleLoadStart() {\n    // signifies the preloading phase has started for the new scene\n  }\n\n  protected handleLoadProgress(progress: number) {\n    // the preloading progress for the loading scene\n    this._progress = progress;\n  }\n\n  protected handleLoadComplete() {\n    // signifies the preloading phase is complete for the new scene\n  }\n}\n", "import { Assets, Graphics, GraphicsContext } from 'pixi.js';\n\nexport class Svg extends Graphics {\n  constructor(ctx: string | GraphicsContext) {\n    super(typeof ctx === 'string' ? Assets.get(ctx) : ctx);\n    const bounds = this.getLocalBounds();\n    this.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n  }\n}\n", "import { AnimatedSprite as PIXIAnimatedSprite, Texture, Ticker } from 'pixi.js';\nimport {\n  bindAllMethods,\n  getFirstMapEntry,\n  getLastMapEntry,\n  getNextMapEntry,\n  getPreviousMapEntry,\n  getZeroPaddedNumber,\n  Logger,\n  SpriteSheetLike,\n} from '../utils';\nimport { Signal } from '../signals';\nimport { AnimatedSpriteProps, resolveTexture } from '../mixins';\n\nexport class AnimatedSprite extends PIXIAnimatedSprite {\n  onAnimationChange: Signal<(currentAnimation: string) => void> = new Signal();\n  onAnimationStart: Signal<() => void> = new Signal();\n  onAnimationStop: Signal<() => void> = new Signal();\n  onAnimationLoop: Signal<() => void> = new Signal();\n  onAnimationComplete: Signal<() => void> = new Signal();\n  onAnimationFrameChange: Signal<() => void> = new Signal();\n  public defaultTexturePrefix: string = '';\n  public defaultSheet: string | undefined;\n  public defaultAnimation: string;\n  public defaultAnimationSpeed: number;\n  public defaultZeroPad: number | undefined;\n  public autoPlay: boolean;\n  public currentAnimation: string;\n  protected _animations: Map<string, Texture[]>;\n\n  constructor(protected config?: Partial<AnimatedSpriteProps>) {\n    // get default animation\n    const animations = config?.animations ?? {};\n    const defaultAnimationName = config?.animation ?? Object.keys(animations)[0];\n    const defaultAnimation = animations[defaultAnimationName as string];\n    const defaultSheet = config?.sheet;\n    const defaultTexturePrefix = config?.texturePrefix || '';\n    const defaultZeroPad = config?.zeroPad;\n\n    super(\n      AnimatedSprite.generateTexturesFromProps(\n        defaultAnimationName,\n        defaultAnimation,\n        defaultTexturePrefix,\n        defaultSheet,\n        defaultZeroPad,\n      ),\n      config?.autoUpdate !== false,\n    );\n    bindAllMethods(this);\n    this.defaultSheet = defaultSheet;\n    this.defaultTexturePrefix = defaultTexturePrefix;\n    this.defaultZeroPad = defaultZeroPad;\n    this._generateAnimations();\n    this.currentAnimation = this.defaultAnimation = defaultAnimationName;\n    this.autoPlay = config?.autoPlay ?? true;\n    this.loop = config?.loop ?? true;\n    this.updateAnchor = config?.updateAnchor ?? false;\n    this.animationSpeed = this.defaultAnimationSpeed = config?.animationSpeed ?? 1;\n    this.on('added', this._added);\n  }\n\n  protected _paused: boolean = false;\n\n  get paused(): boolean {\n    return this._paused;\n  }\n\n  set paused(value: boolean) {\n    this._paused = value;\n  }\n\n  get speed(): number {\n    return this.animationSpeed;\n  }\n\n  set speed(value: number) {\n    this.animationSpeed = this.defaultAnimationSpeed = value;\n  }\n\n  protected _isReversed: boolean = false;\n\n  get isReversed(): boolean {\n    return this._isReversed;\n  }\n\n  static generateTexturesFromProps(\n    animationName: string,\n    props?: Partial<AnimatedSpriteProps>,\n    defaultTexturePrefix = '',\n    defaultSheet: SpriteSheetLike | undefined = undefined,\n    defaultZeroPad?: number,\n  ): Texture[] {\n    const textures: Texture[] = [];\n    let asset = '';\n    const sheet = props?.sheet ?? defaultSheet;\n    if (props?.numFrames > 1) {\n      const idx = props?.startIndex ?? 0;\n      for (let i = idx; i < idx + props?.numFrames; i++) {\n        asset = `${defaultTexturePrefix}${props?.texturePrefix ?? animationName}${getZeroPaddedNumber(i, props?.zeroPad ?? defaultZeroPad)}`;\n        textures.push(\n          resolveTexture({\n            asset,\n            sheet,\n          }),\n        );\n      }\n    } else {\n      asset = `${defaultTexturePrefix}${props?.texturePrefix ?? animationName}`;\n      textures.push(\n        resolveTexture({\n          asset,\n          sheet,\n        }),\n      );\n    }\n    return textures;\n  }\n\n  reverse() {\n    this._isReversed = !this._isReversed;\n    if (this._isReversed) {\n      this.setAnimation(`${this.currentAnimation}_reverse`);\n    } else {\n      this.setAnimation(this.currentAnimation.split('_reverse')[0]);\n    }\n  }\n\n  setAnimation(animationName: string, autoPlay: boolean = true) {\n    if (!this._animations.has(animationName)) {\n      Logger.error(`Animation ${animationName} does not exist`);\n      return;\n    }\n    this.textures = this._animations.get(animationName) as Texture[];\n    this.currentAnimation = animationName;\n    const animSpeed = this.config?.animations?.[animationName.split('_reverse')[0]]?.animationSpeed;\n    if (animSpeed) {\n      this.animationSpeed = animSpeed;\n    } else {\n      this.animationSpeed = this.defaultAnimationSpeed;\n    }\n    this.onAnimationChange.emit(animationName);\n    if (autoPlay) {\n      this.play();\n    }\n  }\n\n  play() {\n    super.play();\n    this.onAnimationStart?.emit();\n  }\n\n  stop() {\n    super.stop();\n    this.onAnimationStop?.emit();\n  }\n\n  nextAnimation() {\n    const entry = getNextMapEntry(this._animations, this.currentAnimation) ?? getFirstMapEntry(this._animations);\n    if (entry) {\n      this.setAnimation(entry[0]);\n    }\n  }\n\n  previousAnimation() {\n    const entry = getPreviousMapEntry(this._animations, this.currentAnimation) ?? getLastMapEntry(this._animations);\n    if (entry) {\n      this.setAnimation(entry[0]);\n    }\n  }\n\n  update(ticker: Ticker) {\n    if (this._paused) {\n      return;\n    }\n    super.update(ticker);\n  }\n\n  private _generateAnimations() {\n    this._animations = new Map();\n    const animations = this.config?.animations ?? {};\n    if (animations) {\n      for (const [key, value] of Object.entries(animations)) {\n        this._animations.set(\n          key,\n          AnimatedSprite.generateTexturesFromProps(\n            key,\n            value,\n            this.defaultTexturePrefix,\n            this.defaultSheet,\n            this.defaultZeroPad,\n          ),\n        );\n      }\n      if (this.config?.reversible) {\n        for (const [key, value] of Object.entries(animations)) {\n          const textures = AnimatedSprite.generateTexturesFromProps(\n            key,\n            value,\n            this.defaultTexturePrefix,\n            this.defaultSheet,\n            this.defaultZeroPad,\n          );\n          textures.reverse();\n          this._animations.set(`${key}_reverse`, textures);\n        }\n      }\n    }\n  }\n\n  private _added() {\n    this.onLoop = () => {\n      this.onAnimationLoop.emit();\n    };\n    this.onComplete = () => {\n      this.onAnimationComplete.emit();\n    };\n    this.onFrameChange = () => {\n      this.onAnimationFrameChange.emit();\n    };\n\n    if (this.autoPlay) {\n      this.play();\n    }\n  }\n}\n", "import { Container, Point } from 'pixi.js';\nimport type { ContainerLike, PointLike } from '../utils';\nimport { bindAllMethods, Logger, resolvePointLike } from '../utils';\nimport { Signal } from '../signals';\nimport { IApplication } from '../core';\nimport type { KeyboardEventDetail } from '../plugins';\nimport { Application } from '../Application';\n\ntype CameraConfig = {\n  container: Container;\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  target: ContainerLike | null;\n  targetPivot: Point;\n  lerp: number;\n};\n\n// require container to be set\ntype OptionalCameraConfig = Partial<CameraConfig>;\ntype RequiredCameraConfig = Required<Pick<CameraConfig, 'container'>>;\ntype CustomCameraConfig = OptionalCameraConfig & RequiredCameraConfig;\n\nexport interface ICamera {\n  onZoom: Signal<(camera?: ICamera) => void>;\n  onZoomComplete: Signal<(camera?: ICamera) => void>;\n  container: Container;\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  readonly targetPivot: Point;\n  readonly targetScale: Point;\n  readonly zooming: boolean;\n  readonly zoomLerp: number;\n  readonly lerp: number;\n  readonly target: ContainerLike | null;\n  readonly followOffset: Point;\n  app: IApplication;\n\n  follow(target: ContainerLike, offset: PointLike): void;\n\n  pan(deltaX: number, deltaY: number): void;\n\n  zoom(scale: number, lerp?: number): void;\n\n  update(): void;\n}\n\nexport class Camera extends Container implements ICamera {\n  public onZoom = new Signal<(camera?: ICamera) => void>();\n  public onZoomComplete = new Signal<(camera?: ICamera) => void>();\n  public container: Container;\n  public minX: number = 0;\n  public minY: number = 0;\n  public maxX: number;\n  public maxY: number;\n  public viewportWidth: number;\n  public viewportHeight: number;\n  public worldWidth: number;\n  public worldHeight: number;\n\n  constructor(public config: CustomCameraConfig) {\n    super({ isRenderGroup: true });\n    bindAllMethods(this);\n    if (config) {\n      this.container = config.container;\n      this.addChild(this.container);\n      if (config.minX) {\n        this.minX = config.minX;\n      }\n      if (config.maxX) {\n        this.maxX = config.maxX;\n      }\n      if (config.minY) {\n        this.minY = config.minY;\n      }\n      this.viewportWidth = config.viewportWidth ?? this.app.size.width;\n      this.viewportHeight = config.viewportHeight ?? this.app.size.width;\n      this.worldWidth = config.worldWidth ?? this.viewportWidth;\n      this.worldHeight = config.worldHeight ?? this.viewportHeight;\n      this.maxX = config.maxX ?? this.worldWidth - this.viewportWidth;\n      this.maxY = config.maxY ?? this.worldHeight - this.viewportHeight;\n    }\n\n    this._targetPivot.set(this.viewportWidth * 0.5, this.viewportHeight * 0.5);\n    if (config.target) {\n      this.target = config.target;\n    }\n    this._lerp = 1;\n    this.update();\n    if (config.lerp) {\n      this.lerp = config.lerp;\n    }\n    return this;\n  }\n\n  protected _zooming: boolean = false;\n\n  get zooming(): boolean {\n    return this._zooming;\n  }\n\n  protected _zoomLerp: number = 0.1;\n\n  get zoomLerp(): number {\n    return this._zoomLerp;\n  }\n\n  protected _targetPivot: Point = new Point(0, 0);\n\n  get targetPivot(): Point {\n    return this._targetPivot;\n  }\n\n  protected _targetScale: Point = new Point(1, 1);\n\n  get targetScale(): Point {\n    return this._targetPivot;\n  }\n\n  private _lerp: number = 0;\n\n  get lerp(): number {\n    return this._lerp;\n  }\n\n  set lerp(value: number) {\n    // if the value is less than 0 or greater than 1, clamp it to the range [0, 1], and log an error\n    if (value < 0 || value > 1) {\n      Logger.error('Camera lerp value must be in the range [0, 1]');\n    }\n    this._lerp = Math.max(0, Math.min(value, 1));\n  }\n\n  protected _target: ContainerLike | null = null;\n\n  get target(): ContainerLike | null {\n    return this._target;\n  }\n\n  set target(value: ContainerLike | null) {\n    this._target = value;\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n  }\n\n  protected _followOffset: Point = new Point(0, 0);\n  get followOffset(): Point {\n    return this._followOffset;\n  }\n\n  set followOffset(value: PointLike) {\n    this._followOffset = resolvePointLike(value, true);\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  follow(target: ContainerLike, offset?: PointLike) {\n    if (!offset) {\n      offset = { x: 0, y: 0 };\n    }\n    this.followOffset = offset;\n    this.target = target;\n  }\n\n  pan(deltaX: number, deltaY: number) {\n    let newPivotX = this.pivot.x + deltaX;\n    let newPivotY = this.pivot.y + deltaY;\n\n    // Clamp pivot to min and max values\n    newPivotX = Math.max(this.minX, Math.min(newPivotX, this.maxX));\n    newPivotY = Math.max(this.minY, Math.min(newPivotY, this.maxY));\n\n    this._targetPivot.set(newPivotX, newPivotY);\n  }\n\n  zoom(scale: number, lerp: number = 0.1) {\n    this._zoomLerp = lerp;\n    this._zooming = true;\n    this._targetScale.set(scale, scale);\n  }\n\n  update() {\n    this.updateZoom();\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n    this.updatePosition(this._zooming);\n    if (\n      this._zooming &&\n      Math.abs(this.scale.x - this._targetScale.x) < 0.001 &&\n      Math.abs(this.scale.y - this._targetScale.y) < 0.001\n    ) {\n      this.onZoom.emit(this);\n      this._zooming = false;\n      this.scale.set(this._targetScale.x, this._targetScale.y);\n      this.onZoomComplete.emit(this);\n    } else if (this._zooming) {\n      this.onZoom.emit(this);\n    }\n  }\n\n  private focusOn(entity: ContainerLike) {\n    // Get the global position of the entity and convert it to the local position within the container.\n    const globalPosition = entity.getGlobalPosition();\n    const spritePosition = this.toLocal(globalPosition);\n\n    const posXModifier = this.position.x / this.scale.x - this.viewportWidth / 2;\n    const posYModifier = this.position.y / this.scale.y - this.viewportHeight / 2;\n\n    const offsetX = this.followOffset.x / this.scale.x;\n    const offsetY = this.followOffset.y / this.scale.y;\n\n    this._targetPivot.x = (spritePosition.x * this.scale.x + this.viewportWidth / 2) * (1 / this.scale.x) + offsetX;\n\n    const tMinX = this.viewportWidth / this.scale.x / 2 + posXModifier + this.minX - offsetX;\n    const tMaxX = this.worldWidth - this.viewportWidth / this.scale.x / 2 + posXModifier + this.maxX + offsetX;\n\n    if (this._targetPivot.x < tMinX) {\n      this._targetPivot.x = tMinX;\n    } else if (this._targetPivot.x > tMaxX) {\n      this._targetPivot.x = tMaxX;\n    }\n\n    this._targetPivot.y = (spritePosition.y * this.scale.y + this.viewportHeight / 2) * (1 / this.scale.y) + offsetY;\n\n    const tMinY = this.viewportHeight / this.scale.y / 2 + posYModifier + this.minY - offsetY;\n    const tMaxY = this.worldHeight - this.viewportHeight / this.scale.y / 2 + posYModifier + this.maxY - offsetY;\n\n    if (this._targetPivot.y < tMinY) {\n      this._targetPivot.y = tMinY;\n    } else if (this._targetPivot.y > tMaxY) {\n      this._targetPivot.y = tMaxY;\n    }\n  }\n\n  private updateZoom() {\n    const currentScaleX = this.scale.x;\n    const currentScaleY = this.scale.y;\n\n    const interpolatedScaleX = currentScaleX + this._zoomLerp * (this._targetScale.x - currentScaleX);\n    const interpolatedScaleY = currentScaleY + this._zoomLerp * (this._targetScale.y - currentScaleY);\n\n    this.scale.set(Math.max(0, interpolatedScaleX), Math.max(0, interpolatedScaleY));\n  }\n\n  private updatePosition(skipLerp: boolean = false) {\n    if (this.lerp > 0 && !skipLerp) {\n      // Current pivot positions\n      const currentPivotX = this.pivot.x;\n      const currentPivotY = this.pivot.y;\n\n      // Calculate interpolated pivot positions\n      const interpolatedPivotX = currentPivotX + this.lerp * (this._targetPivot.x - currentPivotX);\n      const interpolatedPivotY = currentPivotY + this.lerp * (this._targetPivot.y - currentPivotY);\n\n      // Set the pivot to the interpolated position to smooth out the camera movement\n      this.pivot.set(interpolatedPivotX, interpolatedPivotY);\n    } else {\n      this.pivot.set(this._targetPivot.x, this._targetPivot.y);\n    }\n\n    this.position.set(this.viewportWidth / 2, this.viewportHeight / 2);\n  }\n}\n\nexport class CameraController {\n  private dragging: boolean = false;\n  private previousPointerPosition: Point | null = null;\n\n  constructor(\n    public camera: Camera,\n    public interactiveArea: Container,\n  ) {\n    bindAllMethods(this);\n    this.camera = camera;\n    this.interactiveArea = interactiveArea;\n    this.app.keyboard.onKeyDown().connect(this.handleKeyDown);\n    // Keyboard events\n\n    // Mouse and touch events\n    this.interactiveArea.on('pointerdown', this.onPointerDown.bind(this));\n    this.interactiveArea.on('pointermove', this.onPointerMove.bind(this));\n    this.app.stage.on('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.on('pointerupoutside', this.onPointerUp.bind(this));\n\n    // Touch events equivalent\n    this.interactiveArea.on('touchstart', this.onPointerDown.bind(this));\n    this.interactiveArea.on('touchmove', this.onPointerMove.bind(this));\n    this.interactiveArea.on('touchend', this.onPointerUp.bind(this));\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  destroy() {\n    // Mouse and touch events\n    this.interactiveArea.removeAllListeners();\n    this.app.stage.off('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.off('pointerupoutside', this.onPointerUp.bind(this));\n  }\n\n  private handleKeyDown(detail: KeyboardEventDetail) {\n    const panSpeed = 10; // Adjust pan speed as necessary\n    const zoomFactor = 1.1; // Adjust zoom factor as necessary\n\n    switch (detail.event.key) {\n      case 'ArrowUp':\n        this.camera.pan(0, -panSpeed);\n        break;\n      case 'ArrowDown':\n        this.camera.pan(0, panSpeed);\n        break;\n      case 'ArrowLeft':\n        this.camera.pan(-panSpeed, 0);\n        break;\n      case 'ArrowRight':\n        this.camera.pan(panSpeed, 0);\n        break;\n      case '+':\n        this.camera.zoom(zoomFactor);\n        break;\n      case '-':\n        this.camera.zoom(1 / zoomFactor);\n        break;\n    }\n  }\n\n  private onPointerDown(event: MouseEvent | TouchEvent) {\n    this.dragging = true;\n    this.previousPointerPosition = this.getEventPosition(event);\n  }\n\n  private onPointerMove(event: MouseEvent | TouchEvent) {\n    if (!this.dragging || !this.previousPointerPosition) return;\n\n    const currentPosition = this.getEventPosition(event);\n    const deltaX = currentPosition.x - this.previousPointerPosition.x;\n    const deltaY = currentPosition.y - this.previousPointerPosition.y;\n\n    this.camera.pan(deltaX, deltaY);\n    this.previousPointerPosition = currentPosition;\n  }\n\n  private onPointerUp() {\n    this.dragging = false;\n    this.previousPointerPosition = null;\n  }\n\n  private getEventPosition(event: MouseEvent | TouchEvent): Point {\n    if (event instanceof TouchEvent) {\n      return new Point(event.touches[0].clientX, event.touches[0].clientY);\n    } else {\n      return new Point(event.clientX, event.clientY);\n    }\n  }\n}\n", "import type { SpineProps } from '../mixins';\nimport { Factory, WithSignals } from '../mixins';\nimport { bindAllMethods, Spine } from '../utils';\nimport { Application } from '../Application';\nimport { IApplication } from '../core';\n\nconst _SpineAnimation = WithSignals(Factory());\n\nexport interface ISpineAnimation extends InstanceType<typeof _SpineAnimation> {\n  spine: Spine;\n  animationNames: string[];\n\n  setAnimation(name: string, loop?: boolean, tracklndex?: number): void;\n\n  getCurrentAnimation(tracklndex?: number): string;\n}\n\nexport class SpineAnimation extends _SpineAnimation {\n  spine: Spine;\n  paused: boolean;\n\n  public constructor(props?: Partial<SpineProps>) {\n    super();\n    bindAllMethods(this);\n    let data = props?.data;\n    this.paused = props?.paused === true;\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      let ext = data.slice(-5);\n      if (ext !== '.json' && ext !== '.skel') {\n        ext = '.json';\n      } else {\n        data = data.substring(0, data.length - 5);\n      }\n      data = { skeleton: data + ext, atlas: data + '.atlas' };\n    }\n    this.spine = (window as any).Spine.from(data);\n    this.add.existing(this.spine);\n    if (props) {\n      if (props.autoUpdate !== undefined) this.spine.autoUpdate = props.autoUpdate;\n      if (props.animationName) this.setAnimation(props.animationName, props.loop, props.trackIndex ?? 0);\n    }\n\n    this.addSignalConnection(this.app.actions('toggle_pause').connect(this.togglePause));\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  get animationNames() {\n    return this.spine.state.data.skeletonData.animations.map((a) => a.name);\n  }\n\n  getCurrentAnimation(trackIndex: number = 0): string {\n    return this.spine.state.getCurrent(trackIndex)?.animation?.name || '';\n  }\n\n  setAnimation(name: string, loop = false, tracklndex: number = 0) {\n    this.spine.state.setAnimation(tracklndex, name, loop);\n  }\n\n  protected togglePause() {\n    this.paused = !this.paused;\n    this.spine.autoUpdate = !this.paused;\n  }\n}\n", "import { Cursor, DestroyOptions, FederatedEvent, FederatedPointerEvent, Sprite } from 'pixi.js';\n\nimport { Application } from '../Application';\nimport type { IApplication } from '../core';\nimport { Factory, Focusable, Interactive, WithSignals } from '../mixins';\nimport { Signal } from '../signals';\nimport { bindAllMethods, SpriteSheetLike, TextureLike } from '../utils';\n\nexport type ButtonCallback = (() => void) | (() => Promise<void>);\nexport type ButtonAction = { id: string | number; data?: any };\n\nexport type ButtonActionOrCallback = ButtonAction | ButtonCallback;\n\ntype ButtonTextureId = 'default' | 'hover' | 'active' | 'disabled';\n\nexport interface IButton {\n  // signals\n  onDown: Signal<() => void>;\n  onUp: Signal<() => void>;\n  onUpOutside: Signal<() => void>;\n  onOut: Signal<() => void>;\n  onOver: Signal<() => void>;\n  onClick: Signal<() => void>;\n  onEnabled: Signal<() => void>;\n  onDisabled: Signal<() => void>;\n  onDestroy: Signal<() => void>;\n  onKeyboardEvent: Signal<(key: string) => void>;\n  // visual\n  view: Sprite;\n  // whether the button is down\n  isDown: boolean;\n  isOver: boolean;\n  //\n  id: string;\n}\n\nexport type ButtonConfig = {\n  id: string;\n  textures: {\n    default: TextureLike;\n    hover?: TextureLike;\n    active?: TextureLike;\n    disabled?: TextureLike;\n  };\n  sounds?: {\n    hover?: string;\n    out?: string;\n    up?: string;\n    down?: string;\n    click?: string;\n  };\n  actions?: {\n    hover?: ButtonActionOrCallback;\n    out?: ButtonActionOrCallback;\n    up?: ButtonActionOrCallback;\n    down?: ButtonActionOrCallback;\n    click?: ButtonActionOrCallback;\n  };\n  cursor: Cursor;\n  disabledCursor: Cursor;\n  sheet: SpriteSheetLike;\n  enabled: boolean;\n};\n\nexport const ButtonConfigKeys: (keyof ButtonConfig)[] = [\n  'textures',\n  'sounds',\n  'actions',\n  'cursor',\n  'disabledCursor',\n  'sheet',\n  'enabled',\n];\n\n// Create a new class that extends Container and includes the Interactive and Focusable mixins.\nconst _Button = Focusable(Interactive(WithSignals(Factory())));\n\n/**\n * @class\n * @extends {Container}\n * @implements {IFocusable, IButton}\n * @description A class representing a button.\n */\nexport class Button extends _Button implements IButton {\n  // signals\n  public onDown = new Signal<() => void>();\n  public onUp = new Signal<() => void>();\n  public onUpOutside = new Signal<() => void>();\n  public onOut = new Signal<() => void>();\n  public onOver = new Signal<() => void>();\n  public onClick = new Signal<() => void>();\n  public onEnabled = new Signal<() => void>();\n  public onDisabled = new Signal<() => void>();\n  public onKeyboardEvent = new Signal<(key: string) => void>();\n  public onDestroy = new Signal<() => void>();\n  public id: string;\n  // visual\n  public view: Sprite;\n  // whether the button is down\n  public isDown: boolean;\n  public isOver: boolean;\n  // config\n  protected config: ButtonConfig;\n  // a set of unique callbacks for when the button is down\n  protected _isDownCallbacks: Map<string, () => void> = new Map();\n  private _isDownListenerAdded: boolean = false;\n  private _pointerId?: number;\n\n  /**\n   * @constructor\n   * @param {Partial<ButtonConfig>} config - The configuration for the button.\n   */\n  constructor(config: Partial<ButtonConfig>) {\n    super();\n\n    bindAllMethods(this);\n\n    this.config = Object.assign(\n      {\n        id: 'button',\n        textures: { default: '' },\n        sheet: undefined,\n        enabled: true,\n        cursor: 'default',\n        disabledCursor: 'not-allowed',\n      },\n      config,\n    );\n\n    this.id = this.config.id;\n\n    // Create a sprite with the default texture and add it to the container.\n    this.view = this.add.sprite({ asset: this.config.textures.default, sheet: this.config.sheet, anchor: 0.5 });\n\n    this.cursor = this.config.cursor;\n    this.enabled = config.enabled !== false;\n\n    // Set up interaction handlers.\n    // make them high priority so they run before any other interaction handlers\n    this.addSignalConnection(\n      this.onInteraction('pointerover').connect(this.handlePointerOver, -1),\n      this.onInteraction('pointerout').connect(this.handlePointerOut, -1),\n      this.onInteraction('pointerup').connect(this.handlePointerUp, -1),\n      this.onInteraction('click').connect(this.handleClick, -1),\n      this.onInteraction('tap').connect(this.handleClick, -1),\n      this.onInteraction('pointerdown').connect(this.handlePointerDown, -1),\n    );\n  }\n\n  // enabled state\n  protected _enabled: boolean;\n\n  /**\n   * @description Sets the enabled state of the button.\n   * @param {boolean} enabled - Whether the button is enabled.\n   */\n  public set enabled(enabled: boolean) {\n    if (this._enabled === enabled) {\n      return;\n    }\n    this._enabled = enabled;\n    this.cursor = this._enabled ? this.config.cursor : this.config.disabledCursor;\n    this.focusEnabled = enabled;\n    if (this._enabled) {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onEnabled.emit();\n    } else {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.disabled || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDisabled.emit();\n    }\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  destroy(options?: DestroyOptions) {\n    this.onDestroy.emit();\n    super.destroy(options);\n  }\n\n  focusOut() {\n    super.focusOut();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  blur() {\n    super.blur();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  public getFocusArea() {\n    return this.view.getBounds().clone();\n  }\n\n  public getFocusPosition() {\n    return [-this.width * 0.5, -this.height * 0.5];\n  }\n\n  addIsDownCallback(callbackId: string, callback: () => void) {\n    this._isDownCallbacks.set(callbackId, callback);\n    this._checkIsDownCallbacks();\n  }\n\n  removeIsDownCallback(callbackId: string) {\n    this._isDownCallbacks.delete(callbackId);\n  }\n\n  setTexture(textureId: ButtonTextureId, texture: TextureLike) {\n    this.config.textures[textureId] = texture;\n    if (textureId === 'default') {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n    }\n  }\n\n  /**\n   * @description Handles the pointer over event.\n   * Sets the texture of the button to the hover texture and emits the onOver event.\n   */\n  protected handlePointerOver() {\n    if (!this._enabled) {\n      return;\n    }\n    if (!this.isOver) {\n      this.isOver = true;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({\n      asset: this.config.textures.hover || this.config.textures.default,\n      sheet: this.config.sheet,\n    });\n    this.onOver.emit();\n    if (this.config.sounds?.hover) {\n      void this.app.audio.play(this.config.sounds.hover, 'sfx');\n    }\n    if (this.config.actions?.hover) {\n      this._doAction(this.config.actions.hover);\n    }\n  }\n\n  /**\n   * @description Handles the pointer out event.\n   * Sets the texture of the button to the default texture and emits the onOut event.\n   */\n  protected handlePointerOut(e: FederatedEvent) {\n    this.isOver = false;\n    if (!this._enabled) {\n      return;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onOut.emit();\n  }\n\n  /**\n   * @description Handles the pointer down event.\n   * Sets the isDown property to true and changes the texture of the button.\n   */\n  protected handlePointerDown(e: FederatedEvent) {\n    if (!this._enabled && !this.isKeyDown) {\n      return;\n    }\n    if (!this.isDown && this._pointerId === undefined) {\n      this._pointerId = (e as FederatedPointerEvent).pointerId;\n\n      window.removeEventListener('pointerup', this.handlePointerUpOutside);\n      this.off('pointerupoutside', this.handlePointerUpOutside);\n\n      window.addEventListener('pointerup', this.handlePointerUpOutside);\n      this.on('pointerupoutside', this.handlePointerUpOutside);\n\n      this.isDown = true;\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.active || this.config.textures.hover || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDown.emit();\n      if (this.config.sounds?.down) {\n        void this.app.audio.play(this.config.sounds.down, 'sfx');\n      }\n      if (this.config.actions?.down) {\n        if (this.config.actions?.down) {\n          this._doAction(this.config.actions.down);\n        }\n      }\n    }\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   * Removes the keyup event listener and emits the onPress and onUp events.\n   */\n  protected handlePointerUp(e: FederatedEvent) {\n    if (!this._enabled || !this.isOver || (e as FederatedPointerEvent).pointerId !== this._pointerId) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onUp.emit();\n    if (this.config.sounds?.up) {\n      void this.app.audio.play(this.config.sounds.up, 'sfx');\n    }\n    if (this.config.actions?.up) {\n      this._doAction(this.config.actions.up);\n    }\n    this._pointerId = undefined;\n  }\n\n  protected handleClick() {\n    this.isDown = false;\n    this.onClick.emit();\n    if (this.config.sounds?.click) {\n      void this.app.audio.play(this.config.sounds.click, 'sfx');\n    }\n    if (this.config.actions?.click) {\n      this._doAction(this.config.actions.click);\n    }\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   */\n  protected handlePointerUpOutside(e: PointerEvent) {\n    if (!this._enabled || e.pointerId !== this._pointerId) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n    this.off('pointerupoutside', this.handlePointerUpOutside);\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.isDown = false;\n    this.isOver = false;\n    this.onUpOutside.emit();\n\n    if (this.config.sounds?.up) {\n      void this.app.audio.play(this.config.sounds.up, 'sfx');\n    }\n    if (this.config.actions?.up) {\n      this._doAction(this.config.actions.up);\n    }\n    this._pointerId = undefined;\n  }\n\n  private _doAction(action: ButtonActionOrCallback) {\n    if (typeof action === 'function') {\n      void action();\n    } else {\n      if (!action.data.button) {\n        action.data.button = this;\n      }\n      this.app.action(action.id, action.data);\n    }\n  }\n\n  private _checkIsDownCallbacks() {\n    // check if there are any callbacks, if there are, add the ticker listener\n    if (!this._isDownListenerAdded && this._isDownCallbacks.size > 0) {\n      this._isDownListenerAdded = true;\n      this.app.ticker.add(this._handleIsDownCallbacks);\n    } else {\n      this.app.ticker.remove(this._handleIsDownCallbacks);\n      this._isDownListenerAdded = false;\n    }\n  }\n\n  private _handleIsDownCallbacks() {\n    if (this.isDown) {\n      this._isDownCallbacks.forEach((callback) => {\n        callback();\n      });\n    }\n  }\n}\n", "import type { ContainerLike, PointLike } from '../utils';\nimport { bindAllMethods, Logger, resolvePointLike } from '../utils';\n\nimport { Application } from '../Application';\nimport { Container } from '../display/Container';\nimport type { DestroyOptions } from 'pixi.js';\nimport { Container as PIXIContainer } from 'pixi.js';\nimport { Factory, WithSignals } from '../mixins';\nimport { Signal } from '../signals';\n\nconst _FlexContainer = WithSignals(Factory());\n\nexport interface FlexContainerConfig {\n  width: number;\n  height: number;\n  bindTo: ContainerLike;\n  bindToAppSize: boolean;\n  gap: number;\n  flexWrap: 'wrap' | 'nowrap';\n  flexDirection: 'row' | 'column';\n  alignItems: 'center' | 'flex-start' | 'flex-end';\n  justifyContent: 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n}\n\nexport const FlexContainerConfigKeys: (keyof FlexContainerConfig)[] = [\n  'width',\n  'height',\n  'bindTo',\n  'bindToAppSize',\n  'gap',\n  'flexWrap',\n  'flexDirection',\n  'alignItems',\n  'justifyContent',\n];\n\nconst defaultConfig = {\n  bindTo: null,\n  width: 0,\n  height: 0,\n  gap: 0,\n  flexWrap: 'nowrap',\n  flexDirection: 'row',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  padding: 0,\n};\n\nexport interface IFlexContainer {\n  onLayoutComplete: Signal<() => void>;\n  debug: boolean;\n  config: FlexContainerConfig;\n\n  containerWidth: number;\n  containerHeight: number;\n\n  removeChildren<U extends PIXIContainer>(): U[];\n\n  removeChildAt<U extends PIXIContainer>(index: number): U;\n\n  addChildAt<U extends PIXIContainer>(child: U, index: number): U;\n\n  setChildIndex<U extends PIXIContainer>(child: U, index: number): void;\n\n  getChildIndex<U extends PIXIContainer>(child: U): number;\n\n  getChildAt<U extends PIXIContainer>(index: number): U;\n\n  setFlexChildren(): void;\n\n  cleanup(): void;\n\n  handleChildAdded(child: any): void;\n\n  deleteChild(child: PIXIContainer): boolean;\n\n  layout(): void;\n\n  added(): void;\n}\n\nexport type FlexWrap = 'wrap' | 'nowrap';\nexport type FlexDirection = 'row' | 'column';\nexport type AlignItems = 'center' | 'flex-start' | 'flex-end';\nexport type JustifyContent = 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n\nexport class FlexContainer<T extends Application = Application> extends _FlexContainer {\n  public onLayoutComplete: Signal<() => void> = new Signal<() => void>();\n  public debug: boolean = false;\n  public config: FlexContainerConfig;\n  protected paddingLeft: number = 0;\n  protected paddingRight: number = 0;\n  protected paddingTop: number = 0;\n  protected paddingBottom: number = 0;\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  private _reparentAddedChild: boolean = true;\n\n  constructor(config: Partial<FlexContainerConfig> = {}) {\n    super();\n\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = Object.assign({ ...defaultConfig }, config);\n\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('childAdded', this.handleChildAdded);\n    this.on('childRemoved', this.handleChildRemoved);\n\n    this.layout();\n  }\n\n  protected _flexChildren: PIXIContainer[] = [];\n\n  get flexChildren() {\n    return this._flexChildren;\n  }\n\n  get gap(): number {\n    return this.config.gap!;\n  }\n\n  set gap(value: number) {\n    this.config.gap = value;\n    this.layout();\n  }\n\n  get flexWrap(): FlexWrap {\n    return this.config.flexWrap!;\n  }\n\n  set flexWrap(value: FlexWrap) {\n    this.config.flexWrap = value;\n    this.layout();\n  }\n\n  get flexDirection(): FlexDirection {\n    return this.config.flexDirection!;\n  }\n\n  set flexDirection(value: FlexDirection) {\n    this.config.flexDirection = value;\n    this.layout();\n  }\n\n  get alignItems(): AlignItems {\n    return this.config.alignItems!;\n  }\n\n  set alignItems(value: AlignItems) {\n    this.config.alignItems = value;\n    this.layout();\n  }\n\n  get justifyContent(): JustifyContent {\n    return this.config.justifyContent!;\n  }\n\n  set justifyContent(value: JustifyContent) {\n    this.config.justifyContent = value;\n    this.layout();\n  }\n\n  get containerHeight(): number {\n    return this.config.height;\n  }\n\n  set containerHeight(value: number) {\n    this.config.height = value;\n    this.layout();\n  }\n\n  get containerWidth(): number {\n    return this.config.width;\n  }\n\n  set containerWidth(value: number) {\n    this.config.width = value;\n    this.layout();\n  }\n\n  get size(): { width: number; height: number } {\n    return { width: this.config.width, height: this.config.height };\n  }\n\n  set size(size: PointLike) {\n    const { x, y } = resolvePointLike(size);\n    this.config.width = x;\n    this.config.height = y;\n\n    this.layout();\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = <U extends PIXIContainer>() => {\n    const children = this.flexChildren;\n    this.removeChild(...children);\n    return children as U[];\n  };\n\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this.removeChild(this.flexChildren[index]) as U;\n  };\n\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this.add.existing(child);\n    this.setChildIndex(newChild, index);\n    return newChild;\n  };\n\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    const actualChild = this._childMap.get(child as PIXIContainer);\n    if (actualChild) {\n      super.setChildIndex(actualChild, index);\n      this.setFlexChildren();\n      this.layout();\n    }\n  };\n\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   * @param {DisplayObject} child\n   * @param {number} index\n   * @returns {U}\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    if (this._childMap.has(child as PIXIContainer)) {\n      return super.getChildIndex(child.parent);\n    }\n    return super.getChildIndex(child);\n  };\n\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return super.getChildAt(index)?.getChildAt(0) as U;\n  };\n\n  destroy(_options?: DestroyOptions | boolean) {\n    this.off('childAdded', this.handleChildAdded);\n    this.off('childRemoved', this.handleChildRemoved);\n\n    super.destroy(_options);\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   * @param children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child);\n        if (actualChild) {\n          return super.removeChild(actualChild);\n        }\n        return;\n      });\n    } else {\n      return super.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  public getChildByLabel(label: RegExp | string, deep: boolean = true): PIXIContainer | null {\n    for (let i = 0; i < this.flexChildren.length; i++) {\n      const child = this.flexChildren[i];\n      if (child.label) {\n        if (label instanceof RegExp) {\n          if (label.test(child.label)) {\n            return child;\n          }\n        } else {\n          if (child.label === label) {\n            return child;\n          }\n        }\n      }\n      if (deep) {\n        const foundChild = child.getChildByLabel(label, deep);\n        if (foundChild) {\n          return foundChild;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Public method to manually trigger a layout\n   */\n  public layout() {\n    this.app.ticker.addOnce(this._layout, this);\n  }\n\n  resize() {\n    this.layout();\n  }\n\n  update() {}\n\n  added() {}\n\n  /**\n   * Ensures we delete the child from the map when it's removed\n   * @protected\n   */\n  protected handleChildRemoved(child: PIXIContainer) {\n    if (this._reparentAddedChild) {\n      if (!this.deleteChild(child)) {\n        child = (child as Container).getChildAt(0);\n        this.deleteChild(child);\n      }\n    }\n  }\n\n  /**\n   * Deletes a child from the map\n   * @param {Container} child\n   * @returns {boolean}\n   * @protected\n   */\n  protected deleteChild(child: PIXIContainer): boolean {\n    const isInMap = this._childMap.has(child as Container);\n    if (isInMap) {\n      // disconnect signal\n      if (child instanceof FlexContainer) {\n        try {\n          child.onLayoutComplete.disconnect(this.layout);\n        } catch (e) {\n          Logger.warn(`FlexContainer:: Error disconnecting signal from removed child`);\n          console.warn(e);\n        }\n      }\n      this._childMap.delete(child as Container);\n      this.setFlexChildren();\n      this.layout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sorts the children in the container\n   * Needed because we need to ensure re-parented children are sorted by their actual index in the container\n   * @protected\n   */\n  protected setFlexChildren() {\n    this._flexChildren = Array.from(this._childMap.keys());\n    // order by the actual index in the container\n    this._flexChildren.sort((a, b) => this.getChildIndex(a) - this.getChildIndex(b));\n    this.cleanup();\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.flexChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (!(child as Container)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  /**\n   * Re-parent a child to account for e.g. sprite that are added with anchors\n   * @param child\n   * @protected\n   */\n  protected handleChildAdded(child: any) {\n    // avoid maximum call stack error b/c we're about to add a container\n    if (!this._reparentAddedChild) return;\n    this._reparentAddedChild = false;\n    // add an inner container so we can account for e.g. sprite that are added with anchors\n    // re-parent the added child to the inner container\n    const container = this.add.container();\n    container.add.existing(child);\n    // figure out the bounds of the inner container\n    // then, offset its pivot so that it's top-left corner is always at 0,0\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n\n    if (child instanceof FlexContainer) {\n      this.addSignalConnection(child.onLayoutComplete.connect(this.layout));\n    }\n\n    this._childMap.set(child, container);\n    this.setFlexChildren();\n    this._reparentAddedChild = true;\n    this.app.render();\n    this.layout();\n  }\n\n  /**\n   * Lay out the children according to the settings\n   * Tries to follow the CSS Flexbox model as closely as possible\n   * @private\n   */\n  private _layout() {\n    if (this.config.bindTo) {\n      this.config.width = this.config.bindTo?.width ?? 0;\n      this.config.height = this.config.bindTo?.height ?? 0;\n    }\n\n    if (this.config.bindToAppSize) {\n      this.config.width = this.app.size.width;\n      this.config.height = this.app.size.height;\n    }\n\n    const canHaveEndlessWidthOrHeight = ['flex-start'];\n\n    let { width, height } = this.config;\n    const { gap, flexDirection, flexWrap, alignItems, justifyContent } = this.config;\n\n    if (\n      this.config.flexDirection === 'row' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      width = Infinity;\n    } else if (\n      this.config.flexDirection === 'column' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      height = Infinity;\n    }\n\n    let layoutProps: { x: number; y: number }[] = [];\n\n    let x = 0;\n    let y = 0;\n    let rowHeight = 0;\n    let columnWidth = 0;\n    let nextRowY = 0; // y-coordinate of the next row\n    let nextColumnX = 0; // x-coordinate of the next column\n    const newLayoutProps: { x: number; y: number }[] = [];\n    const items = this.children.filter(Boolean);\n    let lineItems: { index: number; width: number; height: number }[] = [];\n    let lineStart = 0;\n\n    const shouldWrap = (childRef: PIXIContainer, x: number, y: number) =>\n      (flexDirection === 'row' && x + childRef.width + gap! > width!) ||\n      (flexDirection === 'column' && y + childRef.height + gap! > height!);\n\n    const handleWrap = () => {\n      if (flexDirection === 'row') {\n        nextRowY += rowHeight + gap!;\n      } else {\n        nextColumnX += columnWidth + gap!;\n      }\n      x = 0;\n      y = 0;\n      rowHeight = 0;\n      columnWidth = 0;\n    };\n\n    const updateLayoutVariables = (childRef: PIXIContainer) => {\n      if (flexDirection === 'row') {\n        x += childRef.width + gap!;\n        rowHeight = Math.max(rowHeight, childRef.height);\n      } else {\n        y += childRef.height + gap!;\n        columnWidth = Math.max(columnWidth, childRef.width);\n      }\n    };\n\n    const getNextX = (currentX: number) => (flexDirection === 'row' ? currentX : nextColumnX);\n    const getNextY = (currentY: number) => (flexDirection === 'column' ? currentY : nextRowY);\n\n    const handleJustification = (\n      lineItems: { index: number; width: number; height: number }[],\n      lineStart: number,\n      lineEnd: number,\n      direction: 'row' | 'column',\n    ) => {\n      const extraSpace = (direction === 'row' ? width! : height!) - (lineEnd - lineStart);\n      lineItems.forEach(({ index }, i) => {\n        let offset = 0;\n        switch (justifyContent) {\n          case 'flex-start':\n            break; // Do nothing\n          case 'flex-end':\n            offset = extraSpace;\n            break;\n          case 'center':\n            offset = extraSpace / 2;\n            break;\n          case 'space-between':\n            offset = lineItems.length > 1 ? i * (extraSpace / (lineItems.length - 1)) : 0;\n            break;\n          case 'space-around':\n            offset = (extraSpace / lineItems.length) * i + extraSpace / (2 * lineItems.length);\n            break;\n          case 'space-evenly':\n            offset = (extraSpace / (lineItems.length + 1)) * (i + 1);\n            break;\n        }\n        if (direction === 'row') {\n          newLayoutProps[index].x += offset;\n        } else {\n          newLayoutProps[index].y += offset;\n        }\n      });\n    };\n\n    const handleAlignment = (newLayoutProps: { x: number; y: number }[], items: (PIXIContainer | null)[]) => {\n      newLayoutProps.forEach((props, index) => {\n        const childRef = items[index] as Container;\n        if (!childRef) return;\n\n        if (flexDirection === 'row') {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.y += rowHeight - childRef.height;\n              break;\n            case 'center':\n              props.y += (rowHeight - childRef.height) / 2;\n              break;\n          }\n        } else {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.x = width ? width - childRef.width : -childRef.width;\n              break;\n            case 'center':\n              props.x += (width - childRef.width) / 2;\n              break;\n          }\n        }\n      });\n    };\n\n    items.forEach((childRef, index) => {\n      if (!childRef) return;\n\n      const item = childRef as Container;\n\n      // Check for wrapping\n      if (flexWrap === 'wrap' && shouldWrap(item, x, y)) {\n        handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n        handleWrap();\n        lineItems = [];\n        lineStart = x;\n      }\n\n      lineItems.push({ index, width: item.width, height: item.height });\n\n      // Position child\n      newLayoutProps[index] = { x: getNextX(x), y: getNextY(y) };\n\n      // Update layout variables\n      updateLayoutVariables(item);\n    });\n\n    // Justify the last line\n    handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n    handleAlignment(newLayoutProps, items);\n\n    layoutProps = newLayoutProps;\n\n    items.forEach((childRef, index) => {\n      const item = childRef as Container;\n      const { x, y } = layoutProps[index] || { x: 0, y: 0 };\n      item.position.set(x, y);\n    });\n\n    // handle alignment within container bounds\n    const totalHeight = this.children.reduce((acc, child) => Math.max(acc, child.y + (child as Container).height), 0);\n    this.children.forEach((child) => {\n      if (this.config.flexDirection === 'row') {\n        switch (this.config.alignItems) {\n          case 'center':\n            child.y -= (totalHeight - height) * 0.5;\n            break;\n          case 'flex-end':\n            child.y += height - totalHeight;\n            break;\n        }\n      }\n    });\n    // force re-render\n\n    this.onLayoutComplete.emit();\n  }\n\n  private _added() {\n    this.addSignalConnection(this.app.onResize.connect(this.layout, 0));\n    this.added();\n  }\n}\n", "import { Bounds, Graphics, Container as PIXIContainer, Rectangle } from 'pixi.js';\nimport { Application } from '../Application';\nimport { Container } from '../display/Container';\nimport { Factory, WithSignals } from '../mixins';\nimport type { Padding, PointLike, Size, SizeLike } from '../utils';\nimport { bindAllMethods, ensurePadding, Logger, resolvePadding, resolveSizeLike } from '../utils';\nimport type { IFlexContainer } from './FlexContainer';\n\nexport type UICanvasEdge =\n  | 'top right'\n  | 'top left'\n  | 'top center'\n  | 'top'\n  | 'bottom right'\n  | 'bottom left'\n  | 'bottom center'\n  | 'bottom'\n  | 'left top'\n  | 'left bottom'\n  | 'left center'\n  | 'left'\n  | 'right top'\n  | 'right bottom'\n  | 'right center'\n  | 'right'\n  | 'center';\n\nexport interface UICanvasChildSettings {\n  align: UICanvasEdge;\n  padding: Padding;\n}\n\nexport interface UICanvasChildProps {\n  align: UICanvasEdge;\n  padding: Partial<Padding> | PointLike;\n}\n\nexport type UICanvasConfig = {\n  debug: boolean;\n  padding: Padding;\n  size: Size;\n  useAppSize: boolean;\n};\n\nexport const UICanvasConfigKeys: (keyof UICanvasConfig)[] = ['debug', 'padding', 'size', 'useAppSize'];\n\nexport type UICanvasProps = {\n  debug: boolean;\n  padding: Partial<Padding> | PointLike;\n  size?: SizeLike;\n  useAppSize?: boolean;\n};\n\nconst _UICanvas = WithSignals(Factory());\n\nexport class UICanvas<T extends Application = Application> extends _UICanvas {\n  public config: UICanvasConfig;\n  protected _outerBounds: Rectangle;\n  protected _displayBounds: Rectangle;\n  protected settingsMap = new Map<PIXIContainer, UICanvasChildSettings>();\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  protected _debugGraphics: Graphics;\n  protected _inner: Container;\n  private _reparentAddedChild: boolean = true;\n  private _disableAddChildError: boolean = false;\n\n  constructor(config: Partial<UICanvasProps>) {\n    super();\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = {\n      debug: config.debug === true,\n      padding: ensurePadding(config?.padding ?? 0),\n      size: config.size !== undefined ? resolveSizeLike(config.size) : { width: 0, height: 0 },\n      useAppSize: config.useAppSize === true,\n    };\n    this._disableAddChildError = true;\n    this._inner = this.add.container({ x: this.config.padding.left, y: this.config.padding.top });\n    this._disableAddChildError = false;\n\n    this.addSignalConnection(this.app.onResize.connect(this.resize));\n\n    this.on('childRemoved', this._childRemoved);\n    this.once('added', this._added);\n  }\n\n  protected _bounds: Bounds;\n\n  get bounds(): Bounds {\n    if (!this._bounds) {\n      this._bounds = this.getBounds();\n    }\n    return this._bounds;\n  }\n\n  protected _canvasChildren: PIXIContainer[] = [];\n\n  public get canvasChildren(): PIXIContainer[] {\n    return this._canvasChildren;\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  set size(value: SizeLike) {\n    this.config.useAppSize = false;\n    this.config.size = value === undefined ? { width: 0, height: 0 } : resolveSizeLike(value);\n    this.resize();\n  }\n\n  set padding(value: Partial<Padding> | PointLike) {\n    this.config.padding = ensurePadding(value);\n    this._inner.position.set(this.config.padding.left, this.config.padding.top);\n    this.resize();\n  }\n\n  private static isFlexContainer(child: PIXIContainer): boolean {\n    return (child as any)?.flexChildren !== undefined;\n  }\n\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = (beginIndex?: number, endIndex?: number) => {\n    return this._inner.removeChildren(beginIndex, endIndex);\n  };\n\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this._inner.removeChildAt(index) as U;\n  };\n\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this._inner.add.existing(child);\n    this._inner.setChildIndex(newChild, index);\n    return newChild;\n  };\n\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    this._inner.setChildIndex(child, index);\n    this.layout();\n  };\n\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    return this._inner.getChildIndex(child);\n  };\n\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return this._inner.getChildAt(index)?.getChildAt(0) as U;\n  };\n\n  public addChild<U extends PIXIContainer[]>(...children: PIXIContainer[]): U[0] {\n    if (this._disableAddChildError) {\n      return super.addChild(...children) as U[0];\n    }\n    Logger.warn(\n      `UICanvas:: You probably shouldn't add children directly to UICanvas. Use .addElement(child, settings) instead, so you can pass alignment settings.`,\n      children,\n      `will be added using the default 'top left' alignment'.`,\n    );\n    return this._inner.addChild(...children) as U[0];\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child as PIXIContainer) as PIXIContainer;\n        if (actualChild) {\n          return this._inner.removeChild(actualChild);\n        }\n        return undefined;\n      });\n    } else {\n      return this._inner.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  public resize() {\n    const _size = this.config.useAppSize ? this.app.size : this.config.size;\n\n    this._displayBounds = this.__calculateBounds(_size);\n    this._outerBounds = this.__calculateOuterBounds(_size);\n\n    this.layout();\n\n    if (this.config.useAppSize) {\n      this.position.set(-_size.width * 0.5, -_size.height * 0.5);\n    }\n\n    if (this.config.debug) {\n      this.app.ticker.addOnce(this.drawDebug);\n    }\n  }\n\n  public layout() {\n    this._inner.children.forEach((child) => {\n      const childObj = child as PIXIContainer;\n      const settings = this.settingsMap.get(childObj);\n      if (settings) {\n        this.applySettings(childObj, settings);\n      }\n    });\n  }\n\n  public addElement<U extends PIXIContainer = PIXIContainer>(\n    child: PIXIContainer,\n    settings?: Partial<UICanvasChildProps>,\n  ): U {\n    const container = this._inner.add.container();\n    container.addChild(child);\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n    if ((child as any)?.flexChildren) {\n      this.addSignalConnection((child as unknown as IFlexContainer).onLayoutComplete.connect(this.layout));\n    }\n\n    this.settingsMap.set(container, {\n      align: settings?.align ?? 'top left',\n      padding: settings?.padding ? ensurePadding(settings.padding) : { top: 0, left: 0, bottom: 0, right: 0 },\n    });\n\n    this._childMap.set(child, container);\n    this._canvasChildren = Array.from(this._childMap.keys());\n\n    this.resize();\n    return child as U;\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.canvasChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (this.config.debug && child === this._debugGraphics) return;\n      if (!(child as PIXIContainer)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  private __calculateBounds(_size: Size): Rectangle {\n    return new Rectangle(\n      0,\n      0,\n      _size.width - this.config.padding.left - this.config.padding.right,\n      _size.height - this.config.padding.top - this.config.padding.bottom,\n    );\n  }\n\n  private __calculateOuterBounds(_size: Size): Rectangle {\n    return new Rectangle(0, 0, _size.width, _size.height);\n  }\n\n  private _childRemoved(child: any) {\n    this.settingsMap.delete(child);\n    this._childMap.delete(child as PIXIContainer);\n    this._canvasChildren = Array.from(this._childMap.keys());\n  }\n\n  private _added() {\n    this.layout();\n  }\n\n  private applySettings(child: PIXIContainer, settings: UICanvasChildSettings) {\n    if (!settings) return;\n    const displayWidth = this._displayBounds.width;\n    const displayHeight = this._displayBounds.height;\n\n    const firstChild = (child as PIXIContainer).getChildAt(0);\n\n    const childWidth = UICanvas.isFlexContainer(firstChild)\n      ? (firstChild as unknown as IFlexContainer).containerWidth || child.width\n      : child.width;\n    const childHeight = UICanvas.isFlexContainer(firstChild)\n      ? (firstChild as unknown as IFlexContainer).containerHeight || child.height\n      : child.height;\n\n    switch (settings.align) {\n      case 'top right':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'top left':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'top center':\n      case 'top':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = 0;\n        break;\n      case 'bottom right':\n        child.x = displayWidth - childWidth;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom left':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom center':\n      case 'bottom':\n        child.x = (displayWidth - child.width) / 2;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left top':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'left bottom':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left center':\n      case 'left':\n        child.x = 0;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'right top':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'right bottom':\n        child.x = displayWidth;\n        child.y = displayHeight;\n        break;\n      case 'right center':\n      case 'right':\n        child.x = displayWidth - childWidth;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'center':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n    }\n    child.x +=\n      resolvePadding(settings.padding.left, displayWidth) - resolvePadding(settings.padding.right, displayWidth);\n\n    child.y +=\n      resolvePadding(settings.padding.top, displayHeight) - resolvePadding(settings.padding.bottom, displayHeight);\n  }\n\n  private drawDebug() {\n    if (!this._debugGraphics) {\n      this._disableAddChildError = true;\n      this._debugGraphics = this._inner.add.graphics();\n      this._disableAddChildError = false;\n    }\n    this._debugGraphics\n      .clear()\n      .rect(0, 0, this._displayBounds.width, this._displayBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n        pixelLine: true,\n      })\n      .rect(-this.config.padding.left, -this.config.padding.top, this._outerBounds.width, this._outerBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n        pixelLine: true,\n      })\n      .moveTo(this._displayBounds.width / 2, this._displayBounds.height / 2 - 10)\n      .lineTo(this._displayBounds.width / 2, this._displayBounds.height / 2 + 10)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n        pixelLine: true,\n      })\n      .moveTo(this._displayBounds.width / 2 - 10, this._displayBounds.height / 2)\n      .lineTo(this._displayBounds.width / 2 + 10, this._displayBounds.height / 2)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n        pixelLine: true,\n      });\n  }\n}\n", "import {ColorSource, DestroyOptions, Graphics, Sprite, Texture} from 'pixi.js';\n\nimport {Application} from '../Application';\nimport type {IContainer} from '../display/Container';\nimport {Container} from '../display/Container';\nimport type {IFocusable} from '../plugins';\nimport type {Size} from '../utils';\n\n/**\n * Interface for Popup\n */\nexport interface IPopup<T = any> extends IContainer {\n  readonly id: string | number; // Unique identifier for the popup\n  config: PopupConfig<T>; // Configuration for the popup\n  view: Container; // The view of the popup\n  backing?: any; // The backing of the popup\n  isShowing: boolean; // Whether the popup is currently showing\n  firstFocusableEntity?: IFocusable; // The first focusable entity in the popup\n  data: T;\n\n  close(): void;\n\n  initialize(): void; // Initialize the popup\n\n  show(): void | Promise<any>; // Show the popup\n\n  afterShow(): void; // Show the popup\n\n  beforeHide(): void; // Hide the popup\n\n  hide(): void | Promise<any>; // Hide the popup\n\n  start(): void | Promise<any>; // Start the popup\n\n  end(): void; // End the popup\n}\n\nexport type PopupConstructor<T = any> = new (id: string | number, config?: Partial<PopupConfig<T>>) => IPopup<T>;\n\n/**\n * Configuration for the backing of the popup\n */\nexport type BackingConfig = {\n  color: ColorSource;\n  alpha: number;\n};\n\nconst defaultBackingConfig = {\n  color: 0x0,\n  alpha: 0.75,\n};\n\n/**\n * Configuration for the popup\n */\nexport type PopupConfig<T = any> = {\n  id: string | number;\n  closeOnEscape: boolean;\n  closeOnPointerDownOutside: boolean;\n  backing: boolean | Partial<BackingConfig>;\n  data?: T;\n};\n\nconst defaultPopupConfig = { backing: true, closeOnEscape: true, closeOnPointerDownOutside: true };\n\n/**\n * Class representing a Popup\n */\nexport class Popup<T = any> extends Container implements IPopup<T> {\n  public static BACKING_TEXTURE: Texture;\n  public isShowing: boolean = false;\n  public firstFocusableEntity: IFocusable;\n  public view: Container;\n  public backing?: Container;\n  public config: PopupConfig<T>;\n\n  /**\n   * Create a new Popup\n   * @param id - The unique identifier for the popup\n   * @param config - The configuration for the popup\n   */\n  constructor(\n    public readonly id: string | number,\n    config: Partial<PopupConfig> = {},\n  ) {\n    super();\n    this.config = Object.assign({ id, ...defaultPopupConfig }, config);\n\n    this._initialize();\n  }\n\n  get data(): T {\n    return this.config.data as T;\n  }\n\n  /**\n   * Create a backing for the popup\n   * @param config - The configuration for the backing\n   * @param size - The size of the backing\n   * @returns The backing container\n   */\n  private static makeBacking(config: boolean | Partial<BackingConfig>, size: Size): Container {\n    let finalConfig = {};\n    if (typeof config === 'object') {\n      finalConfig = config;\n    }\n    const backingConfig: BackingConfig = Object.assign({ ...defaultBackingConfig }, finalConfig);\n    if (Popup.BACKING_TEXTURE === undefined) {\n      const gfx = new Graphics();\n      gfx.rect(0, 0, 100, 100).fill('white');\n      Popup.BACKING_TEXTURE = Application.getInstance().renderer.generateTexture(gfx);\n    }\n    const backingWrapper = new Container();\n    backingWrapper.sortableChildren = false;\n    const backing = backingWrapper.addChild(new Sprite(Popup.BACKING_TEXTURE));\n    backing.anchor.set(0.5);\n    backing.alpha = backingConfig.alpha;\n    backing.tint = backingConfig.color;\n    backing.setSize(size.width, size.height);\n\n    return backingWrapper;\n  }\n\n  initialize() {}\n\n  public beforeHide() {\n    this.app.focus.removeFocusLayer(this.id);\n  }\n\n  destroy(options?: boolean | DestroyOptions): void {\n    this.app.focus.removeFocusLayer(this.id);\n    super.destroy(options);\n  }\n\n  /**\n   * Hide the popup\n   * @returns A promise that resolves when the popup is hidden\n   */\n  hide(): void | any | Promise<any>;\n\n  async hide(): Promise<void> {\n    this.visible = false;\n    return Promise.resolve();\n  }\n\n  /**\n   * Show the popup\n   * @returns A promise that resolves when the popup is shown\n   */\n  show(): void | Promise<any>;\n\n  async show(): Promise<void> {\n    this.resize();\n    this.visible = true;\n    return Promise.resolve();\n  }\n\n  /**\n   * Start the popup\n   */\n  start(): void | Promise<any>;\n  async start() {}\n\n  afterShow() {\n    if (this.firstFocusableEntity) {\n      this.app.focus.add(this.firstFocusableEntity, this.id, true);\n      this.app.focus.setFocus(this.firstFocusableEntity);\n    }\n  }\n\n  /**\n   * End the popup\n   */\n  end() {}\n\n  close(): void | Promise<void>;\n  async close(): Promise<void> {\n    void this.app.popups.hidePopup(this.id, this.config.data);\n  }\n\n  resize() {\n    this.backing?.setSize(this.app.size.width, this.app.size.height);\n  }\n\n  /**\n   * Initialize the popup\n   * @private\n   */\n  private _initialize() {\n    this.app.focus.addFocusLayer(this.id, false);\n\n    if (this.config.backing) {\n      this.backing = this.add.existing(Popup.makeBacking(this.config.backing, this.app.size));\n      this.backing.eventMode = 'static';\n      if (this.config.closeOnPointerDownOutside) {\n        this.backing.once('click', this.close);\n        this.backing.once('tap', this.close);\n      }\n    }\n\n    this.view = this.add.container();\n    this.view.eventMode = 'static';\n  }\n}\n", "import {\n  CanvasTextMetrics,\n  FederatedEvent,\n  FederatedPointerEvent,\n  Graphics,\n  Container as PIXIContainer,\n  Rectangle,\n  Sprite,\n  Text,\n  Texture,\n} from 'pixi.js';\nimport { Focusable, Interactive, TextProps, WithSignals } from '../mixins';\nimport {\n  ensurePadding,\n  getNearestCharacterIndex,\n  isAndroid,\n  isIos,\n  isMobile,\n  isTouch,\n  Logger,\n  Padding,\n  PointLike,\n} from '../utils';\n\nimport { gsap } from 'gsap';\nimport { Container } from '../display';\nimport { Signal } from '../signals';\n\nexport type BgStyleOptions = {\n  radius: number;\n  fill: { color?: number; alpha?: number };\n  stroke: { width?: number; color?: number; alpha?: number };\n};\n\nexport type ColorOptions = {\n  color: number;\n  alpha: number;\n};\n\nexport type PlaceholderOptions = {\n  text: string;\n};\n\nexport type FocusOverlayOptions = {\n  mobile: boolean;\n  touch: boolean;\n  desktop: boolean;\n  activeFilter?: boolean | (() => boolean) | ('mobile' | 'touch' | 'desktop')[];\n  scale: number;\n  marginTop: number;\n  backing: {\n    active: boolean;\n    options: Partial<ColorOptions>;\n  };\n};\n\nexport interface InputOptions extends Partial<TextProps> {\n  value: string;\n  type: 'text' | 'password' | 'number' | 'email' | 'tel' | 'url';\n  fixed: boolean;\n  pattern: string;\n  debug: boolean;\n  minWidth: number;\n  padding: Padding;\n  maxLength?: number;\n  blurOnEnter: boolean;\n  regex?: RegExp;\n  bg: Partial<BgStyleOptions>;\n  placeholder: Partial<PlaceholderOptions & ColorOptions>;\n  selection: Partial<ColorOptions>;\n  caret: Partial<ColorOptions>;\n  error?: {\n    input?: {\n      fill?: number;\n    };\n    bg?: Partial<Omit<BgStyleOptions, 'stroke'>>;\n  };\n  focusOverlay: Partial<FocusOverlayOptions>;\n}\n\nexport interface InputProps extends Omit<InputOptions, 'padding'> {\n  padding: PointLike | Padding | number[] | number;\n}\n\nexport type InputDetail = {\n  value: string;\n  input: Input;\n  domElement: HTMLInputElement;\n};\n\nconst defaultOptions: InputOptions = {\n  value: '',\n  type: 'text',\n  fixed: true,\n  pattern: '',\n  debug: false,\n  minWidth: 200,\n  padding: { top: 0, left: 0, bottom: 0, right: 0 },\n  blurOnEnter: true,\n  style: {\n    fontFamily: 'Arial',\n    fill: '#000000',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  bg: {\n    radius: 5,\n    fill: { color: 0xffffff },\n    stroke: { width: 1, color: 0x0 },\n  },\n  placeholder: {},\n  selection: { color: 0x00ff00 },\n  caret: {\n    color: 0x0,\n    alpha: 0.8,\n  },\n  focusOverlay: {\n    activeFilter: false,\n    scale: 1,\n    marginTop: 60,\n  },\n};\n\nconst AVAILABLE_TYPES = ['text', 'password', 'number', 'email', 'tel', 'url'];\n\nexport class Input extends Focusable(Interactive(WithSignals(Container))) {\n  // signals\n  public onEnter: Signal<(detail: InputDetail) => void> = new Signal<(detail: InputDetail) => void>();\n  public onChange: Signal<(detail: InputDetail) => void> = new Signal<(detail: InputDetail) => void>();\n  public onError: Signal<(detail: InputDetail) => void> = new Signal<(detail: InputDetail) => void>();\n  // public\n  public options: InputOptions;\n  public bg: Graphics;\n  public caret: PIXIContainer;\n  public input: Text;\n  public placeholder: Text;\n  public error: boolean;\n  // protected\n  protected cursorAnimation: gsap.core.Tween;\n  protected domElement: HTMLInputElement;\n  protected selectionGraphics: Graphics;\n  protected cloneOverlay: Input;\n  protected overlayBacking: Sprite;\n  // private\n  private _focusTimer: any;\n  private _pointerDownTimer: any;\n  private _inner: Container;\n  private _inputContainer: Container;\n  private _mask: Graphics;\n  private _lastWidth: number = 0;\n  private _lastHeight: number = 0;\n\n  constructor(\n    options: Partial<InputProps>,\n    public isClone: boolean = false,\n    public clone: Input | null = null,\n  ) {\n    super({ autoUpdate: true, autoResize: !isClone });\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n      style: {\n        ...defaultOptions.style,\n        ...(options?.style ?? {}),\n      },\n      padding: ensurePadding(options.padding ?? defaultOptions.padding),\n      bg: {\n        ...defaultOptions.bg,\n        ...(options.bg ?? {}),\n      },\n      focusOverlay: {\n        ...defaultOptions.focusOverlay,\n        ...(options.focusOverlay ?? {}),\n      },\n    };\n\n    if (!this.options.placeholder) {\n      this.options.placeholder = {\n        color: Number(this.options.style?.fill) ?? 0x666666,\n      };\n    }\n\n    this._inner = this.add.container();\n    this.addBg();\n\n    this._inputContainer = this._inner.add.container({ y: -2 });\n    this.addSelection();\n    this.addCaret();\n    this.addInput();\n    this.addPlaceholder();\n\n    this.placeholder.text = this.options.placeholder.text || `Enter ${this.options.type}`;\n\n    this.input.eventMode = this.placeholder.eventMode = 'none';\n\n    if (isTouch) {\n      this.addSignalConnection(this.onInteraction('pointertap').connect(this.handleClick, -1));\n    }\n    this.addSignalConnection(this.onInteraction('click').connect(this.handleClick, -1));\n\n    if (this.options.fixed) {\n      const scale = this.isClone ? this.clone?.options?.focusOverlay?.scale ?? 1 : 1;\n      // this._mask = this._inner.add.sprite({\n      //   asset: Texture.WHITE,\n      //   width: this.bg.width * scale - this.options.padding.left - this.options.padding.right,\n      //   height: this.bg.height * scale - this.options.padding.top - this.options.padding.bottom,\n      //   tint: 0x0,\n      //   alpha: 1,\n      // });\n      this._mask = this._inner.add\n        .graphics()\n        .rect(\n          0,\n          0,\n          this.bg.width * scale - this.options.padding.left - this.options.padding.right,\n          this.bg.height * scale - this.options.padding.top - this.options.padding.bottom,\n        )\n        .fill({ color: 0x0 });\n      this._inputContainer.mask = this._mask;\n    }\n  }\n\n  private _caretPosition: number = -1;\n\n  get caretPosition() {\n    return this._caretPosition;\n  }\n\n  private _selectionRect: Rectangle | null;\n\n  get selectionRect() {\n    return this._selectionRect;\n  }\n\n  private _regex: RegExp;\n\n  set regex(value: RegExp) {\n    this._regex = value;\n  }\n\n  get isValid(): boolean {\n    let result = false;\n    if (this.domElement) {\n      if (this._regex) {\n        result = this._regex.test(this._value);\n      } else {\n        if (this.options.type === 'text') {\n          return true;\n        }\n        this.domElement.required = true;\n        result = this.domElement.checkValidity();\n        this.domElement.required = false;\n      }\n    }\n    return result;\n  }\n\n  private _value: string = '';\n\n  public get value() {\n    return this._value?.trim() ?? '';\n  }\n\n  public set value(value: string) {\n    if (this.domElement) {\n      this.domElement.value = value;\n      const event = new Event('input', {\n        bubbles: true,\n        cancelable: true,\n      });\n      this.domElement.dispatchEvent(event);\n    } else {\n      this._value = value;\n      this.input.text = value;\n    }\n  }\n\n  resize() {\n    super.resize();\n    if (this.cloneOverlay) {\n      this._positionCloneOverlay();\n    }\n  }\n\n  resetBg() {\n    this.drawBg();\n  }\n\n  added() {\n    super.added();\n    if (this.isClone) {\n      this.showCursor();\n    }\n  }\n\n  handleClick(e?: FederatedEvent) {\n    // check if this was a triggered event from the FocusMnagerPlugin\n    if ((e?.originalEvent as unknown as KeyboardEvent)?.key) {\n      return;\n    }\n    clearTimeout(this._focusTimer);\n    clearTimeout(this._pointerDownTimer);\n    const nearestCharacterIndex = e ? getNearestCharacterIndex(this.input, e) : this.input.text?.length ?? 0;\n    this.createDomElement(nearestCharacterIndex);\n    // this._focusDomElement(nearestCharacterIndex);\n  }\n\n  focusIn() {\n    this.handleClick();\n  }\n\n  _focusDomElement(selection?: number) {\n    if (isIos) {\n      this._triggerFocusAndSelection(selection);\n    } else {\n      this._focusTimer = setTimeout(() => {\n        this._triggerFocusAndSelection(selection);\n      }, 100);\n    }\n  }\n\n  _triggerFocusAndSelection(selection?: number) {\n    if (this.domElement) {\n      try{\n        this.domElement.focus();\n        this.domElement.click();\n        if (selection === undefined) {\n          this.domElement.selectionStart = this.domElement?.value?.length;\n        } else {\n          this.domElement.setSelectionRange(selection, selection, 'none');\n        }\n      }catch(e){\n        // nothing\n      }\n      this._updateCaretAndSelection();\n    }\n  }\n\n  _checkPointerDownOutside(e: FederatedPointerEvent) {\n    const pos = this.toLocal(e.data.global);\n    if (this.getBounds().rectangle.contains(pos.x, pos.y)) {\n      this.focusIn();\n    } else {\n      this.focusOut();\n    }\n  }\n\n  focusOut() {\n    this.domElement?.blur();\n  }\n\n  update() {\n    this.bg.x = 0;\n    this.bg.y = 0;\n\n    // size background\n    const bgHeight =\n      this.input.getLocalBounds().y +\n      this.input.style.fontSize +\n      this.options.padding.top +\n      this.options.padding.bottom;\n\n    const bgWidth = this.options.fixed\n      ? this.options.minWidth\n      : Math.max(this.options.minWidth, this.input.width) + this.options.padding.left + this.options.padding.right;\n\n    // position inputs\n    // the 'align' property doesn't affect single line text,\n    // so we need to do this manually\n    const diff = this.options.minWidth - bgWidth + this.options.padding.left + this.options.padding.right;\n    const inputAvailableWidth = bgWidth - this.options.padding.left - this.options.padding.right;\n\n    switch (this.input.style.align) {\n      case 'center':\n        this.input.x = bgWidth / 2 - this.input.width / 2;\n        this.placeholder.x = bgWidth / 2 - this.placeholder.width / 2;\n        this._inner.x = diff >= 0 ? 0 : diff / 2;\n        if (this.options.fixed) {\n          const inputDiff = this.input.width - inputAvailableWidth;\n          if (inputDiff > 0) {\n            this.input.x -= inputDiff / 2;\n          }\n        }\n        break;\n      case 'right':\n        this.input.x = bgWidth - this.options.padding.right - this.input.width;\n        this.placeholder.x = bgWidth - this.options.padding.right - this.placeholder.width;\n        this._inner.x = diff >= 0 ? 0 : diff;\n        break;\n      default:\n        this.input.x = this.options.padding.left;\n        this.placeholder.x = this.options.padding.left;\n        this._inner.x = 0;\n        if (this.options.fixed) {\n          const inputDiff = this.input.width - inputAvailableWidth;\n          if (inputDiff > 0) {\n            this.input.x -= inputDiff;\n          }\n        }\n        break;\n    }\n\n    this.input.y = this.options.padding.top;\n    this.placeholder.y = this.input.y;\n\n    if (this.isClone && this.clone) {\n      const cloneScale = this.clone.options?.focusOverlay?.scale ?? 1;\n      this.error = this.clone.error;\n      this._value = this.clone.input.text;\n      this.input.text = this._value;\n      this._selectionRect = this.clone.selectionRect!.clone();\n      this._selectionRect.x *= cloneScale;\n      this._selectionRect.y *= cloneScale;\n      this._selectionRect.width *= cloneScale;\n      this._selectionRect.height *= cloneScale;\n      this._caretPosition = this.clone.caretPosition * cloneScale;\n    }\n    // position caret\n    this.caret.x = this._caretPosition >= 0 ? this.input.x + this._caretPosition : this.input.x + this.input.width + 1;\n    this.caret.y = this.input.y - 2;\n    this.caret.height = this.input.style.fontSize * 1.15;\n\n    // check if value is empty\n    if (this.value === '') {\n      this.placeholder.visible = true;\n    } else {\n      this.placeholder.visible = false;\n    }\n\n    if (this.options.fixed) {\n      const scale = this.isClone ? this.options?.focusOverlay?.scale ?? 1 : 1;\n      if (this._mask) {\n        this._mask\n          .clear()\n          .rect(0, 0, (bgWidth - this.options.padding.left - this.options.padding.right) * scale, bgHeight * scale)\n          .fill({ color: 0x0 });\n        this._mask.position.set(this.options.padding.left * scale, 0);\n      }\n    }\n\n    if (bgWidth !== this._lastWidth) {\n      this.drawBg(bgWidth, bgHeight);\n    }\n\n    if (this._selectionRect) {\n      this.drawSelection();\n    } else {\n      this.selectionGraphics?.clear();\n    }\n\n    if (this.cloneOverlay) {\n      this._positionCloneOverlay();\n    }\n  }\n\n  drawSelection() {\n    const rect = this._selectionRect;\n    if (!rect) {\n      this.selectionGraphics?.clear();\n      return;\n    }\n    this.selectionGraphics?.clear();\n    this.selectionGraphics\n      .rect(rect.left + this.input.x, this.caret.y, rect.width, this.caret.height)\n      .fill({ color: this.options.selection.color });\n  }\n\n  drawBg(width: number = this._lastWidth, height: number = this._lastHeight) {\n    const opts =\n      (this.error || (this.isClone && this.clone?.error)) && this.options?.error?.bg\n        ? { ...this.options.bg, ...this.options.error.bg }\n        : this.options.bg;\n\n    this.bg\n      .clear()\n      .roundRect(0, 0, width, height, opts?.radius ?? 0)\n      .fill(opts.fill)\n      .stroke({ ...(opts?.stroke || {}), alignment: 0 });\n\n    this._lastWidth = width;\n    this._lastHeight = height;\n  }\n\n  destroy() {\n    clearTimeout(this._focusTimer);\n    clearTimeout(this._pointerDownTimer);\n    this.app.stage.off('pointerdown', this._checkPointerDownOutside);\n    this.hideCursor();\n    this.destroyDomElement();\n    super.destroy();\n  }\n\n  protected addBg() {\n    this.bg = this._inner.add\n      .graphics()\n      .roundRect(0, 0, 100, 50, this.options?.bg?.radius ?? 0)\n      .fill(this.options.bg.fill);\n  }\n\n  protected addSelection() {\n    this.selectionGraphics = this._inputContainer.add.graphics();\n  }\n\n  protected addCaret() {\n    this.caret = this._inputContainer.add.sprite({\n      asset: Texture.WHITE,\n      width: 3,\n      height: 10,\n      tint: this.options.caret.color ?? 0x0,\n      alpha: 0,\n      visible: false,\n    });\n  }\n\n  protected addInput() {\n    this.input = this._inputContainer.add.text({\n      ...this.options,\n      style: { ...(this.options?.style || {}), padding: 2 },\n      text: this.options.value ?? '',\n      label: 'input',\n      resolution: 2,\n      roundPixels: true,\n    });\n  }\n\n  protected addPlaceholder() {\n    this.placeholder = this._inputContainer.add.text({\n      ...this.options,\n      ...this.options.placeholder,\n      style: {\n        ...this.options.style,\n        fill: this.options.placeholder?.color ?? 0x666666,\n      },\n      resolution: 2,\n      label: 'placeholder',\n      roundPixels: true,\n    });\n\n    this.placeholder.style.align = this.input.style.align;\n  }\n\n  protected createDomElement(selection?: number) {\n    if (this.isClone && this.clone?.domElement) {\n      this.domElement = this.clone.domElement;\n      this._addDomElementListeners();\n      return;\n    }\n    clearTimeout(this._focusTimer);\n    clearTimeout(this._pointerDownTimer);\n\n    this.domElement = document.createElement('input');\n    this.domElement.type = 'text';\n    if (this.options.type && AVAILABLE_TYPES.includes(this.options.type)) {\n      this.domElement.type = this.options.type;\n    }\n\n    if (this.options.pattern) {\n      this.domElement.pattern = this.options.pattern;\n    }\n    if (this.options.regex) {\n      this._regex = this.options.regex;\n    }\n\n    const pos = this.getGlobalPosition();\n    const bounds = this.getBounds();\n    bounds.x = pos.x;\n    bounds.y = pos.y;\n    bounds.width = this.width - this.options.padding.left;\n\n    /**\n     * Overlays an HTMLInputElement\n     * allows the keyboard to be used on mobile devices\n     * mostly taken from @pixi/ui\n     * @see https://github.com/pixijs/ui/blob/main/src/Input.ts\n     */\n\n    this.domElement.style.position = 'fixed';\n    this.domElement.style.border = 'none';\n    this.domElement.style.outline = 'none';\n    this.domElement.style.left = isAndroid ? `0` : `${bounds.left}px`;\n    this.domElement.style.top = isAndroid ? `0` : `${bounds.top}px`;\n    this.domElement.style.width = `${bounds.width}px`;\n    this.domElement.style.height = `${bounds.height}px`;\n    this.domElement.style.padding = '0';\n\n    if (this.options.debug) {\n      this.domElement.style.opacity = '0.8';\n    } else {\n      this.domElement.style.opacity = '0.0000001';\n    }\n    this.app.canvas.parentElement?.appendChild(this.domElement);\n    this.domElement.value = this.value;\n    this.domElement.setAttribute('placeholder', this.options?.placeholder?.text ?? '');\n    if (this.options?.maxLength) {\n      this.domElement.setAttribute('maxLength', this.options.maxLength.toString());\n    }\n\n    this._addDomElementListeners();\n    this._focusDomElement(selection);\n  }\n\n  protected destroyDomElement() {\n    if (this.isClone) {\n      return;\n    }\n    if (this.domElement) {\n      this._removeDomElementListeners();\n      this.domElement.remove();\n      // @ts-expect-error domelement can't be null\n      this.domElement = null;\n    }\n  }\n\n  protected showCursor() {\n    this.caret.visible = true;\n    this.blinkCaret();\n  }\n\n  protected hideCursor() {\n    this.cursorAnimation?.kill();\n    this.caret.visible = false;\n  }\n\n  protected blinkCaret() {\n    if (this.cursorAnimation) {\n      this.cursorAnimation.kill();\n    }\n    this.cursorAnimation = gsap.fromTo(\n      this.caret,\n      { alpha: 0 },\n      {\n        duration: 0.5,\n        alpha: 1,\n        yoyo: true,\n        repeat: -1,\n        overwrite: true,\n      },\n    );\n  }\n\n  protected validate() {\n    const hasError = this.error;\n    if (this.isClone) {\n      this.error = this.clone?.error || false;\n    } else {\n      this.error = !this.isValid;\n      if (this.error && this.error !== hasError) {\n        this.onError.emit({ input: this, domElement: this.domElement, value: this._value });\n      }\n    }\n    if (this.error !== hasError) {\n      if (this.error && this.options?.error?.input?.fill) {\n        this.input.style.fill = this.options?.error?.input?.fill;\n      } else {\n        this.input.style.fill = this.options.input?.style?.fill || 0x0;\n      }\n      this.drawBg();\n    }\n\n    if (this.cloneOverlay) {\n      this.cloneOverlay.validate();\n    }\n  }\n\n  private _removeDomElementListeners() {\n    this.domElement.removeEventListener('focus', this._handleDomElementFocus, false);\n    this.domElement.removeEventListener('blur', this._handleDomElementBlur, false);\n    this.domElement.removeEventListener('input', this._handleDomElementChange, false);\n    this.domElement.removeEventListener('keyup', this._handleDomElementKeyup, false);\n    this.domElement.removeEventListener('keydown', this._handleDomElementKeydown, false);\n  }\n\n  private _addDomElementListeners() {\n    if (this.isClone) {\n      return;\n    }\n    this._removeDomElementListeners();\n    this.domElement.addEventListener('focus', this._handleDomElementFocus, false);\n    this.domElement.addEventListener('blur', this._handleDomElementBlur, false);\n    this.domElement.addEventListener('input', this._handleDomElementChange, false);\n    this.domElement.addEventListener('keyup', this._handleDomElementKeyup, false);\n    this.domElement.addEventListener('keydown', this._handleDomElementKeydown, false);\n  }\n\n  private _handleFocus() {\n    this._caretPosition = -1;\n    this.showCursor();\n\n    clearTimeout(this._pointerDownTimer);\n\n    if (!this.isClone) {\n      this._pointerDownTimer = setTimeout(() => {\n        this.app.stage.on('pointerdown', this._checkPointerDownOutside);\n      }, 250);\n\n      const hasOverlay = Boolean(this.options.focusOverlay.activeFilter);\n      if (hasOverlay) {\n        // decide if we should show an overlay\n        if (this.cloneOverlay) {\n          this._removeCloneOverlay();\n        }\n        const isList = Array.isArray(this.options.focusOverlay.activeFilter);\n        let shouldShow = false;\n        if (isList) {\n          const filterList = this.options.focusOverlay.activeFilter as ('mobile' | 'touch' | 'desktop')[];\n          if (\n            (isMobile && filterList.includes('mobile')) ||\n            (isTouch && filterList.includes('touch')) ||\n            (!isMobile && !isTouch && filterList.includes('desktop'))\n          ) {\n            shouldShow = true;\n          }\n        } else if (typeof this.options.focusOverlay.activeFilter === 'function') {\n          shouldShow = this.options.focusOverlay.activeFilter();\n        } else {\n          shouldShow = hasOverlay;\n        }\n\n        if (shouldShow) {\n          const opts = structuredClone(this.options);\n          const scale = this.options.focusOverlay?.scale || 1;\n          opts.focusOverlay = { activeFilter: false };\n          const fontSize = Number(opts.style?.fontSize || defaultOptions.style?.fontSize || 20) * scale;\n          if (!opts.style) {\n            opts.style = {};\n          }\n\n          opts.style.fontSize = fontSize;\n          if (opts.padding) {\n            opts.padding.left *= scale;\n            opts.padding.top *= scale;\n            opts.padding.right *= scale;\n            opts.padding.bottom *= scale;\n          }\n          if (opts.bg?.radius) {\n            opts.bg.radius *= scale;\n          }\n          if (opts.bg?.stroke?.width) {\n            opts.bg.stroke.width *= scale;\n          }\n          if (opts.minWidth) {\n            opts.minWidth *= scale;\n            if (opts.minWidth > this.app.size.width) {\n              opts.minWidth = this.app.size.width - (opts.bg?.stroke?.width ? opts.bg.stroke.width * 2 + 20 : 20);\n            }\n          }\n\n          // should we show backing?\n          if (this.options.focusOverlay?.backing?.active) {\n            const backing = this.make.sprite({\n              asset: Texture.WHITE,\n              tint: this.options.focusOverlay.backing.options?.color ?? 0x0,\n              alpha: this.options.focusOverlay.backing.options?.alpha ?? 0.8,\n              width: this.app.size.width,\n              height: this.app.size.height,\n              eventMode: 'static',\n            });\n            this.overlayBacking = this.app.stage.addChild(backing);\n          }\n\n          this.cloneOverlay = new Input(opts, true, this);\n          this.cloneOverlay.label = `${this.label} -- clone`;\n          this.cloneOverlay.alpha = 0;\n          this.cloneOverlay.input.text = this.value;\n          this.cloneOverlay.validate();\n          this.app.stage.addChild(this.cloneOverlay);\n          this._positionCloneOverlay();\n          this._showCloneOverlay();\n        }\n      }\n    }\n  }\n\n  private _showCloneOverlay() {\n    this.cloneOverlay.pivot.y = -20;\n    gsap.to(this.cloneOverlay, { duration: 0.5, alpha: 0.8, ease: 'sine.out', delay: 0.1 });\n    gsap.to(this.cloneOverlay.pivot, { duration: 0.5, y: 0, ease: 'sine.out', delay: 0.1 });\n  }\n\n  private _positionCloneOverlay() {\n    if (!this.cloneOverlay) {\n      return;\n    }\n    const w = this.cloneOverlay.options.minWidth;\n    this.cloneOverlay.x = this.app.size.width * 0.5 - w * 0.5;\n    this.cloneOverlay.y = this.options.focusOverlay?.marginTop || 20;\n    if (this.overlayBacking) {\n      this.overlayBacking.width = this.app.size.width;\n      this.overlayBacking.height = this.app.size.height;\n    }\n  }\n\n  private _removeCloneOverlay() {\n    this.overlayBacking?.destroy();\n    this.overlayBacking?.parent?.removeChild(this.overlayBacking);\n    // @ts-expect-error cloneOverlay can't be null\n    this.overlayBacking = null;\n    this.cloneOverlay?.destroy();\n    this.cloneOverlay?.parent?.removeChild(this.cloneOverlay);\n    // @ts-expect-error cloneOverlay can't be null\n    this.cloneOverlay = null;\n  }\n\n  private _handleDomElementFocus() {\n    this.app.stage.off('pointerdown', this._checkPointerDownOutside);\n    this._handleFocus();\n  }\n\n  private _handleDomElementBlur() {\n    if (this.isClone) {\n      return;\n    }\n    clearTimeout(this._focusTimer);\n    clearTimeout(this._pointerDownTimer);\n    this.hideCursor();\n    this._removeCloneOverlay();\n    this.destroyDomElement();\n  }\n\n  private _handleDomElementKeyup() {\n    this._updateCaretAndSelection();\n  }\n\n  private _handleDomElementKeydown(e: KeyboardEvent) {\n    this._updateCaretAndSelection();\n    if (!this.isClone && e.key === 'Enter') {\n      if (this.options.blurOnEnter) {\n        this.domElement.blur();\n      }\n      this.onEnter.emit({ input: this, value: this._value, domElement: this.domElement });\n    }\n  }\n\n  private _updateCaretAndSelection() {\n    if (!this.domElement) {\n      Logger.warn(this.label, 'No dom element');\n      return;\n    }\n    const start = this.domElement.selectionStart || 0;\n    const end = this.domElement.selectionEnd || -1;\n    const direction = this.domElement.selectionDirection;\n    let text = '';\n    const value = this.options.type === 'password' ? this.input.text : this._value;\n    if (end === undefined) {\n      text = value.substring(0, start);\n      const metrics = CanvasTextMetrics.measureText(text, this.input.style);\n      this._caretPosition = metrics.width;\n      this._selectionRect = null;\n    } else {\n      text = value.substring(start > end ? end : start, start > end ? start : end);\n      const toStart = value.substring(0, start > end ? end : start);\n      const leftMetrics = CanvasTextMetrics.measureText(toStart, this.input.style);\n      const textMetrics = CanvasTextMetrics.measureText(text, this.input.style);\n      this._selectionRect = new Rectangle(leftMetrics.width, 0, textMetrics.width, this.input.height);\n      this._caretPosition =\n        direction === 'backward' ? this._selectionRect.left : this._selectionRect.left + this._selectionRect.width;\n    }\n  }\n\n  private _handleDomElementChange(e: Event) {\n    const target = e.target as HTMLInputElement;\n    if (target && !this.domElement) {\n      this.domElement = target;\n    }\n    if (this.options.pattern !== '') {\n      const filteredValue = target.value.replace(new RegExp(this.options.pattern, 'g'), '');\n      target.value = filteredValue;\n      this._value = filteredValue;\n    } else {\n      this._value = target.value;\n    }\n\n    this.input.text =\n      this.options.type === 'password'\n        ? this._value\n            ?.split('')\n            .map(() => '*')\n            .join('')\n        : this._value;\n\n    this._updateCaretAndSelection();\n\n    if (!this.isClone) {\n      this.onChange.emit({ input: this, domElement: this.domElement, value: this._value });\n      this.validate();\n    }\n  }\n}\n", "import { DestroyOptions, FederatedPointerEvent, Graphics, Point, Sprite } from 'pixi.js';\nimport { Container } from '../display';\nimport { JoystickDirection } from '../plugins';\nimport { Signal } from '../signals';\n\nexport interface IJoystick {\n  onChange: Signal<(detail: JoystickSignalDetail) => void>;\n  onStart: Signal<() => void>;\n  onEnd: Signal<() => void>;\n  onDestroy: Signal<() => void>;\n  settings: JoystickSettings;\n  outerRadius: number;\n  innerRadius: number;\n  outer: Sprite | Graphics;\n  inner: Sprite | Graphics;\n  dragging: boolean;\n  pointData: Point;\n  power: number;\n  startPosition: Point;\n  direction: JoystickDirection;\n}\n\nexport interface JoystickSignalDetail {\n  angle: number;\n  direction: JoystickDirection;\n  power: number;\n}\n\nexport interface JoystickSettings {\n  outer?: Sprite | Graphics;\n  inner?: Sprite | Graphics;\n  outerScale?: number;\n  innerScale?: number;\n  threshold?: number;\n}\n\nexport class Joystick extends Container implements IJoystick {\n  onChange = new Signal<(detail: JoystickSignalDetail) => void>();\n  onStart = new Signal<() => void>();\n  onEnd = new Signal<() => void>();\n  onDestroy = new Signal<() => void>();\n  settings: JoystickSettings;\n  outerRadius: number = 0;\n  innerRadius: number = 0;\n\n  outer!: Sprite | Graphics;\n  inner!: Sprite | Graphics;\n\n  innerAlphaStandby = 0.5;\n\n  dragging: boolean = false;\n  pointData: Point = new Point();\n  power: number;\n  startPosition: Point;\n  direction: JoystickDirection = JoystickDirection.None;\n  threshold: number;\n\n  private _pointerId?: number;\n\n  constructor(opts: Partial<JoystickSettings>) {\n    super();\n\n    this.settings = Object.assign(\n      {\n        outerScale: 1,\n        innerScale: 1,\n      },\n      opts,\n    );\n\n    if (!this.settings.outer) {\n      const outer = new Graphics();\n      outer.circle(0, 0, 60).fill({ color: 0x0 });\n      outer.alpha = 0.5;\n      this.settings.outer = outer;\n    }\n\n    if (!this.settings.inner) {\n      const inner = new Graphics();\n      inner.circle(0, 0, 35).fill({ color: 0x0 });\n      inner.alpha = this.innerAlphaStandby;\n      this.settings.inner = inner;\n    }\n\n    this.threshold = this.settings.threshold ?? 0.01;\n\n    this.initialize();\n  }\n\n  initialize() {\n    this.outer = this.settings.outer!;\n    this.inner = this.settings.inner!;\n\n    this.outer.scale.set(this.settings.outerScale, this.settings.outerScale);\n    this.inner.scale.set(this.settings.innerScale, this.settings.innerScale);\n\n    if ('anchor' in this.outer) {\n      this.outer.anchor.set(0.5);\n    }\n    if ('anchor' in this.inner) {\n      this.inner.anchor.set(0.5);\n    }\n\n    this.add.existing(this.outer);\n    this.add.existing(this.inner);\n\n    // this.outerRadius = this.containerJoystick.width / 2;\n    this.outerRadius = this.width / 2.5;\n    this.innerRadius = this.inner.width / 2;\n\n    this.bindEvents();\n  }\n\n  handleDragMove(e: FederatedPointerEvent) {\n    if (!this.dragging || e.pointerId !== this._pointerId) {\n      return;\n    }\n    const newPosition = this.toLocal(e.global);\n    const sideX = newPosition.x - this.startPosition.x;\n    const sideY = newPosition.y - this.startPosition.y;\n\n    const centerPoint = new Point(0, 0);\n    let angle = 0;\n    let direction = JoystickDirection.None;\n    if (sideX == 0 && sideY == 0) {\n      this.direction = direction;\n      return;\n    }\n\n    if (sideX === 0) {\n      if (sideY > 0) {\n        centerPoint.set(0, sideY > this.outerRadius ? this.outerRadius : sideY);\n        angle = 270;\n        direction = JoystickDirection.Bottom;\n      } else {\n        centerPoint.set(0, -(Math.abs(sideY) > this.outerRadius ? this.outerRadius : Math.abs(sideY)));\n        angle = 90;\n        direction = JoystickDirection.Top;\n      }\n      this.inner.position.set(centerPoint.x, centerPoint.y);\n      this.power = this.getPower(centerPoint);\n      if (this.power >= this.threshold) {\n        this.direction = direction;\n        this.onChange.emit({ angle, direction, power: this.power });\n        return;\n      }\n    }\n\n    if (sideY === 0) {\n      if (sideX > 0) {\n        centerPoint.set(Math.abs(sideX) > this.outerRadius ? this.outerRadius : Math.abs(sideX), 0);\n        angle = 0;\n        direction = JoystickDirection.Right;\n      } else {\n        centerPoint.set(-(Math.abs(sideX) > this.outerRadius ? this.outerRadius : Math.abs(sideX)), 0);\n        angle = 180;\n        direction = JoystickDirection.Left;\n      }\n\n      this.inner.position.set(centerPoint.x, centerPoint.y);\n      this.power = this.getPower(centerPoint);\n      if (this.power >= this.threshold) {\n        this.direction = direction;\n        this.onChange.emit({ angle, direction, power: this.power });\n        return;\n      }\n    }\n\n    const tanVal = Math.abs(sideY / sideX);\n    const radian = Math.atan(tanVal);\n    angle = (radian * 180) / Math.PI;\n\n    let centerX = 0;\n    let centerY = 0;\n\n    if (sideX * sideX + sideY * sideY >= this.outerRadius * this.outerRadius) {\n      centerX = this.outerRadius * Math.cos(radian);\n      centerY = this.outerRadius * Math.sin(radian);\n    } else {\n      centerX = Math.abs(sideX) > this.outerRadius ? this.outerRadius : Math.abs(sideX);\n      centerY = Math.abs(sideY) > this.outerRadius ? this.outerRadius : Math.abs(sideY);\n    }\n\n    if (sideY < 0) {\n      centerY = -Math.abs(centerY);\n    }\n\n    if (sideX < 0) {\n      centerX = -Math.abs(centerX);\n    }\n\n    if (sideX > 0 && sideY < 0) {\n      // < 90\n    } else if (sideX < 0 && sideY < 0) {\n      // 90 ~ 180\n      angle = 180 - angle;\n    } else if (sideX < 0 && sideY > 0) {\n      // 180 ~ 270\n      angle = angle + 180;\n    } else if (sideX > 0 && sideY > 0) {\n      // 270 ~ 369\n      angle = 360 - angle;\n    }\n    centerPoint.set(centerX, centerY);\n    this.power = this.getPower(centerPoint);\n    if (this.power >= this.threshold) {\n      direction = this.getDirection(centerPoint);\n      this.direction = direction;\n      this.inner.position.set(centerPoint.x, centerPoint.y);\n      this.onChange.emit({ angle, direction, power: this.power });\n    }\n  }\n\n  destroy(options?: DestroyOptions) {\n    this.off('pointerdown', this.handleDragStart)\n      .off('pointerup', this.handleDragEnd)\n      .off('pointerupoutside', this.handleDragEnd)\n      .off('pointermove', this.handleDragMove);\n    window.removeEventListener('pointerup', this.handleDragEnd);\n    this.onDestroy.emit();\n    super.destroy(options);\n  }\n\n  protected handleDragStart(e: FederatedPointerEvent) {\n    if (this._pointerId !== undefined) {\n      return;\n    }\n    this._pointerId = e.pointerId;\n    this.startPosition = this.toLocal(e.global);\n    this.dragging = true;\n    this.inner.alpha = 1;\n    this.onStart.emit();\n  }\n\n  protected handleDragEnd(e: FederatedPointerEvent | PointerEvent) {\n    if (this._pointerId !== e.pointerId) {\n      return;\n    }\n    this.direction = JoystickDirection.None;\n    this.inner.position.set(0, 0);\n    this.dragging = false;\n    this.inner.alpha = this.innerAlphaStandby;\n    this.onEnd.emit();\n    this._pointerId = undefined;\n  }\n\n  protected bindEvents() {\n    this.eventMode = 'static';\n    this.on('pointerdown', this.handleDragStart)\n      .on('pointerup', this.handleDragEnd)\n      .on('pointerupoutside', this.handleDragEnd)\n      .on('pointermove', this.handleDragMove);\n\n    window.addEventListener('pointerup', this.handleDragEnd);\n  }\n\n  protected getPower(centerPoint: Point) {\n    const a = centerPoint.x;\n    const b = centerPoint.y;\n    return Math.min(1, Math.sqrt(a * a + b * b) / this.outerRadius);\n  }\n\n  protected getDirection(center: Point) {\n    const rad = Math.atan2(center.y, center.x); // [-PI, PI]\n    if ((rad >= -Math.PI / 8 && rad < 0) || (rad >= 0 && rad < Math.PI / 8)) {\n      return JoystickDirection.Right;\n    } else if (rad >= Math.PI / 8 && rad < (3 * Math.PI) / 8) {\n      return JoystickDirection.BottomRight;\n    } else if (rad >= (3 * Math.PI) / 8 && rad < (5 * Math.PI) / 8) {\n      return JoystickDirection.Bottom;\n    } else if (rad >= (5 * Math.PI) / 8 && rad < (7 * Math.PI) / 8) {\n      return JoystickDirection.BottomLeft;\n    } else if ((rad >= (7 * Math.PI) / 8 && rad < Math.PI) || (rad >= -Math.PI && rad < (-7 * Math.PI) / 8)) {\n      return JoystickDirection.Left;\n    } else if (rad >= (-7 * Math.PI) / 8 && rad < (-5 * Math.PI) / 8) {\n      return JoystickDirection.TopLeft;\n    } else if (rad >= (-5 * Math.PI) / 8 && rad < (-3 * Math.PI) / 8) {\n      return JoystickDirection.Top;\n    } else {\n      return JoystickDirection.TopRight;\n    }\n  }\n}\n", "import { GraphicsContext, TextStyleOptions } from 'pixi.js';\nimport { ContainerConfig } from '../../display';\nimport { ParticleContainerConfig } from '../../display/ParticleContainer';\nimport { ButtonConfig, FlexContainerConfig, UICanvasProps } from '../../ui';\nimport type { PointLike, SpriteSheetLike, TextureLike, WithRequiredProps } from '../../utils';\n\nexport interface AbstractProps {\n  [key: string]: any;\n}\n\nexport interface TextureProps {\n  asset: TextureLike;\n  sheet: SpriteSheetLike;\n}\n\nexport interface PositionProps {\n  x: number;\n  y: number;\n  position: PointLike;\n}\n\nexport interface ScaleProps {\n  scaleX: number;\n  scaleY: number;\n  scale: PointLike;\n}\n\nexport interface PivotProps {\n  pivot: PointLike;\n}\n\nexport interface VisibilityProps {\n  alpha: number;\n  visible: boolean;\n}\n\nexport interface ExistingProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport interface GraphicsProps extends AbstractProps, PositionProps, ScaleProps, PivotProps, VisibilityProps {}\n\nexport interface SvgProps extends GraphicsProps {\n  ctx: string | GraphicsContext;\n}\n\nexport interface SpriteProps extends AbstractProps, TextureProps, ScaleProps, PositionProps, VisibilityProps {\n  anchor: PointLike;\n}\n\nexport interface AnimatedSpriteAnimationProps extends AbstractProps, ScaleProps, PositionProps, VisibilityProps {\n  texturePrefix: string;\n  sheet: SpriteSheetLike;\n  startIndex: number;\n  numFrames: number;\n  zeroPad: number;\n  autoUpdate: boolean;\n  updateAnchor: boolean;\n  loop: boolean;\n  animationSpeed: number;\n}\n\nexport interface AnimatedSpriteProps extends AbstractProps, ScaleProps, PositionProps, VisibilityProps {\n  sheet: SpriteSheetLike;\n  texturePrefix: string;\n  zeroPad: number;\n  animations: { [animationName: string]: Omit<AnimatedSpriteAnimationProps, 'sheet' | 'autoUpdate'> };\n  autoPlay: boolean;\n  autoUpdate: boolean;\n  defaultAnimation: string;\n  reversible: boolean;\n  animationSpeed: number;\n}\n\nexport interface TextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {\n  text: string;\n  anchor: PointLike;\n  resolution: number;\n  roundPixels: boolean;\n  style: Partial<TextStyleOptions>;\n}\n\nexport interface OmittedTextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport const TextPropsKeys: (keyof TextProps)[] = ['text', 'anchor', 'resolution', 'roundPixels', 'style'];\n\nexport interface ContainerProps\n  extends AbstractProps,\n    PositionProps,\n    ScaleProps,\n    PivotProps,\n    VisibilityProps,\n    ContainerConfig {}\n\nexport interface ParticleContainerProps extends AbstractProps, ParticleContainerConfig {}\n\nexport interface FlexContainerProps extends ContainerProps, FlexContainerConfig {}\n\nexport interface UICanvasFactoryProps extends ContainerProps, UICanvasProps {}\n\n// spine\ntype SpineData = {\n  skeleton: string;\n  atlas: string;\n  skel?: boolean;\n};\n\nexport interface SpineProps extends AbstractProps, ScaleProps, PositionProps, VisibilityProps {\n  data: string | SpineData;\n  autoUpdate: boolean;\n  animationName: string;\n  trackIndex: number;\n  loop: boolean;\n  paused: boolean;\n}\n\ninterface _ButtonProps extends AbstractProps, ScaleProps, PositionProps, PivotProps, VisibilityProps, ButtonConfig {}\n\nexport type ButtonProps = WithRequiredProps<_ButtonProps, 'textures'>;\n", "import { Assets, Sprite, Spritesheet, Texture } from 'pixi.js';\nimport { Logger, PointLike, resolvePointLike } from '../../utils';\n\nimport { PositionProps, ScaleProps, TextureProps } from './props';\n\nexport function resolveUnknownKeys(props: any, entity: any) {\n  for (const key in props) {\n    try {\n      (entity as any)[key] = props[key];\n    } catch (e) {\n      Logger.error(`Error setting property ${key}`, e);\n    }\n  }\n}\n\nexport function resolveTexture(props?: Partial<TextureProps>): Texture {\n  let texture: Texture | undefined;\n  const asset = props?.asset;\n  const assetAsString = asset as string;\n  const sheet = props?.sheet;\n  if (asset instanceof Texture) {\n    texture = asset;\n  } else if (!sheet || sheet?.length === 0) {\n    if (Assets.cache.has(assetAsString)) {\n      texture = Assets.get(assetAsString)!;\n    } else if (Assets.get(assetAsString)) {\n      texture = Assets.get(assetAsString).texture!;\n    } else {\n      throw new Error('Asset \"' + asset + '\" not loaded into Pixi cache');\n    }\n  } else {\n    if (!Assets.get(sheet)) {\n      throw new Error('Spritesheet \"' + sheet + '\" not loaded into Pixi cache');\n    } else {\n      const spriteSheet: Spritesheet = Assets.get(sheet) as Spritesheet;\n      const textures = spriteSheet.textures;\n      if (textures !== undefined) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (textures.hasOwnProperty(assetAsString)) {\n          texture = textures[assetAsString];\n        } else if (spriteSheet.linkedSheets !== undefined && spriteSheet.linkedSheets.length > 0) {\n          for (const linkedSheet of spriteSheet.linkedSheets) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (linkedSheet.textures !== undefined && linkedSheet.textures.hasOwnProperty(assetAsString)) {\n              texture = linkedSheet.textures[assetAsString];\n              break;\n            }\n          }\n          if (texture === undefined) {\n            throw new Error(\n              'Asset \"' + asset + '\" not found inside spritesheet \"' + asset + \"' or any of its linked sheets\",\n            );\n          }\n        } else {\n          throw new Error('Asset \"' + asset + '\" not found inside spritesheet \"' + sheet + \"'\");\n        }\n      } else {\n        throw new Error('Spritesheet \"' + sheet + '\" loaded but textures arent?!');\n      }\n    }\n  }\n  return texture || new Sprite().texture;\n}\n\nexport function resolvePosition(props: Partial<PositionProps>, entity: any) {\n  const pos = resolvePointLike(props.position, false, props.x, props.y);\n  entity.x = pos.x;\n  entity.y = pos.y;\n}\n\nexport function resolveScale(props: Partial<ScaleProps>, entity: any) {\n  if (!props) {\n    return;\n  }\n  if (props.scale === undefined) {\n    if (props.scaleX === undefined && props.scaleY === undefined) {\n      return;\n    }\n    if (props.scaleX === undefined) {\n      props.scaleX = 1;\n    }\n    if (props.scaleY === undefined) {\n      props.scaleY = 1;\n    }\n  }\n  const scale = resolvePointLike(props.scale, false, props.scaleX, props.scaleY);\n  entity.scale.set(scale.x, scale.y);\n}\n\nexport function resolveAnchor(anchor: PointLike | undefined, entity: any) {\n  if (anchor !== undefined) {\n    const anchorPoint = resolvePointLike(anchor);\n    entity.anchor.set(anchorPoint.x, anchorPoint.y);\n  }\n}\n\nexport function resolvePivot(pivot: PointLike | undefined, entity: any) {\n  if (pivot !== undefined) {\n    const pivotPoint = resolvePointLike(pivot);\n    entity.pivot.set(pivotPoint.x, pivotPoint.y);\n  }\n}\n", "import { AnimatedSprite, Container, ContainerConfig, ContainerConfigKeys, SpineAnimation, Svg } from '../../display';\nimport type { ButtonConfig, FlexContainerConfig, UICanvasConfig } from '../../ui';\nimport {\n  Button,\n  ButtonConfigKeys,\n  FlexContainer,\n  FlexContainerConfigKeys,\n  UICanvas,\n  UICanvasConfigKeys,\n} from '../../ui';\nimport { omitKeys, pluck, resolvePointLike, Spine, WithRequiredProps } from '../../utils';\nimport {\n  AnimatedSpriteProps,\n  ButtonProps,\n  ContainerProps,\n  ExistingProps,\n  FlexContainerProps,\n  GraphicsProps,\n  ParticleContainerProps,\n  SpineProps,\n  SpriteProps,\n  SvgProps,\n  TextProps,\n  TextPropsKeys,\n  UICanvasFactoryProps,\n} from './props';\nimport {\n  resolveAnchor,\n  resolvePivot,\n  resolvePosition,\n  resolveScale,\n  resolveTexture,\n  resolveUnknownKeys,\n} from './utils';\n\nimport { BitmapText, Graphics, Sprite, Text } from 'pixi.js';\nimport {\n  ParticleContainer,\n  ParticleContainerConfig,\n  ParticleContainerConfigKeys,\n} from '../../display/ParticleContainer';\n\nexport const defaultFactoryMethods = {\n  existing: <TEntity>(entity: TEntity, props?: Partial<ExistingProps>): TEntity => {\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  container: (props?: Partial<ContainerProps>) => {\n    const config = pluck(props ?? {}, ContainerConfigKeys);\n    const otherProps = omitKeys<ContainerProps, keyof ContainerConfig>(ContainerConfigKeys, props ?? {});\n    const entity = new Container(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  particleContainer: (props?: Partial<ParticleContainerProps>) => {\n    const config = pluck(props ?? {}, ParticleContainerConfigKeys);\n    const otherProps = omitKeys<ParticleContainerProps, keyof ParticleContainerConfig>(\n      ParticleContainerConfigKeys,\n      props ?? {},\n    );\n    const entity = new ParticleContainer(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  texture: resolveTexture,\n  sprite: (props?: Partial<SpriteProps>) => {\n    const entity = new Sprite(props ? resolveTexture(props) : undefined);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  animatedSprite: (props?: Partial<AnimatedSpriteProps>): AnimatedSprite => {\n    const entity = new AnimatedSprite(props);\n    if (props?.position) {\n      resolvePosition({ position: props.position, x: props.x, y: props.y }, entity);\n    }\n    if (props?.scale) {\n      resolveScale({ scale: props.scale ?? 1, scaleX: props.scaleX, scaleY: props.scaleY }, entity);\n    }\n    if (props?.pivot) {\n      resolvePivot(props.pivot, entity);\n    }\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props ?? {},\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  graphics: (props?: Partial<GraphicsProps>) => {\n    const entity = new Graphics();\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  svg(props: WithRequiredProps<SvgProps, 'ctx'>) {\n    const entity = new Svg(props.ctx);\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  text: (props?: Partial<TextProps>) => {\n    const options = props\n      ? {\n          text: props.text,\n          roundPixels: props.roundPixels,\n          resolution: props.resolution,\n          style: props.style,\n          anchor: props.anchor ? resolvePointLike(props.anchor, true) : undefined,\n        }\n      : {};\n    const entity = new Text(options);\n    if (!props) return entity;\n    const { position, x, y, scale, scaleX, scaleY, pivot } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props,\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  bitmapText: (props?: Partial<TextProps>) => {\n    const options = pluck(props ?? {}, TextPropsKeys);\n    const entity = new BitmapText(options);\n    if (props?.position) {\n      resolvePosition({ position: props.position, x: props.x, y: props.y }, entity);\n    }\n    if (props?.scale) {\n      resolveScale({ scale: props.scale ?? 1, scaleX: props.scaleX, scaleY: props.scaleY }, entity);\n    }\n    if (props?.pivot) {\n      resolvePivot(props.pivot, entity);\n    }\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props ?? {},\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  // dill pixel specific stuff\n  button: (props?: Partial<ButtonProps>) => {\n    const config = pluck(props ?? {}, ButtonConfigKeys);\n    const otherProps = omitKeys<ButtonProps, keyof ButtonConfig>(ButtonConfigKeys, props ?? {});\n    const entity = new Button(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  flexContainer: (props?: Partial<FlexContainerProps>): FlexContainer => {\n    const config = pluck(props ?? {}, FlexContainerConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof FlexContainerConfig>(FlexContainerConfigKeys, props ?? {});\n    const entity = new FlexContainer(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  uiCanvas: (props?: Partial<UICanvasFactoryProps>): UICanvas => {\n    const config = pluck(props ?? {}, UICanvasConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof UICanvasConfig>(UICanvasConfigKeys, props ?? {});\n    const entity = new UICanvas(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spine: (props?: Partial<SpineProps>): Spine => {\n    let data = props?.data;\n\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      let ext = data.slice(-5);\n      if (ext !== '.json' && ext !== '.skel') {\n        ext = '.json';\n      } else {\n        data = data.substring(0, data.length - 5);\n      }\n      data = { skeleton: data + ext, atlas: data + '.atlas' };\n    }\n    const entity: Spine = (window as any).Spine.from(data);\n    if (!props) return entity;\n    if (props.autoUpdate !== undefined) entity.autoUpdate = props.autoUpdate;\n    if (props.animationName) entity.state.setAnimation(props.trackIndex ?? 0, props.animationName, props.loop);\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spineAnimation: (props?: Partial<SpineProps>): SpineAnimation => {\n    const entity = new SpineAnimation(props);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n};\n", "import { Container as PIXIContainer } from 'pixi.js';\nimport { defaultFactoryMethods } from './index';\nimport { createFactoryMethods } from './methods';\n\nexport interface IFactory<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods> extends PIXIContainer {\n  add: T;\n  make: T;\n}\n\nexport function Factory<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  extensions?: Partial<T>,\n): new () => IFactory<T> {\n  return class ExtendedContainer extends PIXIContainer implements IFactory<T> {\n    add: T;\n    make: T;\n\n    constructor() {\n      super();\n      extensions = Object.assign(defaultFactoryMethods, extensions);\n      this.make = createFactoryMethods(extensions, this, false);\n      this.add = createFactoryMethods(extensions, this, true);\n    }\n  };\n}\n", "import { IApplication } from '../core';\nimport { Signal } from '../signals';\nimport { KeyboardKey } from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\nexport type KeyboardEventType = 'keydown' | 'keyup';\nexport type KeyboardEventDetail = { event: KeyboardEvent; key: string };\nexport type KeySignal = Signal<(detail: KeyboardEventDetail) => void>;\n\nexport interface IKeyboardPlugin extends IPlugin {\n  enabled: boolean;\n  readonly keysDown: Set<string>;\n\n  onKeyDown(key?: KeyboardKey): KeySignal;\n\n  onKeyUp(key?: KeyboardKey): KeySignal;\n\n  isKeyDown(key: string): boolean;\n}\n\nexport function normalizeKey(key: string | undefined): string {\n  if (key === undefined) {\n    key = '*undefined*';\n  } else if (key === ' ') {\n    key = 'Space';\n  } else if (key.length === 1) {\n    key = key.toUpperCase();\n  }\n  return key;\n}\n\nexport class KeyboardPlugin extends Plugin implements IKeyboardPlugin {\n  public readonly id: string = 'keyboard';\n  // global signals\n  public onGlobalKeyDown: Signal<(detail: KeyboardEventDetail) => void> = new Signal();\n  public onGlobalKeyUp: Signal<(detail: KeyboardEventDetail) => void> = new Signal();\n\n  private _keyDownSignals: Map<string | undefined, KeySignal> = new Map();\n  private _keyUpSignals: Map<string | undefined, KeySignal> = new Map();\n\n  private _keysDown: Set<string> = new Set();\n\n  get keysDown() {\n    return this._keysDown;\n  }\n\n  private _enabled: boolean = true;\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public set enabled(value: boolean) {\n    this._enabled = value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public initialize(_app: IApplication): void {\n    // track which keys are down\n    document.addEventListener('keydown', this._handleKeyDown);\n    document.addEventListener('keyup', this._handleKeyUp);\n  }\n\n  public destroy() {\n    document.removeEventListener('keydown', this._handleEvent);\n    document.removeEventListener('keyup', this._handleEvent);\n\n    document.addEventListener('keydown', this._handleKeyDown);\n    document.addEventListener('keyup', this._handleKeyUp);\n  }\n\n  public onKeyDown(key?: KeyboardKey): KeySignal {\n    return this._checkAndAddSignal(key || undefined, 'keydown');\n  }\n\n  public onKeyUp(key?: KeyboardKey): KeySignal {\n    return this._checkAndAddSignal(key || undefined, 'keyup');\n  }\n\n  public isKeyDown(key: KeyboardKey): boolean {\n    return this._keysDown.has(key);\n  }\n\n  _update() {\n    //\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onGlobalKeyDown', 'onGlobalKeyUp'];\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['onKeyDown', 'onKeyUp', 'isKeyDown'];\n  }\n\n  private _handleKeyDown(e: KeyboardEvent): void {\n    const key = normalizeKey(e.key);\n    this._keysDown.add(key);\n    this.onGlobalKeyDown.emit({ event: e, key: e.key });\n  }\n\n  private _handleKeyUp(e: KeyboardEvent): void {\n    const key = normalizeKey(e.key);\n    this._keysDown.delete(key);\n    this.onGlobalKeyUp.emit({ event: e, key: e.key });\n  }\n\n  /**\n   * Check if the signal exists and add it if it doesn't\n   * Also, if this is the first signal, start listening for the event\n   * @param {string} key\n   * @param {KeyboardEventType} eventType\n   * @returns {KeySignal}\n   * @private\n   */\n  private _checkAndAddSignal(key: string | undefined, eventType: KeyboardEventType): KeySignal {\n    const signalMap = eventType === 'keydown' ? this._keyDownSignals : this._keyUpSignals;\n\n    if (!signalMap.size) {\n      this._listen(eventType);\n    }\n\n    key = normalizeKey(key);\n\n    if (!signalMap.has(key)) {\n      signalMap.set(key, new Signal<(detail: KeyboardEventDetail) => void>());\n    }\n\n    return signalMap.get(key) as KeySignal;\n  }\n\n  private _listen(eventType: KeyboardEventType): void {\n    document.addEventListener(eventType, this._handleEvent);\n  }\n\n  private _handleEvent(event: KeyboardEvent): void {\n    if (!this._enabled) {\n      return;\n    }\n    const signalMap = event.type === 'keydown' ? this._keyDownSignals : this._keyUpSignals;\n    const key = normalizeKey(event.key);\n    signalMap.get('*undefined*')?.emit({ event, key });\n    signalMap.get(key)?.emit({ event, key });\n  }\n}\n", "import type { ControlsActionMap } from '../..';\nimport { Application } from '../../Application';\nimport { IApplication } from '../../core';\n\nexport class AbstractControls {\n  protected scheme: any;\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  initialize(scheme: Partial<ControlsActionMap>) {\n    this.scheme = scheme;\n  }\n}\n", "import { Application } from '../../../Application';\nimport { WithSignals } from '../../../mixins';\nimport { bindAllMethods } from '../../../utils';\nimport type { Action } from '../../actions';\nimport { normalizeKey, type KeyboardEventDetail } from '../../KeyboardPlugin';\nimport { AbstractControls } from '../AbstractControls';\nimport type { ControlsActionMap, KeyboardControlsMap, KeyboardControlsScheme } from '../types';\n\nexport class KeyboardControls extends WithSignals(AbstractControls) {\n  protected scheme: Partial<KeyboardControlsMap>;\n  private _keyDownMap: Partial<KeyboardControlsScheme>;\n  private _keyUpMap: Partial<KeyboardControlsScheme>;\n  private _keyCombinations: string[][] = [];\n  private _singleDownKeys: Set<string> = new Set();\n  private _keyCombinationsMap: Map<string[], Action> = new Map();\n  private _activeDownKeys: Map<string, Action> = new Map();\n  private _activeUpKeys: Map<string, Action> = new Map();\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  get app() {\n    return Application.getInstance();\n  }\n\n  isActionActive(action: Action): boolean {\n    const controlsAction = this.scheme['down']?.[action] ?? null;\n    if (!controlsAction) {\n      return false;\n    }\n    if (Array.isArray(controlsAction)) {\n      return (\n        this._keyCombinationsMap.has(controlsAction) || controlsAction.some((key) => this._singleDownKeys.has(key))\n      );\n    } else {\n      return this._singleDownKeys.has(controlsAction);\n    }\n  }\n\n  public initialize(scheme: Partial<KeyboardControlsMap>): void {\n    super.initialize(scheme as Partial<ControlsActionMap>);\n    this._keyDownMap = scheme.down || {};\n    this._keyUpMap = scheme.up || {};\n    this._sortActions();\n  }\n\n  public connect() {\n    this.addSignalConnection(\n      this.app.signal.onActionContextChanged.connect(this._handleContextChanged),\n      this.app.keyboard.onKeyDown().connect(this._handleKeyDown),\n      this.app.keyboard.onKeyUp().connect(this._handleKeyUp),\n    );\n    this.app.ticker.add(this._update);\n  }\n\n  private _sortActions() {\n    const actions = this.app.actionsPlugin.getActions();\n    this._keyCombinations = [];\n    this._keyCombinationsMap.clear();\n    this._activeDownKeys.clear();\n    this._activeUpKeys.clear();\n    let keys = Object.keys(this._keyDownMap);\n\n    keys.forEach((key) => {\n      const item = this._keyDownMap[key];\n      const action = actions[key];\n      if (\n        action.context !== '*' &&\n        action.context !== this.app.actionContext &&\n        !action.context.includes(this.app.actionContext)\n      ) {\n        return;\n      }\n      let input = item;\n      if (input) {\n        if (!Array.isArray(input)) {\n          input = [input];\n        }\n        input.forEach((inputString: string) => {\n          if (inputString.includes('+')) {\n            const combo = inputString.split('+');\n            this._keyCombinations.push(combo);\n            this._keyCombinationsMap.set(combo, key as Action);\n          } else {\n            this._activeDownKeys.set(inputString, key as Action);\n          }\n        });\n      }\n    });\n\n    // sort them from the largest to smallest\n    this._keyCombinations.sort((a, b) => b.length - a.length);\n\n    keys = Object.keys(this._keyUpMap);\n    keys.forEach((key) => {\n      const item = this._keyUpMap[key];\n      let input = item;\n      if (input) {\n        if (!Array.isArray(input)) {\n          input = [input];\n        }\n        input.forEach((inputString: string) => {\n          this._activeUpKeys.set(inputString, key as Action);\n        });\n      }\n    });\n\n    //Logger.log('keyDownMap', this._keyDownMap, 'activeDownKeys', this._activeDownKeys);\n    //Logger.log('keyUpMap', this._keyUpMap, 'activeUpKeys', this._activeUpKeys);\n  }\n\n  private _handleContextChanged() {\n    this._getPossibleActions();\n  }\n\n  private _getPossibleActions() {\n    this._sortActions();\n  }\n\n  private _handleKeyDown(detail: KeyboardEventDetail): void {\n    const key = normalizeKey(detail.event.key);\n    this._singleDownKeys.add(key);\n  }\n\n  private _handleKeyUp(detail: KeyboardEventDetail): void {\n    const key = normalizeKey(detail.event.key);\n    this._singleDownKeys.delete(key);\n\n    const action = this._activeUpKeys.get(key);\n    if (action) {\n      this.app.action(action, { combination: false, inputState: 'up', key });\n    }\n  }\n\n  private _update() {\n    if (!this.app.keyboard) {\n      return;\n    }\n    const keysDown = this.app.keyboard.keysDown;\n    if (keysDown.size === 0) {\n      return;\n    }\n    const eliminated = new Set<string>();\n    // this._keyCombinations is already sorted from largest to smallest\n    for (let i = 0; i < this._keyCombinations.length; i++) {\n      const combination = this._keyCombinations[i];\n      // check if all of the keys in the combination are down\n      if (combination.some((key) => eliminated.has(key))) {\n        continue;\n      }\n      if (combination.every((key) => keysDown.has(key))) {\n        combination.forEach((key) => eliminated.add(key));\n        // send the action\n        const action = this._keyCombinationsMap.get(combination);\n        if (action) {\n          this.app.action(action, {\n            key: combination,\n            combination: true,\n            inputState: 'down',\n          });\n        }\n      }\n    }\n\n    // order doesn't matter here\n    this._singleDownKeys.forEach((key) => {\n      if (eliminated.has(key)) {\n        return;\n      }\n      if (keysDown.has(key)) {\n        const action = this._activeDownKeys.get(key);\n        if (action) {\n          this.app.action(action, { key, combination: false, inputState: 'down' });\n        }\n      }\n    });\n  }\n}\n", "export enum JoystickDirection {\n  None = 'none',\n  Left = 'left',\n  Top = 'top',\n  Bottom = 'bottom',\n  Right = 'right',\n  TopLeft = 'top_left',\n  TopRight = 'top_right',\n  BottomLeft = 'bottom_left',\n  BottomRight = 'bottom_right',\n}\nexport type JoystickDirectionType =\n  | JoystickDirection.None\n  | JoystickDirection.Left\n  | JoystickDirection.Top\n  | JoystickDirection.Bottom\n  | JoystickDirection.Right\n  | JoystickDirection.TopLeft\n  | JoystickDirection.TopRight\n  | JoystickDirection.BottomLeft\n  | JoystickDirection.BottomRight;\n\n// export a type of all the JoystickDirections\nexport const JOYSTICK_DIRECTIONS: JoystickDirectionType[] = [\n  JoystickDirection.None,\n  JoystickDirection.Left,\n  JoystickDirection.Top,\n  JoystickDirection.Bottom,\n  JoystickDirection.Right,\n  JoystickDirection.TopLeft,\n  JoystickDirection.TopRight,\n  JoystickDirection.BottomLeft,\n  JoystickDirection.BottomRight,\n];\n", "import { bindAllMethods } from '../../../utils';\nimport type { ControlsActionMap, JoystickControlsScheme, TouchControlsMap, TouchControlsScheme } from '../types';\n\nimport { JoystickDirection } from '..';\nimport { Application } from '../../../Application';\nimport { WithSignals } from '../../../mixins';\nimport { type IButton, type IJoystick } from '../../../ui';\nimport type { Action } from '../../actions';\nimport { AbstractControls } from '../AbstractControls';\n\nexport class TouchControls extends WithSignals(AbstractControls) {\n  protected scheme: Partial<TouchControlsMap>;\n  private _buttons: Set<IButton> = new Set();\n  private _joystickMap: Partial<JoystickControlsScheme>;\n  private _buttonDownMap: Partial<TouchControlsScheme>;\n  private _buttonUpMap: Partial<TouchControlsScheme>;\n  private _combinations: string[][] = [];\n  private _singleDownButtons: Set<string> = new Set();\n  private _activeJoystickDirections: Map<JoystickDirection, Action> = new Map();\n  private _activeButtonDownIds: Map<string, Action> = new Map();\n  private _activeButtonUpIds: Map<string, Action> = new Map();\n  private _combinationsMap: Map<string[], Action> = new Map();\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  private _joystick: IJoystick;\n\n  get joystick(): IJoystick {\n    return this._joystick;\n  }\n\n  set joystick(value: IJoystick) {\n    this._joystick = value;\n  }\n\n  get app() {\n    return Application.getInstance();\n  }\n\n  addButton(button: IButton) {\n    if (!button || this._buttons.has(button)) {\n      return;\n    }\n    this.addSignalConnection(\n      button.onDown.connect(() => this._handleButtonDown(button)),\n      button.onUp.connect(() => this._handleButtonUp(button)),\n      button.onUpOutside.connect(() => this._handleButtonUp(button)),\n      button.onDestroy.connect(() => this.removeButton(button)),\n    );\n    this._buttons.add(button);\n  }\n\n  removeButton(button: IButton) {\n    if (!button || !this._buttons.has(button)) {\n      return;\n    }\n    button.onDown.disconnect(() => this._handleButtonDown(button));\n    button.onUp.disconnect(() => this._handleButtonUp(button));\n    button.onUpOutside.disconnect(() => this._handleButtonUp(button));\n    button.onDestroy.disconnect(() => this.removeButton(button));\n    this._buttons.delete(button);\n  }\n\n  public initialize(scheme: Partial<TouchControlsMap>): void {\n    super.initialize(scheme as Partial<ControlsActionMap>);\n    this._buttonDownMap = scheme.down || {};\n    this._buttonUpMap = scheme.up || {};\n    this._joystickMap = scheme.joystick || {};\n    this.app.signal.onActionContextChanged.connect(this._sortActions);\n    this._sortActions();\n  }\n\n  public connect() {\n    this.app.ticker.add(this._update);\n  }\n\n  isActionActive(action: Action): boolean {\n    const buttonAction = this.scheme['down']?.[action] ?? null;\n    if (buttonAction) {\n      if (Array.isArray(buttonAction)) {\n        return this._combinationsMap.has(buttonAction);\n      } else {\n        return this._singleDownButtons.has(buttonAction);\n      }\n    } else {\n      const joystickAction = this.scheme['joystick']?.[action] ?? null;\n      if (this._joystick && joystickAction) {\n        if (Array.isArray(joystickAction)) {\n          return joystickAction.includes(this._joystick.direction);\n        } else {\n          return joystickAction === this._joystick?.direction;\n        }\n      }\n    }\n    return false;\n  }\n\n  private _sortActions() {\n    const actions = this.app.actionsPlugin.getActions();\n    this._combinations = [];\n    this._combinationsMap.clear();\n    this._activeJoystickDirections.clear();\n    this._activeButtonDownIds.clear();\n    this._activeButtonUpIds.clear();\n\n    let buttons = Object.keys(this._buttonDownMap);\n    buttons.forEach((key) => {\n      const item = this._buttonDownMap[key];\n      const action = actions[key];\n      if (\n        action.context !== '*' &&\n        action.context !== this.app.actionContext &&\n        !action.context.includes(this.app.actionContext)\n      ) {\n        return;\n      }\n      let input = item;\n      if (input) {\n        if (!Array.isArray(input)) {\n          input = [input];\n        }\n        input.forEach((inputString) => {\n          if (inputString.includes('+')) {\n            const combo = inputString.split('+');\n            this._combinations.push(combo);\n            this._combinationsMap.set(combo, key as Action);\n          } else {\n            this._activeButtonDownIds.set(inputString, key as Action);\n          }\n        });\n      }\n    });\n\n    // sort them from the largest to smallest\n    this._combinations.sort((a, b) => b.length - a.length);\n\n    buttons = Object.keys(this._buttonUpMap);\n    buttons.forEach((key) => {\n      const item = this._buttonUpMap[key];\n      const action = actions[key];\n      if (\n        action.context !== '*' &&\n        action.context !== this.app.actionContext &&\n        !action.context.includes(this.app.actionContext)\n      ) {\n        return;\n      }\n      this._activeButtonUpIds.set(item as string, key as Action);\n    });\n\n    const joystickActions = Object.keys(this._joystickMap);\n    joystickActions.forEach((key) => {\n      const item = this._joystickMap[key];\n      let input = item;\n      if (input) {\n        if (!Array.isArray(input)) {\n          input = [input];\n        }\n        input.forEach((inputString) => {\n          this._activeJoystickDirections.set(inputString as JoystickDirection, key as Action);\n        });\n      }\n    });\n  }\n\n  private _handleButtonDown(button: IButton): void {\n    this._singleDownButtons.add(button.id!);\n  }\n\n  private _handleButtonUp(button: IButton): void {\n    this._singleDownButtons.delete(button.id!);\n    const action = this._activeButtonUpIds.get(button.id!);\n    if (action) {\n      this.app.action(action, {\n        combination: false,\n        inputState: 'up',\n        button: button.id!,\n      });\n    }\n  }\n\n  private _update() {\n    const joystickDirection = this._joystick?.direction ?? null;\n    const buttonsDown = this._singleDownButtons;\n    const eliminated = new Set<string>();\n    // this._combinations is already sorted from largest to smallest\n    for (let i = 0; i < this._combinations.length; i++) {\n      const combination = this._combinations[i];\n      // check if all of the keys in the combination are down\n      if (combination.some((key) => eliminated.has(key))) {\n        continue;\n      }\n      if (combination.every((key) => buttonsDown.has(key) || joystickDirection === key)) {\n        combination.forEach((key) => eliminated.add(key));\n        // send the action\n        const action = this._combinationsMap.get(combination);\n        if (action) {\n          this.app.action(action, {\n            button: combination,\n            combination: true,\n            inputState: 'down',\n          });\n        }\n      }\n    }\n\n    // order doesn't matter here\n    this._singleDownButtons.forEach((id) => {\n      if (eliminated.has(id)) {\n        return;\n      }\n      if (buttonsDown.has(id)) {\n        const action = this._activeButtonDownIds.get(id);\n        if (action) {\n          this.app.action(action, {\n            button: id,\n            combination: false,\n            inputState: 'down',\n          });\n        }\n      }\n    });\n\n    // joustick dir\n    if (joystickDirection) {\n      const action = this._activeJoystickDirections.get(joystickDirection);\n      if (action) {\n        this.app.action(action, {\n          inputState: 'joystick',\n        });\n      }\n    }\n  }\n}\n", "import { Application } from '../../Application';\nimport { IApplication } from '../../core';\nimport { bindAllMethods } from '../../utils';\nimport { Action } from '../actions';\nimport { IControls, UserControls } from './interfaces';\nimport { KeyboardControls } from './keyboard';\nimport { TouchControls } from './touch';\n\nexport class Controls implements IControls {\n  keyboard: KeyboardControls;\n  touch: TouchControls;\n\n  constructor() {\n    bindAllMethods(this);\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  destroy() {\n    if (this.keyboard) {\n      this.keyboard.destroy();\n    }\n    if (this.touch) {\n      this.touch.destroy();\n    }\n  }\n\n  isActionActive(action: Action): boolean {\n    const isActive = this.keyboard?.isActionActive(action) || this.touch?.isActionActive(action) || false;\n    return isActive;\n  }\n\n  initialize(scheme: UserControls) {\n    if (scheme.keyboard) {\n      this.keyboard = new KeyboardControls();\n      this.keyboard.initialize(scheme.keyboard);\n    }\n\n    if (scheme.touch) {\n      this.touch = new TouchControls();\n      this.touch.initialize(scheme.touch);\n    }\n  }\n\n  public connect() {\n    if (this.keyboard) {\n      this.keyboard.connect();\n    }\n    if (this.touch) {\n      this.touch.connect();\n    }\n  }\n}\n", "import type { ActionsList, IActionsPlugin } from '../actions';\nimport { Action, DefaultActions } from '../actions';\nimport { Controls } from './Controls';\n\nimport { IApplication } from '../../core';\nimport { Signal } from '../../signals';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\nimport { InputController, InputControllerTypes } from './constants';\nimport { UserControls } from './interfaces';\n\nexport type InputManagerOptions = {\n  actions?: ActionsList;\n  controls?: UserControls;\n};\n\nexport interface IInputPlugin extends IPlugin {\n  readonly controls: Controls;\n  activeGamepads: Map<string, Gamepad>;\n  activeControllers: Set<string>;\n  options: InputManagerOptions;\n  onGamepadConnected: Signal<(gamepad: Gamepad) => void>;\n  onGamepadDisconnected: Signal<(gamepad: Gamepad) => void>;\n  onControllerActivated: Signal<(controller: string) => void>;\n  onControllerDeactivated: Signal<(controller: string) => void>;\n\n  isControllerActive(controller: InputController): boolean;\n\n  isGamepadActive(gamepad: Gamepad): boolean;\n\n  isActionActive(action: Action): boolean;\n}\n\nconst defaultOptions = {\n  actions: DefaultActions,\n};\n\nexport class InputPlugin extends Plugin implements IInputPlugin {\n  public readonly id = 'input';\n\n  // controls\n  public readonly controls = new Controls();\n\n  // properties\n  public activeGamepads = new Map<string, Gamepad>();\n  public activeControllers = new Set<string>([]);\n  public options: InputManagerOptions;\n  // signals\n  public onGamepadConnected: Signal<(gamepad: Gamepad) => void> = new Signal<(gamepad: Gamepad) => void>();\n  public onGamepadDisconnected: Signal<(gamepad: Gamepad) => void> = new Signal<(gamepad: Gamepad) => void>();\n  public onControllerActivated: Signal<(controller: string) => void> = new Signal<(controller: string) => void>();\n  public onControllerDeactivated: Signal<(controller: string) => void> = new Signal<(controller: string) => void>();\n\n  isActionActive(action: Action): boolean {\n    return this.controls.isActionActive(action);\n  }\n\n  async initialize(app: IApplication, options: InputManagerOptions = defaultOptions): Promise<void> {\n    this.options = { ...defaultOptions, ...options };\n\n    app.stage.eventMode = 'static';\n    app.stage.on('touchstart', this._onTouchStart);\n    app.stage.on('globalmousemove', this._onMouseMove);\n    window.addEventListener('keydown', this._onKeyDown);\n    window.addEventListener('gamepadconnected', this._onGamepadConnected);\n    window.addEventListener('gamepaddisconnected', this._onGamepadDisconnected);\n\n    if (this.options.controls) {\n      this.controls.initialize(this.options.controls);\n    }\n  }\n\n  public postInitialize(): void {\n    if (this.controls) {\n      this.controls.connect();\n    }\n  }\n\n  destroy(): void {\n    // unregister all event listeners\n    this.app.stage.off('touchstart', this._onTouchStart);\n    this.app.stage.off('globalmousemove', this._onMouseMove);\n    window.removeEventListener('keydown', this._onKeyDown);\n    window.removeEventListener('gamepadconnected', this._onGamepadConnected);\n    window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnected);\n\n    super.destroy();\n  }\n\n  isControllerActive(controller: InputController): boolean {\n    return this.activeControllers.has(controller);\n  }\n\n  isGamepadActive(gamepad: Gamepad): boolean {\n    return this.activeGamepads.has(gamepad.id);\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onGamepadConnected', 'onGamepadDisconnected', 'onControllerActivated', 'onControllerDeactivated'];\n  }\n\n  private _activateController(inputController: string): void {\n    if (this.activeControllers.has(inputController)) {\n      return;\n    }\n    this.activeControllers.add(inputController);\n    // emit the controller activated signal\n    this.onControllerActivated.emit(inputController);\n  }\n\n  private _deactivateController(inputController: InputController): void {\n    const wasControllerActive = this.activeControllers.has(inputController);\n    if (!wasControllerActive) {\n      return;\n    }\n    this.activeControllers.delete(inputController);\n    // emit the controller deactivated signal\n    this.onControllerDeactivated.emit(inputController);\n  }\n\n  private _activateGamepad(gamepad: Gamepad): void {\n    this.activeGamepads.set(gamepad.id, gamepad);\n  }\n\n  private _deactivateGamepad(gamepadId: string): void {\n    this.activeGamepads.delete(gamepadId);\n  }\n\n  private _onTouchStart(): void {\n    this._activateController(InputControllerTypes.Touch);\n  }\n\n  private _onMouseMove(): void {\n    this._activateController(InputControllerTypes.Mouse);\n  }\n\n  private _onKeyDown(): void {\n    this._activateController(InputControllerTypes.Keyboard);\n  }\n\n  private _onGamepadConnected(event: GamepadEvent): void {\n    this._activateController(InputControllerTypes.GamePad);\n    // add the gamepad id just in case we need it (?)\n    this._activateController(event.gamepad.id);\n    this._activateGamepad(event.gamepad);\n    // emit the gamepad connected signal\n    this.onGamepadConnected.emit(event.gamepad);\n  }\n\n  private _onGamepadDisconnected(event: GamepadEvent): void {\n    // remove the gamepad\n    this._deactivateGamepad(event.gamepad.id);\n\n    // pause the game any time there is a controller disconnect\n    this.actionsPlugin.sendAction('pause');\n\n    // emit the gamepad disconnected signal\n    this.onGamepadDisconnected.emit(event.gamepad);\n\n    // check if all gamepads are disconnected\n    if (this.activeGamepads.size === 0) {\n      this._deactivateController(InputControllerTypes.GamePad);\n    }\n  }\n\n  get actionsPlugin(): IActionsPlugin {\n    return this.app.getPlugin('actions') as IActionsPlugin;\n  }\n}\n", "import { UserActions, UserButtons } from '../actions';\nimport { UserControls } from './interfaces';\nexport function defineControls<U extends UserActions = UserActions, B extends UserButtons = UserButtons>(\n  actions: U,\n  buttons: B,\n  controls?: UserControls<U, B>,\n): UserControls<U, B> {\n  return controls || ([] as unknown as UserControls<U, B>);\n}\n", "import type {IPopup, PopupConfig, PopupConstructor} from '../ui';\nimport {Container} from '../display';\nimport {Signal} from '../signals';\nimport {bindAllMethods, getLastMapEntry} from '../utils';\nimport type {IPlugin} from './Plugin';\nimport {Plugin} from './Plugin';\nimport type {IApplication} from '../core';\n\n/**`\n * Interface for PopupManager\n */\nexport interface IPopupManagerPlugin extends IPlugin {\n  readonly view: Container; // The view of the PopupManager\n  readonly current: IPopup | undefined; // The current active popup\n  readonly popupCount: number; // The count of popups\n  readonly currentPopupId: string | number | undefined; // The id of the current popup\n  // signals\n  onShowPopup: Signal<(detail: PopupSignalDetail) => void>; // Signal for when a popup is shown\n  onHidePopup: Signal<(detail: PopupSignalDetail) => void>; // Signal for when a popup is hidden\n\n  // methods\n  addPopup(id: string | number, popup: PopupConstructor): void; // Add a popup\n\n  showPopup<T = any>(id: string | number, config: Partial<PopupConfig<T>>): Promise<IPopup<T> | undefined>;\n\n  hidePopup<T = any>(id: string | number, data?: any): Promise<IPopup<T> | undefined>; // Hide a popup\n\n  removeAllPopups(animate?: boolean): void; // Remove all popups\n}\n\nexport type PopupSignalDetail<T = any> = { id: string | number; data?: T };\n\n/**\n * PopupManager\n */\n\nexport class PopupManagerPlugin extends Plugin implements IPopupManagerPlugin {\n  public readonly id: string = 'popups'; // The id of the PopupManager\n  public readonly view = new Container(); // The view of the PopupManager\n\n  // signals\n  public onShowPopup: Signal<(detail: PopupSignalDetail) => void> = new Signal<(detail: PopupSignalDetail) => void>(); // Signal for when a popup is shown\n  public onHidePopup: Signal<(detail: PopupSignalDetail) => void> = new Signal<(detail: PopupSignalDetail) => void>(); // Signal for when a popup is hidden\n  private _popups: Map<string | number, PopupConstructor> = new Map(); // Map of popups\n  private _activePopups: Map<string | number, IPopup> = new Map(); // Map of active popups\n\n  private _currentPopupId: string | number | undefined = undefined; // The id of the current popup\n\n  get currentPopupId(): string | number | undefined {\n    return this._currentPopupId;\n  }\n\n  get popupCount(): number {\n    return this._popups.size;\n  }\n\n  get current(): IPopup | undefined {\n    if (this._currentPopupId === undefined) {\n      return undefined;\n    }\n    return this._activePopups.get(this._currentPopupId);\n  }\n\n  /**\n   * Initialize the PopupManager\n   * @param _app\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  initialize(_app: IApplication): void {\n    bindAllMethods(this);\n    this.view.label = 'PopupManager';\n    this._setupAppListeners();\n  }\n\n  /**\n   * Destroy the PopupManager\n   */\n  destroy(): void {\n    this._activePopups.clear();\n    super.destroy();\n  }\n\n  /**\n   * Add a popup\n   * @param id - The id of the popup\n   * @param popup - The popup constructor\n   */\n  addPopup<T = any>(id: string | number, popup: PopupConstructor<T>): void {\n    this._popups.set(id, popup);\n  }\n\n  /**\n   * Show a popup\n   * @param id - The id of the popup\n   * @param config - The configuration for the popup\n   * @returns a promise resolving to the popup, if it exists\n   */\n  async showPopup<T = any>(id: string | number, config: Partial<PopupConfig<T>> = {}): Promise<IPopup<T> | undefined> {\n    const popup: PopupConstructor<T> | undefined = this._popups.get(id);\n    if (popup) {\n      config.id = id;\n      const instance = this.view.add.existing(new popup(id, config));\n      instance.initialize();\n      this.app.focus.clearFocus();\n      await instance.show();\n      this.app.focus.setFocusLayer(id);\n      instance.afterShow();\n      this._activePopups.set(id, instance);\n      this._currentPopupId = id;\n      this.onShowPopup.emit({ id, data: config?.data });\n      instance.start();\n      return instance;\n    }\n    return;\n  }\n\n  /**\n   * Hide a popup\n   * @param id - The id of the popup\n   * @param data\n   * @returns a promise resolving to the popup, if it exists\n   */\n  async hidePopup<T = any>(id: string | number, data?: T): Promise<IPopup<T> | undefined> {\n    const popup = this._activePopups.get(id);\n    if (popup) {\n      popup.beforeHide();\n      await popup.hide();\n      this.view.removeChild(popup as any);\n      this._activePopups.delete(id);\n      this._currentPopupId = getLastMapEntry(this._activePopups)?.[0] || undefined;\n      this.onHidePopup.emit({ id, data });\n      popup.end();\n      return popup;\n    }\n    return;\n  }\n\n  /**\n   * Remove all popups\n   * @param animate - Whether to animate the removal\n   */\n  removeAllPopups(animate: boolean = false): void {\n    if (animate) {\n      this._activePopups.forEach((popup) => {\n        popup.hide();\n      });\n    } else {\n      this._activePopups.clear();\n      this.view.removeChildren();\n    }\n  }\n\n  protected getCoreFunctions() {\n    return ['addPopup', 'hidePopup', 'showPopup', 'removeAllPopups'];\n  }\n\n  protected getCoreSignals() {\n    return ['onShowPopup', 'onHidePopup'];\n  }\n\n  /**\n   * Setup application listeners\n   * @private\n   */\n  private _setupAppListeners(): void {\n    this.addSignalConnection(this.app.scenes.onSceneChangeStart.connect(() => this.removeAllPopups()));\n    this.app.keyboard.onKeyUp('Escape').connect(this._handleEscape);\n  }\n\n  /**\n   * Handle escape key press\n   * if the current popup should close when escape is pressed (true by default), closes it\n   * @private\n   */\n  private _handleEscape() {\n    if (this.current && this.current.config.closeOnEscape) {\n      void this.hidePopup(this.current.id);\n    }\n  }\n}\n", "import { Graphics } from 'pixi.js';\n\nimport { Container } from '../display';\nimport type { IApplication } from '../core';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\nimport type { Size } from '../utils';\n\n/**\n * Interface for Resizer module.\n */\nexport interface IResizerPlugin extends IPlugin {\n  readonly size: Size;\n  readonly scale: number;\n  resize(): void;\n}\n\n/**\n * Type definition for Resizer options.\n */\nexport type ResizerPluginOptions = {\n  autoScroll: boolean;\n  useAspectRatio: boolean;\n  fixed: boolean;\n  minSize: { width: number; height: number };\n  maxSize: { width: number; height: number };\n  debug: boolean;\n};\n\n/**\n * Default options for Resizer module.\n */\nconst defaultOptions: ResizerPluginOptions = {\n  autoScroll: false,\n  useAspectRatio: false,\n  fixed: false,\n  minSize: { width: 0, height: 0 },\n  maxSize: { width: 0, height: 0 },\n  debug: false,\n};\n\nexport class ResizerPlugin extends Plugin implements IResizerPlugin {\n  public readonly id = 'resizer';\n  private _options: ResizerPluginOptions;\n  private _debugContainer: Container;\n  private _gfx: Graphics;\n  private _size: Size;\n  private _scale: number;\n\n  get size(): Size {\n    return this._size;\n  }\n\n  get scale(): number {\n    return this._scale;\n  }\n\n  /**\n   * Initializes the Resizer module.\n   */\n  async initialize(_app: IApplication, options: Partial<ResizerPluginOptions> = {}) {\n    this._options = { ...defaultOptions, ...options };\n  }\n\n  /**\n   * Post-initialization of the Resizer module.\n   * when this is called, the renderer is already created, and the dom element has been appended\n   */\n  async postInitialize() {\n    this.resize();\n  }\n\n  /**\n   * Resizes the application based on window size and module options.\n   */\n\n  resize() {\n    let screenWidth = window.innerWidth;\n    let screenHeight = window.innerHeight;\n\n    const el = this.app.renderer.canvas?.parentElement;\n    const bounds = el?.getBoundingClientRect();\n\n    if (bounds) {\n      screenWidth = bounds.width;\n      screenHeight = bounds.height;\n    }\n\n    const minWidth = this._options.minSize.width;\n    const minHeight = this._options.minSize.height;\n\n    // Calculate renderer and canvas sizes based on current dimensions\n    const scaleX = screenWidth < minWidth ? minWidth / screenWidth : 1;\n    const scaleY = screenHeight < minHeight ? minHeight / screenHeight : 1;\n    const scale = scaleX > scaleY ? scaleX : scaleY;\n\n    this._scale = scale;\n\n    const width = screenWidth * scale;\n    const height = screenHeight * scale;\n    // Update canvas style dimensions and scroll window up to avoid issues on mobile resize\n    this.app.renderer.canvas.style.width = `${screenWidth}px`;\n    this.app.renderer.canvas.style.height = `${screenHeight}px`;\n\n    if (this._options.autoScroll) {\n      window?.scrollTo(0, 0);\n    }\n\n    // Update renderer and navigation screens dimensions\n    this.app.renderer.resize(width, height);\n    this._size = { width, height };\n\n    if (this._options.debug) {\n      this._drawDebug();\n    }\n  }\n\n  /**\n   * Draws debug information if debug option is enabled.\n   */\n  private _drawDebug() {\n    if (!this._debugContainer) {\n      this._debugContainer = this.app.stage.addChild(new Container());\n      this._gfx = this._debugContainer.add.graphics();\n    }\n\n    this._gfx.clear();\n    this._gfx.rect(0, 0, this._size.width, this._size.height);\n    this._gfx.stroke({ width: 4, color: 0x000fff });\n  }\n}\n", "import { Container } from 'pixi.js';\nimport { Application } from '../Application';\nimport type { IApplication } from '../core';\nimport type { IScene, ISceneTransition, SceneTransition } from '../display';\nimport { Signal } from '../signals';\nimport {\n  bindAllMethods,\n  Constructor,\n  createQueue,\n  getDynamicModuleFromImportListItem,\n  isDev,\n  Queue,\n  SceneImportList,\n  SceneImportListItem,\n} from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\ntype VirtualScenesModule = { sceneList: SceneImportListItem<IScene>[] };\n\nexport interface ISceneManagerPlugin extends IPlugin {\n  isFirstScene: boolean;\n  onSceneChangeStart: Signal<(detail: { exiting: string | null; entering: string }) => void>;\n  onSceneChangeComplete: Signal<(detail: { current: string }) => void>;\n\n  view: Container;\n  list: SceneImportList<IScene>;\n  splash: { view: ISceneTransition | null; hideWhen: SplashHideWhen; zOrder: SplashZOrder };\n  transition?: ISceneTransition;\n  currentScene: IScene;\n  readonly ids: string[];\n  readonly defaultScene: string;\n\n  setDefaultLoadMethod(method: LoadSceneMethod): void;\n\n  loadDefaultScene(): Promise<void>;\n\n  loadScene(sceneIdOrLoadSceneConfig: LoadSceneConfig | string): Promise<void>;\n\n  getSceneFromHash(): string | null;\n}\n\nexport type LoadSceneMethod =\n  | 'immediate'\n  | 'exitEnter'\n  | 'enterExit'\n  | 'enterBehind'\n  | 'transitionExitEnter'\n  | 'exitTransitionEnter';\n\nexport type SplashHideWhen = 'firstSceneEnter' | 'requiredAssetsLoaded';\nexport type SplashZOrder = 'top' | 'bottom';\n\nexport type SplashOptions = {\n  view: ISceneTransition | typeof SceneTransition | null;\n  zOrder: SplashZOrder;\n  hideWhen: SplashHideWhen;\n};\n\nexport type LoadSceneConfig = {\n  id: string;\n  method?: LoadSceneMethod;\n};\n\nconst defaultSplashOptions: SplashOptions = {\n  view: null,\n  hideWhen: 'firstSceneEnter',\n  zOrder: 'top',\n};\n\nexport class SceneManagerPlugin extends Plugin implements ISceneManagerPlugin {\n  public readonly id: string = 'scenes';\n  public onSceneChangeStart: Signal<(detail: { exiting: string | null; entering: string }) => void> = new Signal<\n    (detail: { exiting: string | null; entering: string }) => void\n  >();\n  public onSceneChangeComplete: Signal<(detail: { current: string }) => void> = new Signal<\n    (detail: { current: string }) => void\n  >();\n  public splash: { view: ISceneTransition | null; hideWhen: SplashHideWhen; zOrder: SplashZOrder };\n  public transition?: ISceneTransition;\n  // view container - gets added to the stage\n  public view: Container = new Container();\n  // maybe the user wants the enter animation to be different for the first scene\n  public isFirstScene: boolean = true;\n\n  // scene management\n  public list: SceneImportList<IScene> = [];\n  public currentScene: IScene;\n  public defaultScene: string;\n  private _sceneModules: Map<string, Constructor<IScene>> = new Map();\n  //\n  private _lastScene: IScene | null = null;\n  private _queue: Queue<any> | null;\n  private _defaultLoadMethod: LoadSceneMethod = 'immediate';\n  private _currentSceneId: string;\n  // debug\n  private _debugVisible: boolean = false;\n  private _debugMenu: HTMLDivElement;\n  private _useHash: boolean = false;\n\n  // debug\n  private _sceneSelect: HTMLSelectElement;\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  get ids(): string[] {\n    return this.list.map((s) => s.id);\n  }\n\n  public setDefaultLoadMethod(method: LoadSceneMethod) {\n    this._defaultLoadMethod = method;\n  }\n\n  public destroy(): void {}\n\n  public async initialize(app: IApplication): Promise<void> {\n    this._debugVisible =\n      this.app.config?.showSceneDebugMenu === true || (isDev && this.app.config?.showSceneDebugMenu !== false);\n    this._useHash = app.config?.useHash === true || this._debugVisible;\n    this.view.sortableChildren = true;\n    const globalThisAsAny = globalThis as any;\n    const sceneList: SceneImportListItem<IScene>[] = globalThisAsAny.getDillPixel('sceneList') || [];\n    this.list = sceneList.filter((scene) => scene.active !== false);\n\n    if (this._debugVisible || this._useHash) {\n      this.defaultScene = this.getSceneFromHash() || '';\n    }\n    if (!this.splash) {\n      this.splash = { view: null, hideWhen: 'firstSceneEnter', zOrder: 'top' };\n      const splash = { ...defaultSplashOptions, ...(app.config?.splash ?? {}) };\n      if (splash.view) {\n        this.splash.view =\n          typeof splash.view === 'function' ? new (splash.view as Constructor<ISceneTransition>)() : splash.view;\n      }\n    }\n\n    this.defaultScene = this.defaultScene || app.config?.defaultScene || this.list?.[0]?.id;\n    if (!this.transition && app.config?.sceneTransition) {\n      this.transition =\n        typeof app.config.sceneTransition === 'function'\n          ? new (app.config.sceneTransition as Constructor<ISceneTransition>)()\n          : app.config.sceneTransition;\n    }\n    this._defaultLoadMethod = app.config.defaultSceneLoadMethod || 'immediate';\n\n    if (this._debugVisible) {\n      this._createDebugMenu();\n    }\n    if (this._useHash) {\n      this._listenForHashChange();\n    }\n    return Promise.resolve(undefined);\n  }\n\n  public async loadDefaultScene(): Promise<void> {\n    if (this.splash) {\n      await this._showSplash();\n    }\n    await this.app.assets.loadRequired();\n    if (this.splash.hideWhen === 'requiredAssetsLoaded') {\n      await this._hideSplash();\n    }\n    return this.loadScene(this.defaultScene);\n  }\n\n  public async loadScene(sceneIdOrLoadSceneConfig: string): Promise<void>;\n\n  public async loadScene(sceneIdOrLoadSceneConfig: LoadSceneConfig | string): Promise<void> {\n    if (this._queue) {\n      // TODO: maybe allow halting the queue and starting a fresh scene load\n      // for now, just ignore the request until the queue finishes\n      return;\n    }\n\n    this._lastScene = null;\n    const newSceneId =\n      typeof sceneIdOrLoadSceneConfig === 'string' ? sceneIdOrLoadSceneConfig : sceneIdOrLoadSceneConfig.id;\n\n    const method =\n      typeof sceneIdOrLoadSceneConfig === 'string'\n        ? this._defaultLoadMethod\n        : sceneIdOrLoadSceneConfig?.method || this._defaultLoadMethod;\n\n    if (this.currentScene) {\n      this._lastScene = this.currentScene;\n    }\n\n    // check if the scene item exists\n    const sceneItem = this.list.find((scene) => scene.id === newSceneId);\n    if (!sceneItem) {\n      throw new Error(`Scene item not found  for id ${newSceneId}`);\n    }\n\n    if (sceneItem?.plugins?.length) {\n      for (const plugin of sceneItem.plugins) {\n        const pluginListItem = this.app.getUnloadedPlugin(plugin);\n        if (pluginListItem) {\n          await this.app.loadPlugin(pluginListItem);\n        }\n      }\n    }\n\n    this._currentSceneId = newSceneId;\n\n    // found a scene item\n    this._queue = createQueue(this._createCurrentScene);\n\n    // TODO: finish adding scene changing behaviours\n    // TODO: add loading assets into this queue\n    // TODO: add progress updates\n    switch (method) {\n      case 'exitEnter':\n        this._queue.add(\n          this._exitLastScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'enterExit':\n        this._queue.add(\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n        );\n        break;\n      case 'enterBehind':\n        this._queue.add(\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentSceneBehind,\n          this._enterCurrentScene,\n          this._exitLastScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'transitionExitEnter':\n        this._queue.add(\n          this._showTransition,\n          this._exitLastScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._hideTransition,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'exitTransitionEnter':\n        this._queue.add(\n          this._exitLastScene,\n          this._showTransition,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._hideTransition,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'immediate':\n      default:\n        this._queue.add(\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n    }\n\n    this._queue.add(this._queueComplete);\n    this._queue.start();\n  }\n\n  public getSceneFromHash(): string | null {\n    let hash = window?.location?.hash;\n    if (hash) {\n      hash = hash.replace('#', '');\n      if (hash.length > 0) {\n        for (let i = 0; i < this.list.length; i++) {\n          if (this.list[i]?.id?.toLowerCase() === hash.toLowerCase()) {\n            return this.list[i].id;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onSceneChangeStart', 'onSceneChangeComplete'];\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['loadScene'];\n  }\n\n  private _listenForHashChange() {\n    window.addEventListener('hashchange', () => {\n      const sceneId = this.getSceneFromHash();\n      if (sceneId) {\n        void this.loadScene(sceneId);\n      }\n    });\n  }\n\n  private async _createCurrentScene() {\n    const sceneItem = this.list.find((scene) => scene.id === this._currentSceneId)!;\n    let SceneClass: Constructor<IScene> | undefined = undefined;\n\n    if (this._sceneModules.has(this._currentSceneId)) {\n      SceneClass = this._sceneModules.get(this._currentSceneId);\n    } else {\n      const module = await getDynamicModuleFromImportListItem(sceneItem);\n      if (!module) {\n        throw new Error(`Couldn't load ${this._currentSceneId}\"`);\n      }\n\n      if ((module as any)[this._currentSceneId]) {\n        SceneClass = (module as any)[this._currentSceneId];\n      } else {\n        SceneClass = module;\n      }\n\n      if (SceneClass) {\n        this._sceneModules.set(this._currentSceneId, SceneClass);\n      }\n    }\n\n    if (!SceneClass) {\n      throw new Error(`Couldn't load ${this._currentSceneId}\"`);\n    }\n\n    this.currentScene = new SceneClass();\n    this.currentScene.id = this._currentSceneId;\n    if (sceneItem?.assets) {\n      this.currentScene.assets = sceneItem.assets;\n    }\n    if (sceneItem.autoUnloadAssets !== undefined) {\n      this.currentScene.autoUnloadAssets = sceneItem.autoUnloadAssets;\n    }\n\n    this.onSceneChangeStart.emit({ exiting: this._lastScene?.id || null, entering: this.currentScene.id });\n  }\n\n  private _queueComplete() {\n    if (this.isFirstScene) {\n      // background required assets\n      this.app.assets.loadBackground();\n    }\n    this.isFirstScene = false;\n\n    // load any background assets for the current scene\n    void this.app.assets.loadSceneAssets(this.currentScene, true);\n\n    this._lastScene = null;\n    this.onSceneChangeComplete.emit({ current: this.currentScene.id });\n    this._queue = null;\n    return Promise.resolve();\n  }\n\n  private async _destroyLastScene(): Promise<void> {\n    if (!this._lastScene) {\n      return Promise.resolve();\n    }\n    this.view.removeChild(this._lastScene as any);\n    this._lastScene.destroy();\n    return Promise.resolve();\n  }\n\n  private async _exitLastScene(): Promise<void> {\n    if (!this._lastScene) {\n      return Promise.resolve();\n    }\n    await this._lastScene.exit();\n    return Promise.resolve();\n  }\n\n  private async _loadCurrentScene(): Promise<any> {\n    await this.app.assets.loadSceneAssets(this.currentScene);\n  }\n\n  private async _unloadLastScene(): Promise<any> {\n    if (this._lastScene && this._lastScene.autoUnloadAssets) {\n      return this.app.assets.unloadSceneAssets(this._lastScene);\n    }\n    return Promise.resolve();\n  }\n\n  private async _initializeCurrentScene(): Promise<void> {\n    await this.currentScene.initialize();\n    // wait one tick so everything in the scene has had a chance to render before triggering the resize\n    this.app.ticker.addOnce(() => {\n      this.currentScene.resize(this.app.size);\n    });\n\n    return Promise.resolve();\n  }\n\n  private _addCurrentScene(): Promise<void> {\n    this.view.addChild(this.currentScene as any);\n    return Promise.resolve();\n  }\n\n  private _addCurrentSceneBehind(): Promise<void> {\n    this.view.addChildAt(this.currentScene as any, 0);\n    return Promise.resolve();\n  }\n\n  private async _enterCurrentScene(): Promise<void> {\n    await this.currentScene.enter();\n    if (this.isFirstScene && this.splash.hideWhen === 'firstSceneEnter') {\n      await this._hideSplash();\n    }\n    return Promise.resolve();\n  }\n\n  private async _startCurrentScene(): Promise<void> {\n    void this.currentScene.start();\n    return Promise.resolve();\n  }\n\n  private async _showTransition(): Promise<void> {\n    if (this.isFirstScene) {\n      return Promise.resolve();\n    }\n    if (this.transition) {\n      this.transition.active = true;\n      this.transition.renderable = true;\n      this.transition.visible = true;\n      this.transition.progress = 0;\n      await this.transition.enter();\n    }\n  }\n\n  private async _hideTransition(): Promise<void> {\n    if (this.isFirstScene) {\n      return Promise.resolve();\n    }\n    if (this.transition) {\n      await this.transition.exit();\n      this.transition.progress = 0;\n      this.transition.visible = false;\n      this.transition.renderable = false;\n      this.transition.active = false;\n    }\n  }\n\n  private async _showSplash() {\n    await this.splash.view?.enter();\n  }\n\n  private async _hideSplash(): Promise<void> {\n    await this.splash.view?.exit();\n    this.splash.view?.destroy();\n    this.splash.view?.parent?.removeChild(this.splash.view);\n    this.splash.view = null;\n  }\n\n  private _createDebugMenu() {\n    this._debugMenu = document.createElement('div');\n    this._debugMenu.id = 'scene-debug';\n    this._debugMenu.style.cssText =\n      'position: absolute; bottom: 0; left:0; width:48px; height:48px; z-index: 1000; background-color:rgba(0,0,0,0.8); color:white; border-top-right-radius:8px;';\n    const icon = document.createElement('i');\n    icon.style.cssText =\n      'cursor:pointer; position:absolute;width:100%; font-style:normal; font-size:20px; top:50%; left:50%; transform:translate(-50%, -50%); text-align:center; pointer-events:none';\n    icon.innerHTML = '🎬';\n    this._debugMenu.appendChild(icon);\n\n    (Application.containerElement || document.body).appendChild(this._debugMenu);\n\n    this._sceneSelect = document.createElement('select');\n    this._sceneSelect.style.cssText =\n      'padding:0; border-radius:5px; opacity:0; width:48px; height:48px; cursor:pointer';\n    this._sceneSelect.value = this.defaultScene || '';\n\n    const defaultOption = document.createElement('option');\n    defaultOption.value = '';\n    defaultOption.innerHTML = 'Select a scene';\n    defaultOption.setAttribute('disabled', 'disabled');\n    this._sceneSelect.appendChild(defaultOption);\n\n    // create option groups\n    const groups = new Map<string, HTMLOptGroupElement>();\n\n    this.list.forEach((item) => {\n      if (item.debugGroup) {\n        if (!groups.has(item.debugGroup)) {\n          const group = document.createElement('optgroup');\n          group.label = item.debugGroup;\n          groups.set(item.debugGroup, group);\n          this._sceneSelect.appendChild(group);\n        }\n      }\n    });\n\n    if (groups.size > 0) {\n      const nogroups = this.list.filter((item) => !item.debugGroup);\n      if (nogroups.length) {\n        const group = document.createElement('optgroup');\n        group.label = 'Other';\n        groups.set('Other', group);\n        this._sceneSelect.appendChild(group);\n        nogroups.forEach((item) => {\n          item.debugGroup = 'Other';\n        });\n      }\n    }\n\n    this.list.forEach((value) => {\n      const option = document.createElement('option');\n      option.value = value.id;\n      option.innerHTML = value?.debugLabel || value.id;\n      if (value.id === this.defaultScene) {\n        option.selected = true;\n      }\n      if (value.debugGroup) {\n        groups.get(value.debugGroup)?.appendChild(option);\n      } else {\n        this._sceneSelect.appendChild(option);\n      }\n    });\n\n    this._debugMenu.appendChild(this._sceneSelect);\n\n    this._debugMenu.addEventListener('change', (e: Event) => {\n      if (this._queue) {\n        e.preventDefault();\n        return;\n      }\n      const target = e.target as HTMLSelectElement;\n      const sceneId = target.value;\n      if (sceneId) {\n        window.location.hash = sceneId.toLowerCase();\n      }\n    });\n\n    this.onSceneChangeStart.connect(this._disableDebugMenu);\n    this.onSceneChangeComplete.connect(this._enableDebugMenu);\n  }\n\n  private _enableDebugMenu() {\n    this._debugMenu?.querySelector('select')?.removeAttribute('disabled');\n  }\n\n  private _disableDebugMenu() {\n    this._debugMenu?.querySelector('select')?.setAttribute('disabled', 'disabled');\n  }\n}\n", "import { Application } from '../Application';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\nimport { Signal } from '../signals';\nimport type { Size } from '../utils';\nimport { bindAllMethods } from '../utils';\n\nexport interface IWebEventsPlugin extends IPlugin {\n  onResize: Signal<(size: { width: number; height: number }) => void>;\n  onVisibilityChanged: Signal<(visible: boolean) => void>;\n}\n\n/**\n * Maintains a list of callbacks for specific web events and invokes callbacks when event occurs.\n */\nexport class WebEventsPlugin extends Plugin implements IWebEventsPlugin {\n  public readonly id = 'webEvents';\n\n  // signals\n  public onResize: Signal<(size: Size) => void> = new Signal<(size: Size) => void>();\n  public onVisibilityChanged: Signal<(visible: boolean) => void> = new Signal<(visible: boolean) => void>();\n\n  /**\n   * Creates callback arrays and registers to web events.\n   */\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  get app(): Application {\n    return Application.getInstance();\n  }\n\n  public initialize(): void {\n    document.addEventListener('visibilitychange', this._onVisibilityChanged, false);\n    window.addEventListener('pagehide', this._onPageHide, false);\n    window.addEventListener('pageshow', this._onPageShow, false);\n    window.addEventListener('resize', this._onResize);\n    document.addEventListener('fullscreenchange', this._onResize);\n  }\n\n  public destroy() {\n    document.removeEventListener('visibilitychange', this._onVisibilityChanged, false);\n    window.removeEventListener('resize', this._onResize);\n    document.removeEventListener('fullscreenchange', this._onResize);\n    window.removeEventListener('pagehide', this._onPageHide, false);\n    window.removeEventListener('pageshow', this._onPageShow, false);\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onResize', 'onVisibilityChanged'];\n  }\n\n  /**\n   * Called when the browser visibility changes. Passes the `hidden` flag of the document to all callbacks.\n   */\n  private _onVisibilityChanged(): void {\n    this.onVisibilityChanged.emit(!document.hidden);\n  }\n\n  /**\n   * Called when the browser resizes.\n   */\n  private _onResize(): void {\n    const el = this.app.renderer.canvas?.parentElement;\n    let screenWidth = window.innerWidth;\n    let screenHeight = window.innerHeight;\n    if (el && el?.getBoundingClientRect()) {\n      screenWidth = el.offsetWidth;\n      screenHeight = el.offsetHeight;\n    }\n    this.onResize.emit({ width: screenWidth, height: screenHeight });\n  }\n\n  /**\n   * Called when the page is hidden.\n   * Some browsers (like Safari) don't support the `visibilitychange` event, so we also listen for `pagehide`.\n   * We're just mimicking the `visibilitychange` event here.\n   */\n  private _onPageHide() {\n    this.onVisibilityChanged.emit(false);\n  }\n\n  /**\n   * Called when the page is shown.\n   * Some browsers (like Safari) don't support the `visibilitychange` event, so we also listen for `pageshow`.\n   * We're just mimicking the `visibilitychange` event here.\n   * @private\n   */\n  private _onPageShow() {\n    this.onVisibilityChanged.emit(true);\n  }\n}\n", "import type { Application } from '../../Application';\nimport { IPlugin, Plugin } from '../../plugins';\n\n/**\n * Interface for a storage adapter module.\n */\nexport interface IStorageAdapter extends IPlugin {\n  /**\n   * Saves data under a specified key.\n   * @param _key\n   * @param _data\n   * @param _rest\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   */\n  save<TExpectedSaveResult = any>(\n    _key: string,\n    _data: any,\n    ..._rest: any[]\n  ): Promise<TExpectedSaveResult> | TExpectedSaveResult | any;\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   * @param _key\n   * @param args\n   */\n  load<TExpectedLoadResult = any>(\n    _key: string,\n    ...args: any[]\n  ): Promise<TExpectedLoadResult> | TExpectedLoadResult | undefined;\n}\n\nexport interface StorageAdapterListItem {\n  id: string;\n  path: string;\n  module: () => Promise<new () => IStorageAdapter>;\n}\n\n/**\n * A class representing a storage adapter module.\n * @template T The type of the application that the module belongs to.\n */\nexport class StorageAdapter<T extends Application = Application> extends Plugin<T> implements IStorageAdapter {\n  /**\n   * Creates a new StorageAdapter.\n   * @param {string} id The ID of the adapter. Default is 'StorageAdapter'.\n   */\n  constructor(public readonly id: string = 'StorageAdapter') {\n    super(id);\n  }\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @param {string} _key The key from which to load the data.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   */\n  load<TExpectedLoadResult = any>(_key: string): Promise<TExpectedLoadResult> | TExpectedLoadResult | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async load<TExpectedLoadResult = any>(_key: string, ...args: any[]): Promise<TExpectedLoadResult | undefined> {\n    return undefined;\n  }\n\n  /**\n   * Saves data under a specified key.\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   * @param _key\n   * @param _data\n   * @param _rest\n   */\n\n  save<TExpectedSaveResult = any>(\n    _key: string,\n    _data: any,\n    ..._rest: any[]\n  ): Promise<TExpectedSaveResult> | TExpectedSaveResult | any;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async save<TExpectedSaveResult = any>(_key: string, _data: any, ..._rest: any[]): Promise<TExpectedSaveResult | any> {\n    void _key;\n    void _data;\n    void _rest;\n    return undefined;\n  }\n}\n", "import type { IApplication } from '../../core';\nimport { StorageAdapter } from './StorageAdapter';\n\nexport type DataSchema = {\n  [key: string]: any;\n};\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];\n};\n/**\n * Interface for the options of the LocalStorageAdapter.\n */\nexport interface IDataAdapterOptions<D extends DataSchema = DataSchema> {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  initial: Partial<D>;\n  namespace: string;\n  overrideWithLocalStorage: boolean;\n  backupAll: boolean;\n  backupKeys: Array<keyof D>;\n}\n\nexport interface IDataAdapter<D extends DataSchema = DataSchema> {\n  load<K extends keyof D>(key: K): D[K] | undefined;\n  save<K extends keyof D>(key: K, data: D[K]): D;\n  set(data: DeepPartial<D>, merge?: boolean): D;\n  get(): D;\n  clear<K extends keyof D>(key: K): void;\n}\n\n/**\n * A class representing a storage adapter that uses the local storage.\n */\nexport class DataAdapter<D extends DataSchema = DataSchema> extends StorageAdapter implements IDataAdapter<D> {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  public data: D;\n  private backupKeys: Array<keyof D> = [];\n  private backupAll: boolean = false;\n  private namespace: string = '';\n  private overrideWithLocalStorage: boolean = true;\n  constructor(public readonly id: string = 'data') {\n    super(id);\n  }\n  /**\n   * Destroys the adapter.\n   */\n  destroy() {\n    this.data = {} as D;\n  }\n\n  /**\n   * Initializes the adapter.\n   * @param {IApplication} _app The application that the adapter belongs to.\n   * @param {Partial<ILocalStorageAdapterOptions>} options The options to initialize the adapter with.\n   */\n  public initialize(_app: IApplication, options?: Partial<IDataAdapterOptions<D>>): void {\n    this.namespace = options?.namespace || _app.config?.id || 'data';\n    this.data = (options?.initial as D) || ({} as D);\n    this.backupKeys = options?.backupKeys || [];\n    this.backupAll = options?.backupAll || false;\n    this.overrideWithLocalStorage = options?.overrideWithLocalStorage === false ? false : true;\n\n    if (this.backupAll || this.backupKeys.length > 0) {\n      if (this.overrideWithLocalStorage) {\n        this.restoreFromLocalStorage(this.backupKeys);\n      }\n      this.backupToLocalStorage(this.backupKeys);\n    }\n  }\n\n  /**\n   * Saves data under a specified key in the local storage.\n   * @param {string} key The key under which to save the data.\n   * @param {any} data The data to save.\n   * @returns {any} The saved data.\n   */\n  save<K extends keyof D>(key: K, data: D[K]): D {\n    this.data[key] = data;\n    if (this.backupAll || this.backupKeys.includes(key)) {\n      this.backupToLocalStorage([key]);\n    }\n    return data;\n  }\n\n  /**\n   * Loads data from a specified key in the local storage.\n   * @template T The type of the data to load.\n   * @param {string} key The key from which to load the data.\n   * @returns {T} The loaded data.\n   */\n  load<K extends keyof D>(key: K): D[K] | undefined {\n    return this.data[key];\n  }\n\n  set(data: DeepPartial<D>, merge: boolean = true): D {\n    if (merge) {\n      this.data = deepMerge({ ...this.data }, data);\n    } else {\n      this.data = data as D;\n    }\n    if (this.backupAll || this.backupKeys.length > 0) {\n      this.backupToLocalStorage(this.backupKeys);\n    }\n    return this.data;\n  }\n\n  get(): D {\n    return this.data;\n  }\n\n  /**\n   * Deletes data from a specified key in the local storage.\n   * @param {string} key The key from which to delete the data.\n   */\n  clear<K extends keyof D>(key: K) {\n    delete this.data[key];\n    localStorage.removeItem(`${this.namespace}-${key as string}`);\n  }\n\n  /**\n   * Backs up specified keys or all data to local storage.\n   * @param {Array<keyof D>} [keys] The keys to back up. If not provided, all data will be backed up.\n   */\n  private backupToLocalStorage(keys?: Array<keyof D>): void {\n    const dataToBackup =\n      keys && keys?.length > 0 ? Object.fromEntries(keys.map((key) => [key, this.data[key]])) : this.data;\n    \n    for (const key in dataToBackup) {\n      localStorage.setItem(`${this.namespace}-${key}`, JSON.stringify(dataToBackup[key]));\n    }\n  }\n\n  /**\n   * Restores data from local storage for specified keys or all data.\n   * @param {Array<keyof D>} [keys] The keys to restore. If not provided, all data will be restored.\n   */\n  private restoreFromLocalStorage(keys?: Array<keyof D>): void {\n    const keysToRestore = keys && keys?.length > 0 ? keys : (Object.keys(this.data) as Array<keyof D>);\n    keysToRestore.forEach((key) => {\n      const loadedData = localStorage.getItem(`${this.namespace}-${key as string}`);\n      if (loadedData !== null) {\n        this.data[key] = JSON.parse(loadedData);\n      }\n    });\n  }\n}\n\nfunction deepMerge<T extends Record<string, any>>(target: T, source: DeepPartial<T>): T {\n  for (const key in source) {\n    if (\n      source[key] !== undefined &&\n      Object.prototype.toString.call(source[key]) === '[object Object]' &&\n      key in target &&\n      typeof target[key] === 'object'\n    ) {\n      target[key] = deepMerge(target[key], source[key] as T[Extract<keyof T, string>]);\n    } else if (source[key] !== undefined) {\n      target[key] = source[key] as T[Extract<keyof T, string>];\n    }\n  }\n  return target;\n}\n", "import type { ImportList } from '../utils';\nimport { AssetsPlugin } from './AssetsPlugin';\nimport { KeyboardPlugin } from './KeyboardPlugin';\nimport type { IPlugin } from './Plugin';\nimport { PopupManagerPlugin } from './PopupManagerPlugin';\nimport { ResizerPlugin } from './ResizerPlugin';\nimport { SceneManagerPlugin } from './SceneManagerPlugin';\nimport { WebEventsPlugin } from './WebEventsPlugin';\nimport { ActionsPlugin } from './actions';\nimport { AudioManagerPlugin } from './audio';\nimport { FocusManagerPlugin } from './focus';\nimport { i18nPlugin } from './i18nPlugin';\nimport { InputPlugin } from './input';\n\nexport const defaultPlugins: ImportList<IPlugin> = [\n  {\n    id: 'webEvents',\n    module: WebEventsPlugin,\n    namedExport: 'WebEventsPlugin',\n  },\n  {\n    id: 'resizer',\n    module: ResizerPlugin,\n    namedExport: 'ResizerPlugin',\n  },\n  {\n    id: 'assets',\n    module: AssetsPlugin,\n    namedExport: 'AssetsPlugin',\n  },\n  {\n    id: 'scenes',\n    module: SceneManagerPlugin,\n    namedExport: 'SceneManagerPlugin',\n  },\n  {\n    id: 'actions',\n    module: ActionsPlugin,\n    namedExport: 'ActionsPlugin',\n  },\n  {\n    id: 'input',\n    module: InputPlugin,\n    namedExport: 'InputPlugin',\n  },\n  {\n    id: 'keyboard',\n    module: KeyboardPlugin,\n    namedExport: 'KeyboardPlugin',\n  },\n  {\n    id: 'focus',\n    module: FocusManagerPlugin,\n    namedExport: 'FocusManagerPlugin',\n  },\n  {\n    id: 'popups',\n    module: PopupManagerPlugin,\n    namedExport: 'PopupManagerPlugin',\n  },\n  {\n    id: 'audio',\n    module: AudioManagerPlugin,\n    namedExport: 'AudioManagerPlugin',\n  },\n  {\n    id: 'i18n',\n    module: i18nPlugin,\n    namedExport: 'i18nPlugin',\n  },\n  \n] as const;\n", "import type { AppConfig, IApplication, IApplicationOptions, ICoreFunctions, ICoreSignals } from './core';\nimport { coreFunctionRegistry, coreSignalRegistry, generateAdapterList, generatePluginList } from './core';\nimport type {\n  Action,\n  ActionContext,\n  ActionSignal,\n  IAssetsPlugin,\n  IAudioManagerPlugin,\n  IControls,\n  IFocusManagerPlugin,\n  Ii18nPlugin,\n  IInputPlugin,\n  IKeyboardPlugin,\n  IPlugin,\n  IPopupManagerPlugin,\n  IResizerPlugin,\n  ISceneManagerPlugin,\n  IWebEventsPlugin,\n} from './plugins';\n\nimport type { AssetInitOptions, AssetsManifest, DestroyOptions, Renderer, RendererDestroyOptions } from 'pixi.js';\nimport { Assets, isMobile, Application as PIXIPApplication, Point } from 'pixi.js';\nimport type { DataSchema, IDataAdapter, IStorageAdapter, IStore } from './store';\nimport { DataAdapter, Store } from './store';\nimport type { ImportList, ImportListItem, Size } from './utils';\nimport { bindAllMethods, getDynamicModuleFromImportListItem, isDev, isPromise, Logger } from './utils';\n\nimport type { IActionsPlugin } from './plugins/actions';\nimport type { IVoiceOverPlugin } from './plugins/audio/VoiceOverPlugin';\nimport type { ICaptionsPlugin } from './plugins/captions';\nimport { defaultPlugins } from './plugins/defaults';\nimport { Signal } from './signals';\n\nconst defaultApplicationOptions: Partial<IApplicationOptions> = {\n  antialias: false,\n  autoStart: true,\n  resizeToContainer: false,\n  backgroundColor: 0x0,\n  backgroundAlpha: 1,\n  clearBeforeRender: false,\n  context: null,\n  eventFeatures: undefined,\n  eventMode: undefined,\n  hello: false,\n  powerPreference: 'high-performance',\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  resizeTo: undefined,\n  sharedTicker: true,\n  view: undefined,\n  autoDensity: false,\n  resolution: Math.max(window.devicePixelRatio, 2),\n  // dill pixel options\n  useHash: isDev,\n  showSceneDebugMenu: isDev,\n  showStats: isDev,\n  useStore: true,\n  useSpine: false,\n  useVoiceover: false,\n  storageAdapters: [],\n  plugins: [],\n  scenes: [],\n  defaultSceneLoadMethod: 'immediate',\n  assets: {\n    manifest: './assets.json',\n  },\n};\n\nexport class Application<\n    D extends DataSchema = DataSchema,\n    C extends ActionContext = ActionContext,\n    A extends Action = Action,\n    R extends Renderer = Renderer,\n  >\n  extends PIXIPApplication<R>\n  implements IApplication<D, C, A>\n{\n  public static containerElement: HTMLElement;\n  protected static instance: IApplication<DataSchema, ActionContext, Action>;\n  public __dill_pixel_method_binding_root = true;\n  // config\n  public config: Partial<IApplicationOptions<D>>;\n  public plugins: ImportList<IPlugin>;\n  public storageAdapters: ImportList<IStorageAdapter>;\n  public manifest: string | AssetsManifest | undefined;\n  public onPause = new Signal<() => void>();\n  public onResume = new Signal<() => void>();\n  // signals\n  public onResize = new Signal<(size: Size) => void>();\n  // plugins\n  protected _plugins: Map<string, IPlugin> = new Map();\n  // default plugins\n  protected _assetManager: IAssetsPlugin;\n  protected _sceneManager: ISceneManagerPlugin;\n  protected _webEventsManager: IWebEventsPlugin;\n  protected _keyboardManager: IKeyboardPlugin;\n  protected _focusManager: IFocusManagerPlugin;\n  protected _popupManager: IPopupManagerPlugin;\n  protected _audioManager: IAudioManagerPlugin;\n  protected _voiceoverPlugin: IVoiceOverPlugin;\n  protected _captionsPlugin: ICaptionsPlugin;\n  protected _actions: ActionSignal;\n  protected _isBooting: boolean = true;\n\n  protected _env: Record<string, string> = (import.meta as any).env || {};\n\n  get env() {\n    return this._env;\n  }\n\n  protected _paused: boolean = false;\n  public get paused(): boolean {\n    return this._paused;\n  }\n\n  public set paused(paused: boolean) {\n    this._paused = paused;\n    if (this._paused) {\n      this.onPause.emit();\n    } else {\n      this.onResume.emit();\n    }\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n  public pause() {\n    this._paused = true;\n  }\n\n  public togglePause() {\n    this._paused = !this._paused;\n  }\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  protected _appVersion: string | number;\n\n  public get appVersion() {\n    try {\n      this._appVersion = __DILL_PIXEL_APP_VERSION;\n    } catch (e) {\n      this._appVersion = -1;\n    }\n\n    return this._appVersion;\n  }\n\n  protected _appName: string;\n\n  public get appName(): string {\n    if (!this._appName) {\n      try {\n        this._appName = __DILL_PIXEL_APP_NAME;\n      } catch (e) {\n        this._appName = 'n/a';\n      }\n    }\n    return this._appName;\n  }\n\n  protected _i18n: Ii18nPlugin;\n\n  public get i18n(): Ii18nPlugin {\n    if (!this._i18n) {\n      this._i18n = this.getPlugin<Ii18nPlugin>('i18n');\n    }\n    return this._i18n;\n  }\n\n  protected _resizer: IResizerPlugin;\n\n  public get resizer(): IResizerPlugin {\n    if (!this._resizer) {\n      this._resizer = this.getPlugin<IResizerPlugin>('resizer');\n    }\n    return this._resizer;\n  }\n\n  // actions\n  protected _actionsPlugin: IActionsPlugin<C>;\n\n  public get actionsPlugin(): IActionsPlugin<C> {\n    if (!this._actionsPlugin) {\n      this._actionsPlugin = this.getPlugin<IActionsPlugin<C>>('actions');\n    }\n    return this._actionsPlugin;\n  }\n\n  // input\n  protected _input: IInputPlugin;\n\n  public get input(): IInputPlugin {\n    if (!this._input) {\n      this._input = this.getPlugin<IInputPlugin>('input');\n    }\n    return this._input;\n  }\n\n  // controls\n  public get controls(): IControls {\n    if (!this._input) {\n      this._input = this.getPlugin<IInputPlugin>('input');\n    }\n    return this._input.controls;\n  }\n\n  // store\n  protected _store: IStore;\n\n  public get store(): IStore {\n    return this._store;\n  }\n\n  // size\n  protected _center = new Point(0, 0);\n\n  public get center(): Point {\n    return this._center;\n  }\n\n  public get assets(): IAssetsPlugin {\n    if (!this._assetManager) {\n      this._assetManager = this.getPlugin<IAssetsPlugin>('assets');\n    }\n    return this._assetManager;\n  }\n\n  public get scenes(): ISceneManagerPlugin {\n    if (!this._sceneManager) {\n      this._sceneManager = this.getPlugin<ISceneManagerPlugin>('scenes');\n    }\n    return this._sceneManager;\n  }\n\n  public get webEvents(): IWebEventsPlugin {\n    if (!this._webEventsManager) {\n      this._webEventsManager = this.getPlugin<IWebEventsPlugin>('webEvents');\n    }\n    return this._webEventsManager;\n  }\n\n  public get keyboard(): IKeyboardPlugin {\n    if (!this._keyboardManager) {\n      this._keyboardManager = this.getPlugin<IKeyboardPlugin>('keyboard');\n    }\n    return this._keyboardManager;\n  }\n\n  public get focus(): IFocusManagerPlugin {\n    if (!this._focusManager) {\n      this._focusManager = this.getPlugin<IFocusManagerPlugin>('focus');\n    }\n    return this._focusManager;\n  }\n\n  get size() {\n    return this.resizer.size;\n  }\n\n  public get popups(): IPopupManagerPlugin {\n    if (!this._popupManager) {\n      this._popupManager = this.getPlugin<IPopupManagerPlugin>('popups');\n    }\n    return this._popupManager;\n  }\n\n  public get audio(): IAudioManagerPlugin {\n    if (!this._audioManager) {\n      this._audioManager = this.getPlugin<IAudioManagerPlugin>('audio');\n    }\n    return this._audioManager;\n  }\n\n  public get actionContext(): C {\n    return this.actionsPlugin.context;\n  }\n\n  public set actionContext(context: C) {\n    this.actionsPlugin.context = context;\n  }\n\n  public get voiceover(): IVoiceOverPlugin {\n    if (!this._voiceoverPlugin) {\n      this._voiceoverPlugin = this.getPlugin<IVoiceOverPlugin>(\n        'voiceover',\n        this._isBooting || this.config.useVoiceover,\n      );\n    }\n    return this._voiceoverPlugin;\n  }\n\n  public get captions(): ICaptionsPlugin {\n    if (!this._captionsPlugin) {\n      this._captionsPlugin = this.getPlugin<ICaptionsPlugin>('captions', this._isBooting || this.config.useVoiceover);\n    }\n    return this._captionsPlugin;\n  }\n\n  get isMobile() {\n    return isMobile.any;\n  }\n\n  get isTouch() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  get signal(): ICoreSignals {\n    return coreSignalRegistry;\n  }\n\n  get func(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  get exec(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  // views\n  protected _views: any[];\n\n  private get views(): any[] {\n    if (!this._views) {\n      this._views = [this.scenes.view, this.popups.view];\n      if (this.scenes.splash.view) {\n        this._views.push(this.scenes.splash.view);\n      }\n      if (this.scenes.transition) {\n        this._views.push(this.scenes.transition);\n      }\n      if (this.captions?.view) {\n        this._views.push(this.captions.view);\n      }\n    }\n    return this._views;\n  }\n\n  public static getInstance<T extends Application = Application>(): T {\n    return Application.instance as T;\n  }\n\n  /**\n   * Destroy the application\n   * This will destroy all plugins and the store\n   * @param {RendererDestroyOptions} rendererDestroyOptions\n   * @param {DestroyOptions} options\n   */\n  public destroy(rendererDestroyOptions?: RendererDestroyOptions, options?: DestroyOptions) {\n    this._plugins.forEach((plugin) => {\n      plugin.destroy();\n    });\n    this.store.destroy();\n    super.destroy(rendererDestroyOptions, options);\n  }\n\n  public setContainer(container: HTMLElement) {\n    if (!Application.containerElement) {\n      Application.containerElement = container;\n    }\n  }\n\n  public async initialize(config: AppConfig<D>): Promise<IApplication<D, C, A>> {\n    if (Application.instance) {\n      throw new Error('Application is already initialized');\n    }\n    Application.instance = this as unknown as IApplication<DataSchema, ActionContext, Action>;\n    this.config = Object.assign({ ...defaultApplicationOptions }, config as Partial<IApplicationOptions<D>>);\n\n    if (config.container) {\n      Application.containerElement = config.container;\n    }\n    // initialize the logger\n    Logger.initialize(this.config.logger);\n\n    await this.boot(this.config);\n    await this.preInitialize(this.config);\n    await this.initAssets();\n    // initialize the pixi application\n    await this.init(this.config);\n    // register the default plugins\n    await this.registerDefaultPlugins();\n\n    // internal setup\n    await this._setup();\n    this.plugins = await generatePluginList<IPlugin>(this.config.plugins || []);\n\n    for (let i = 0; i < this.plugins.length; i++) {\n      const listItem = this.plugins[i];\n      if (listItem && listItem?.autoLoad !== false) {\n        await this.loadPlugin(listItem);\n      }\n    }\n\n    // register the applications custom plugins\n    await this.registerPlugins();\n\n    // add the store if it's enabled\n    if (this.config.useStore) {\n      // register any storage adapters passed through the config\n      this.storageAdapters = await generateAdapterList(this.config.storageAdapters || []);\n      for (let i = 0; i < this.storageAdapters.length; i++) {\n        const listItem = this.storageAdapters[i];\n        if (this.store.hasAdapter(listItem.id)) {\n          Logger.error(`Storage Adapter with id \"${listItem.id}\" already registered. Not registering.`);\n          continue;\n        }\n        const storageAdapter = await getDynamicModuleFromImportListItem(listItem);\n        await this.registerStorageAdapter(new storageAdapter(listItem.id), listItem.options);\n      }\n      // also call the registerStorageAdapters method to allow for custom storage adapters to be registered\n      await this.registerStorageAdapters();\n    }\n\n    await this.setup();\n    await this.loadDefaultScene();\n\n    // focus the canvas\n    this.renderer.canvas.focus();\n\n    if (this.config.container) {\n      this.config.container.classList.add('loaded');\n    }\n\n    this._isBooting = false;\n    // return the Application instance to the create method, if needed\n    return Application.instance as unknown as IApplication<D, C, A>;\n  }\n\n  public getPlugin<T extends IPlugin>(pluginName: string, debug: boolean = false): T {\n    const plugin = this._plugins.get(pluginName) as T;\n    if (!plugin && debug) {\n      Logger.error(`Plugin with name \"${pluginName}\" not found.`);\n    }\n    return plugin;\n  }\n\n  async postInitialize(): Promise<void> {\n    (globalThis as any).__PIXI_APP__ = this;\n    this._resize();\n\n    this._plugins.forEach((plugin) => {\n      plugin.postInitialize(this as unknown as IApplication<DataSchema>);\n    });\n\n    this.webEvents.onVisibilityChanged.connect((visible) => {\n      if (visible) {\n        this.audio.restore();\n      } else {\n        this.audio.suspend();\n      }\n    });\n  }\n\n  public getUnloadedPlugin(id: string): ImportListItem<IPlugin> | undefined {\n    return this.plugins?.find((plugin) => plugin.id === id);\n  }\n\n  async loadPlugin(listItem: ImportListItem, isDefault: boolean = false) {\n    if (this._plugins.has(listItem.id)) {\n      return await this.registerPlugin(this._plugins.get(listItem.id)!, listItem.options);\n    }\n    const plugin = await getDynamicModuleFromImportListItem(listItem);\n    const pluginInstance = new plugin(listItem.id);\n    if (pluginInstance.id !== listItem.id) {\n      pluginInstance.id = listItem.id;\n    }\n    let opts = listItem.options;\n    if (isDefault && !opts) {\n      opts = this.config[pluginInstance.id as keyof IApplicationOptions];\n    }\n    return await this.registerPlugin(pluginInstance, opts);\n  }\n\n  /**\n   * Gets an ActionSignal for the specified action type\n   * @template TActionData - The type of data associated with the action\n   * @param {A} action - The action to get the signal for\n   * @returns {ActionSignal<TActionData>} A signal that can be used to listen for the action\n   * @example\n   * // Listen for a 'jump' action\n   * app.actions('jump').connect((data) => {\n   *   player.jump(data.power);\n   * });\n   */\n  public actions<TActionData = any>(action: A): ActionSignal<TActionData> {\n    return this.actionsPlugin.getAction<TActionData>(action as Action);\n  }\n\n  /**\n   * Dispatches an action with optional data\n   * @template TActionData - The type of data to send with the action\n   * @param {A} action - The action to dispatch\n   * @param {TActionData} [data] - Optional data to send with the action\n   * @example\n   * // Send a 'jump' action with power data\n   * app.sendAction('jump', { power: 100 });\n   */\n  public sendAction<TActionData = any>(action: A, data?: TActionData) {\n    this.actionsPlugin.sendAction<TActionData>(action as Action, data);\n  }\n\n  /**\n   * Dispatches an action with optional data\n   * alias for sendAction\n   * @template TActionData - The type of data to send with the action\n   * @param {A} action - The action to dispatch\n   * @param {TActionData} [data] - Optional data to send with the action\n   * @example\n   * // Send a 'jump' action with power data\n   * app.action('jump', { power: 100 });\n   */\n  public action<TActionData = any>(action: A, data?: TActionData) {\n    this.actionsPlugin.sendAction<TActionData>(action as Action, data);\n  }\n\n  /**\n   * Checks if an action is currently active\n   * @param {A} action - The action to check\n   * @returns {boolean} True if the action is active, false otherwise\n   * @example\n   * // Check if the 'run' action is active\n   * if (app.isActionActive('run')) {\n   *   player.updateSpeed(runningSpeed);\n   * }\n   */\n  public isActionActive(action: A): boolean {\n    return this.input.controls.isActionActive(action);\n  }\n\n  /**\n   * Get a storage adapter by id\n   * @param {string} adapterId\n   * @returns {IStorageAdapter}\n   */\n  public getStorageAdapter(adapterId: string): IStorageAdapter {\n    return this.store.getAdapter(adapterId);\n  }\n\n  /**\n   * Get a storage adapter by id\n   * @param {string} adapterId\n   * @returns {IStorageAdapter}\n   */\n  public get data(): IDataAdapter<D> {\n    return this.store.getAdapter('data') as unknown as IDataAdapter<D>;\n  }\n  /**\n   * app hasn't been initialized yet\n   * @protected\n   * @example boot(){\n   *     console.log(this.appVersion);\n   * }\n   * returns {Promise<void> | void}\n   */\n  protected boot(config?: Partial<IApplicationOptions<D>>): Promise<void> | void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected async boot(config?: Partial<IApplicationOptions<D>>): Promise<void> {\n    console.log(\n      `%c App info - %c${this.appName} | %cv${this.appVersion} `,\n      `background: rgba(31, 41, 55, 1); color: #74b64c`,\n      `background: rgba(31, 41, 55, 1); color: #74b64c; font-weight:bold`,\n      `background: rgba(31, 41, 55, 1); color: #74b64c; font-weight:bold`,\n    );\n  }\n\n  /**\n   * Pre-initialize the application\n   * This is called before the application is initialized\n   * should register any pixi extensions, etc\n   * @param {Partial<IApplicationOptions>} config\n   * @returns {Promise<void>}\n   * @protected\n   */\n  protected async preInitialize(config: Partial<IApplicationOptions<D>>): Promise<void> {\n    if (config.useSpine) {\n      await this.loadPlugin({\n        id: 'SpinePlugin',\n        module: () => import('./plugins/spine/SpinePlugin'),\n        namedExport: 'SpinePlugin',\n      });\n    }\n\n    if (this.config.useStore) {\n      this._store = new Store();\n      this._store.initialize(this as unknown as IApplication<DataSchema>);\n      this.registerDefaultStorageAdapters();\n    }\n  }\n\n  // plugins\n  protected async registerPlugin(plugin: IPlugin, options?: any) {\n    if (this._plugins.has(plugin.id)) {\n      Logger.error(`Plugin with id \"${plugin.id}\" already registered. Not registering.`);\n      return plugin.initialize(this as unknown as IApplication<DataSchema>, options);\n    }\n    plugin.registerCoreFunctions();\n    plugin.registerCoreSignals();\n    this._plugins.set(plugin.id, plugin);\n    return plugin.initialize(this as unknown as IApplication<DataSchema>, options);\n  }\n\n  protected async registerDefaultPlugins() {\n    for (let i = 0; i < defaultPlugins.length; i++) {\n      const listItem = defaultPlugins[i];\n      await this.loadPlugin(listItem, true);\n    }\n    const showStats = this.config.showStats === true || (isDev && this.config.showStats !== false);\n    if (showStats) {\n      await this.loadPlugin({\n        id: 'stats',\n        module: () => import('./plugins/StatsPlugin'),\n        namedExport: 'StatsPlugin',\n      });\n    }\n    if (this.config.useVoiceover) {\n      await this.loadPlugin({\n        id: 'voiceover',\n        module: () => import('./plugins/audio/VoiceOverPlugin'),\n        namedExport: 'VoiceOverPlugin',\n        options: this.config['voiceover' as keyof IApplicationOptions] || undefined,\n      });\n      await this.loadPlugin({\n        id: 'captions',\n        module: () => import('./plugins/captions/CaptionsPlugin'),\n        namedExport: 'CaptionsPlugin',\n        options: this.config['captions' as keyof IApplicationOptions] || undefined,\n      });\n    }\n  }\n\n  protected async registerDefaultStorageAdapters() {\n    const dataAdapter = new DataAdapter();\n    await this.registerStorageAdapter(dataAdapter, this.config.data);\n  }\n\n  protected async registerPlugins() {\n    // override this method to register custom plugins,\n    // or do it in the app config during bootstrap\n    return Promise.resolve();\n  }\n\n  // storage\n  protected async registerStorageAdapters() {\n    // override this method to register custom storage adapters,\n    // or do it in the app config during bootstrap\n    return Promise.resolve();\n  }\n\n  protected async registerStorageAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<any> {\n    return this.store.registerAdapter(adapter, adapterOptions);\n  }\n\n  /**\n   * This is called after the application is initialized\n   * You can be sure that\n   * - all plugins are registered\n   * - the store is created, with all storage adapters registered\n   * @protected\n   */\n  protected setup(): Promise<void> | void;\n\n  protected async setup(): Promise<void> {\n    // override me to set up application specific stuff\n  }\n\n  protected async initAssets(): Promise<void> {\n    const opts: Partial<AssetInitOptions> = this.config.assets?.initOptions || {};\n    if (this.config.assets?.manifest) {\n      let manifest = this.config.assets.manifest || opts.manifest;\n      if (isPromise(manifest)) {\n        manifest = await manifest;\n      }\n      opts.manifest = manifest as AssetsManifest;\n    }\n\n    await Assets.init(opts);\n    /** @ts-expect-error manifest is not a public property */\n    this.manifest = Assets.resolver._manifest;\n  }\n\n  protected async loadDefaultScene(): Promise<void> {\n    return this.scenes.loadDefaultScene();\n  }\n\n  private async _resize() {\n    this.resizer.resize();\n\n    console.log('Application._resize', this.size);\n\n    this.ticker.addOnce(() => {\n      this._center.set(this.size.width * 0.5, this.size.height * 0.5);\n      this.views.forEach((view) => {\n        if (!view || !view.position) {\n          return;\n        }\n        view.position.set(this._center.x, this._center.y);\n      });\n      this.onResize.emit(this.size);\n    });\n  }\n  /**\n   * Called after the application is initialized\n   * Here we add application specific signal listeners, etc\n   * @returns {Promise<void>}\n   * @private\n   */\n  private async _setup(): Promise<void> {\n    // register for PIXI DevTools extension\n    if (isDev) {\n      (globalThis as any).__PIXI_APP__ = this;\n    }\n    void this._resize();\n    // connect onResize signal\n    this.webEvents.onResize.connect(this._resize, -1);\n\n    if (this.scenes.splash?.view && this.scenes.splash.zOrder === 'bottom') {\n      this._addSplash();\n    }\n    // scene manager\n    this.scenes.view.label = 'SceneManager';\n    this.stage.addChild(this.scenes.view);\n\n    if (this.scenes.splash?.view && this.scenes.splash.zOrder === 'top') {\n      this._addSplash();\n    }\n    if (this.scenes.transition) {\n      this.scenes.transition.label = 'SceneManager:: Transition';\n      this.stage.addChild(this.scenes.transition);\n    }\n\n    // popup manager\n    this.stage.addChild(this.popups.view);\n\n    // focus manager\n    this.focus.view.label = 'FocusManager';\n    this.stage.addChild(this.focus.view);\n\n    // is touch device\n    return Promise.resolve();\n  }\n\n  private _addSplash() {\n    if (this.scenes.splash.view) {\n      this.scenes.splash.view.label = 'SceneManager:: Splash';\n      this.stage.addChild(this.scenes.splash.view);\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["env", "isDev", "isProduction", "capitalize", "str", "capitalizeWords", "colors", "_Logger", "mode", "args", "type", "Logger", "delay", "seconds", "resolve", "wait", "isPromise", "value", "createQueue", "promises", "Queue", "currentFunction", "result", "error", "isClass", "getDynamicModuleFromImportListItem", "item", "module", "ctor", "resolveSizeLike", "size", "Point", "obj", "debounce", "func", "timeoutId", "getPreviousMapEntry", "map", "currentKey", "previous", "entry", "getNextMapEntry", "next", "entries", "i", "getLastMapEntry", "getFirstMapEntry", "clamp", "pValue", "pMin", "pMax", "lerp", "pPerc", "pluck", "keys", "acc", "key", "omitKeys", "keysToOmit", "add", "a", "b", "addToPoint", "subtract", "subtractFromPoint", "multiply", "pMult", "point", "lerpPoint", "pt", "percent", "distance", "distanceSq", "magnitude", "resolvePointLike", "position", "asPoint", "x", "y", "offset", "rect", "delta", "center", "output", "scale", "bindMethods", "instance", "methodNames", "methodName", "method", "getInstanceMethodNames", "excludePrefixes", "excludeMethodNames", "prototype", "filteredMethodNames", "propertyName", "ownDescriptor", "prefix", "bindAllMethods", "checkAndInvokeMethod", "methodArgs", "floatBetween", "min", "max", "floatBetweenPoint", "intBetween", "intBetweenPoint", "bool", "shuffle", "array", "temp", "index", "getRandomElement", "resolvePadding", "paddingNum", "ensurePadding", "padding", "paddingAsPointLike", "isRetina", "isTouch", "isMobile", "PIXIUtilsIsMobile", "isAndroid", "isIos", "getZeroPaddedNumber", "num", "zeroPad", "getNearestCharacterIndex", "text", "e", "metrics", "CanvasTextMetrics", "lines", "lineHeight", "closestIndex", "minDistance", "currentIndex", "lineText", "j", "subText", "charX", "charY", "toHex", "color", "toRgb", "hex", "_Color", "r", "g", "pNumber", "rStr", "gStr", "bStr", "pA", "colorA", "colorB", "Color", "reParent", "pChild", "pParent", "objectDiagonal", "pObject", "sendToFront", "parent", "sendToBack", "offsetShape", "pShape", "pDelta", "Polygon", "offsetSimpleShape", "scaleUniform", "scaleNum", "scaleProp", "scaleVal", "otherScaleVal", "scaleToWidth", "width", "scaleToHeight", "height", "scaleToSize", "firstProp", "resolvedSize", "destroyCanvas", "canvas", "gl", "extension", "ctx", "filterSet", "set", "filterFunction", "filteredSet", "firstFromSet", "lastFromSet", "lastElement", "generatePluginList", "plugins", "pluginsList", "plugin", "p", "pluginAsArray", "_a", "_b", "generateAdapterList", "adapters", "storageAdaptersList", "adapter", "adapterAsArray", "defineConfig", "config", "version", "pixiVersion", "sayHello", "hello", "DEFAULT_GAME_CONTAINER_ID", "createContainer", "id", "container", "create", "ApplicationClass", "Application", "domElement", "speak", "el", "coreSignalRegistry", "coreFunctionRegistry", "Store", "adapterOptions", "adapterId", "data", "awaitSave", "aKey", "shouldAwait", "app", "Collector_1", "Collector$1", "signal", "Collector", "CollectorArray_1", "require$$0", "CollectorArray$1", "CollectorArray", "CollectorLast_1", "CollectorLast$1", "CollectorLast", "CollectorUntil0_1", "CollectorUntil0$1", "CollectorUntil0", "CollectorWhile0_1", "CollectorWhile0$1", "CollectorWhile0", "SignalConnection", "SignalConnectionImpl", "link", "parentCleanup", "enable", "SignalLink_1", "SignalLink$1", "SignalLink", "prev", "order", "flag", "callback", "after", "Signal_1", "SignalConnection_1", "require$$1", "Signal", "collector", "SignalConnections_1", "SignalConnections$1", "connection", "SignalConnections", "exports", "require$$2", "require$$3", "require$$4", "require$$5", "require$$6", "signalPriorities", "TsSignal", "wrapper", "wrapperConnection", "times", "numTimes", "priority", "Plugin", "_app", "_options", "f", "fName", "s", "sName", "ActionsPlugin", "debug", "context", "action", "actionId", "_d", "_c", "DefaultActionContexts", "DefaultActionContextsArray", "DefaultActions", "defaultActionsList", "DefaultButtonIds", "defineContexts", "contexts", "defineActions", "actions", "useDefaultActions", "defineButtons", "buttons", "detaultAssetPreferences", "addParseAsGraphicsContext", "asset", "getAssetList", "assets", "alias", "src", "AssetsPlugin", "options", "Assets", "bundles", "scene", "background", "filteredAssets", "bundle", "_e", "urls", "url", "aliases", "progress", "AudioChannel", "name", "manager", "sound", "AudioInstance", "channel", "volume", "duration", "gsap", "time", "setInstance", "getInstance", "WebAudioUtils", "param", "HTMLAudioContext", "EventEmitter", "_filters", "_HTMLAudioInstance", "currentTime", "paused", "media", "source", "speed", "loop", "muted", "global", "globalVolume", "soundVolume", "instanceVolume", "pausedReal", "start", "end", "Ticker", "HTMLAudioInstance", "HTMLAudioMedia", "onLoad", "removeListeners", "onAbort", "onError", "message", "SoundSprite", "complete", "extensions", "mimes", "supported", "validateFormats", "typeOverrides", "overrides", "audio", "formats", "no", "ext", "canByExt", "canByType", "WebAudioInstance", "filters", "filter", "gain", "enabled", "force", "now", "soundLength", "err", "Filterable", "input", "prevFilter", "_WebAudioNodes", "audioContext", "bufferSource", "analyser", "orig", "WebAudioNodes", "WebAudioMedia", "buffer", "response", "DOMAdapter", "arrayBuffer", "audioBufferReadyFn", "_Sound", "file", "path", "results", "sprite", "reject", "resolve2", "len", "Sound", "WebAudioContext", "win", "compressor", "state", "handleError", "SoundLibrary", "filtersAll", "sourceOptions", "options2", "legacy", "autoPause", "assert", "exists", "getAlias", "soundAsset", "ExtensionType", "LoaderParserPriority", "mime", "sound2", "_sound", "extensions$1", "AudioManagerPlugin", "channelName", "manifest", "bundleName", "soundId", "audioInstance", "mediaInstance", "props", "fadeProps", "outSoundId", "inSoundId", "crossFadeProps", "stopOnComplete", "soundInstance", "tween", "fade", "playingSounds", "originalSoundId", "filename", "urlOrResolvedSrc", "FocusOutliner", "Container", "Graphics", "focusTarget", "pos", "focusPos", "fp", "FocusLayer", "focusable", "isDefault", "FocusManagerPlugin", "layerId", "layer", "idx", "layerIds", "newLayers", "setAsCurrent", "focusables", "newLayer", "removeTopLayerIfUndefined", "nextLayerId", "reverse", "currentLayer", "nextTarget", "setInactiveOnNull", "oldFocusTarget", "defaultOptions", "i18nPlugin", "files", "localeId", "params", "locale", "dict", "match", "items", "re", "matches", "InputControllerTypes", "WithSignals", "Base", "Animated", "animationProps", "t", "sequences", "sequence", "fromProps", "toProps", "intensity", "origX", "repeat", "animationEntity", "Focusable", "Interactive", "eventName", "event", "signalName", "createFactoryMethods", "methods", "addToStage", "factoryMethods", "ContainerConfigKeys", "defaultConfig", "Factory", "colorOrConfig", "alpha", "opts", "Texture", "ticker", "ParticleContainerConfigKeys", "ParticleContainer", "PIXIParticleContainer", "Scene", "SceneTransition", "autoUpdate", "Svg", "bounds", "AnimatedSprite", "PIXIAnimatedSprite", "animations", "defaultAnimationName", "defaultAnimation", "defaultSheet", "defaultTexturePrefix", "defaultZeroPad", "animationName", "textures", "sheet", "resolveTexture", "autoPlay", "animSpeed", "Camera", "target", "deltaX", "deltaY", "newPivotX", "newPivotY", "entity", "globalPosition", "spritePosition", "posXModifier", "posYModifier", "offsetX", "offsetY", "tMinX", "tMaxX", "tMinY", "tMaxY", "currentScaleX", "currentScaleY", "interpolatedScaleX", "interpolatedScaleY", "skipLerp", "currentPivotX", "currentPivotY", "interpolatedPivotX", "interpolatedPivotY", "CameraController", "camera", "interactiveArea", "detail", "currentPosition", "_SpineAnimation", "SpineAnimation", "trackIndex", "tracklndex", "ButtonConfigKeys", "_Button", "Button", "callbackId", "textureId", "texture", "_FlexContainer", "FlexContainerConfigKeys", "FlexContainer", "children", "child", "newChild", "actualChild", "label", "deep", "foundChild", "canHaveEndlessWidthOrHeight", "gap", "flexDirection", "flexWrap", "alignItems", "justifyContent", "layoutProps", "rowHeight", "columnWidth", "nextRowY", "nextColumnX", "newLayoutProps", "lineItems", "lineStart", "shouldWrap", "childRef", "handleWrap", "updateLayoutVariables", "getNextX", "currentX", "getNextY", "currentY", "handleJustification", "lineEnd", "direction", "extraSpace", "handleAlignment", "totalHeight", "UICanvasConfigKeys", "_UICanvas", "UICanvas", "beginIndex", "endIndex", "_size", "childObj", "settings", "Rectangle", "displayWidth", "displayHeight", "firstChild", "childWidth", "childHeight", "defaultBackingConfig", "defaultPopupConfig", "Popup", "finalConfig", "backingConfig", "gfx", "backingWrapper", "backing", "Sprite", "AVAILABLE_TYPES", "Input", "isClone", "clone", "nearestCharacterIndex", "selection", "bgHeight", "bgWidth", "diff", "inputAvailableWidth", "inputDiff", "cloneScale", "hasError", "_g", "_f", "_i", "_h", "hasOverlay", "isList", "shouldShow", "filterList", "fontSize", "_j", "_k", "_l", "w", "toStart", "leftMetrics", "textMetrics", "filteredValue", "Joystick", "JoystickDirection", "outer", "inner", "newPosition", "sideX", "sideY", "centerPoint", "angle", "tanVal", "radian", "centerX", "centerY", "rad", "TextPropsKeys", "resolveUnknownKeys", "assetAsString", "spriteSheet", "linkedSheet", "resolvePosition", "resolveScale", "resolveAnchor", "anchor", "anchorPoint", "resolvePivot", "pivot", "pivotPoint", "defaultFactoryMethods", "scaleX", "scaleY", "rest", "otherProps", "unknowns", "Text", "BitmapText", "PIXIContainer", "normalizeKey", "KeyboardPlugin", "eventType", "signalMap", "AbstractControls", "scheme", "KeyboardControls", "controlsAction", "inputString", "combo", "keysDown", "eliminated", "combination", "JOYSTICK_DIRECTIONS", "TouchControls", "button", "buttonAction", "joystickAction", "joystickDirection", "buttonsDown", "Controls", "InputPlugin", "controller", "gamepad", "inputController", "gamepadId", "defineControls", "controls", "PopupManagerPlugin", "popup", "animate", "ResizerPlugin", "screenWidth", "screenHeight", "minWidth", "minHeight", "defaultSplashOptions", "SceneManagerPlugin", "sceneList", "splash", "sceneIdOrLoadSceneConfig", "newSceneId", "sceneItem", "pluginListItem", "hash", "sceneId", "SceneClass", "icon", "defaultOption", "groups", "group", "nogroups", "option", "WebEventsPlugin", "StorageAdapter", "_key", "_data", "_rest", "DataAdapter", "merge", "deepMerge", "dataToBackup", "loadedData", "defaultPlugins", "defaultApplicationOptions", "PIXIPApplication", "__vite_import_meta_env__", "rendererDestroyOptions", "listItem", "storageAdapter", "pluginName", "visible", "pluginInstance", "dataAdapter", "view"]
}
