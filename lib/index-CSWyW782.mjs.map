{"version":3,"file":"index-CSWyW782.mjs","sources":["../node_modules/typed-signals/dist/Collector.js","../node_modules/typed-signals/dist/CollectorArray.js","../node_modules/typed-signals/dist/CollectorLast.js","../node_modules/typed-signals/dist/CollectorUntil0.js","../node_modules/typed-signals/dist/CollectorWhile0.js","../node_modules/typed-signals/dist/SignalConnection.js","../node_modules/typed-signals/dist/SignalLink.js","../node_modules/typed-signals/dist/Signal.js","../node_modules/typed-signals/dist/SignalConnections.js","../node_modules/typed-signals/dist/index.js","../src/signals/Signal.ts","../src/utils/env.ts","../src/utils/console/Logger.ts","../src/store/Store.ts","../src/utils/async.ts","../src/utils/framework.ts","../src/utils/methodBinding.ts","../src/core/coreFunctionRegistry.ts","../src/core/coreSignalRegistry.ts","../src/plugins/defaults.ts","../src/core/Application.ts","../src/plugins/Plugin.ts","../src/pixi.ts","../src/utils/functions.ts","../src/plugins/focus/FocusOutliner.ts","../src/plugins/input/actions.ts","../src/store/adapters/StorageAdapter.ts","../src/store/adapters/LocalStorageAdapter.ts","../src/utils/math.ts","../src/utils/map.ts","../src/utils/platform.ts","../src/utils/promise/Queue.ts","../src/utils/object.ts","../src/mixins/focus.ts","../src/mixins/interaction.ts","../src/mixins/signals.ts","../src/display/Button.ts","../src/mixins/animated.ts","../src/display/Container.ts","../src/display/FlexContainer.ts","../src/display/SpineAnimation.ts","../src/utils/padding.ts","../src/display/UICanvas.ts","../src/mixins/factory/props.ts","../src/mixins/factory/utils.ts","../src/mixins/factory/index.ts","../src/display/Popup.ts","../src/display/Scene.ts","../src/display/Camera.ts","../src/version.ts","../src/hello.ts","../src/core/create.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\n/**\n * Base class for collectors.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Collector {\n    /**\n     * Create a new collector.\n     *\n     * @param signal The signal to emit.\n     */\n    constructor(signal) {\n        // eslint-disable-next-line dot-notation\n        this.emit = (...args) => {\n            // eslint-disable-next-line dot-notation\n            signal[\"emitCollecting\"](this, args);\n        };\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorArray = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the all signal handlers from a signal emission in an array.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorArray extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = [];\n    }\n    handleResult(result) {\n        this.result.push(result);\n        return true;\n    }\n    /**\n     * Get the list of results from the signal handlers.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result.length = 0;\n    }\n}\nexports.CollectorArray = CollectorArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorLast = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the last signal handler from a signal emission.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorLast extends Collector_1.Collector {\n    handleResult(result) {\n        this.result = result;\n        return true;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        delete this.result;\n    }\n}\nexports.CollectorLast = CollectorLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorUntil0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return true.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorUntil0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorUntil0 = CollectorUntil0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorWhile0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return false.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorWhile0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return !this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorWhile0 = CollectorWhile0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnectionImpl = void 0;\n/**\n * Implementation of SignalConnection, for internal use only.\n * @private\n */\nclass SignalConnectionImpl {\n    /**\n     * @param link The actual link of the connection.\n     * @param parentCleanup Callback to cleanup the parent signal when a connection is disconnected\n     */\n    constructor(link, parentCleanup) {\n        this.link = link;\n        this.parentCleanup = parentCleanup;\n    }\n    disconnect() {\n        if (this.link !== null) {\n            this.link.unlink();\n            this.link = null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.parentCleanup();\n            this.parentCleanup = null;\n            return true;\n        }\n        return false;\n    }\n    set enabled(enable) {\n        if (this.link)\n            this.link.setEnabled(enable);\n    }\n    get enabled() {\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        return this.link !== null && this.link.isEnabled();\n    }\n}\nexports.SignalConnectionImpl = SignalConnectionImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalLink = void 0;\n/**\n * SignalLink implements a doubly-linked ring with nodes containing the signal handlers.\n * @private\n */\nclass SignalLink {\n    constructor(prev = null, next = null, order = 0) {\n        this.enabled = true;\n        this.newLink = false;\n        this.callback = null;\n        this.prev = prev !== null && prev !== void 0 ? prev : this;\n        this.next = next !== null && next !== void 0 ? next : this;\n        this.order = order;\n    }\n    isEnabled() {\n        return this.enabled && !this.newLink;\n    }\n    setEnabled(flag) {\n        this.enabled = flag;\n    }\n    unlink() {\n        this.callback = null;\n        this.next.prev = this.prev;\n        this.prev.next = this.next;\n    }\n    insert(callback, order) {\n        let after = this.prev;\n        while (after !== this) {\n            if (after.order <= order)\n                break;\n            after = after.prev;\n        }\n        const link = new SignalLink(after, after.next, order);\n        link.callback = callback;\n        after.next = link;\n        link.next.prev = link;\n        return link;\n    }\n}\nexports.SignalLink = SignalLink;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signal = void 0;\nconst SignalConnection_1 = require(\"./SignalConnection\");\nconst SignalLink_1 = require(\"./SignalLink\");\n/**\n * A signal is a way to publish and subscribe to events.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Signal {\n    constructor() {\n        this.head = new SignalLink_1.SignalLink();\n        this.hasNewLinks = false;\n        this.emitDepth = 0;\n        this.connectionsCount = 0;\n    }\n    /**\n     * @returns The number of connections on this signal.\n     */\n    getConnectionsCount() {\n        return this.connectionsCount;\n    }\n    /**\n     * @returns true if this signal has connections.\n     */\n    hasConnections() {\n        return this.connectionsCount > 0;\n    }\n    /**\n     * Subscribe to this signal.\n     *\n     * @param callback This callback will be run when emit() is called.\n     * @param order Handlers with a higher order value will be called later.\n     */\n    connect(callback, order = 0) {\n        this.connectionsCount++;\n        const link = this.head.insert(callback, order);\n        if (this.emitDepth > 0) {\n            this.hasNewLinks = true;\n            link.newLink = true;\n        }\n        return new SignalConnection_1.SignalConnectionImpl(link, () => this.decrementConnectionCount());\n    }\n    decrementConnectionCount() {\n        this.connectionsCount--;\n    }\n    /**\n     * Unsubscribe from this signal with the original callback instance.\n     * While you can use this method, the SignalConnection returned by connect() will not be updated!\n     *\n     * @param callback The callback you passed to connect().\n     */\n    disconnect(callback) {\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.callback === callback) {\n                this.decrementConnectionCount();\n                link.unlink();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Disconnect all handlers from this signal event.\n     */\n    disconnectAll() {\n        while (this.head.next !== this.head) {\n            this.head.next.unlink();\n        }\n        this.connectionsCount = 0;\n    }\n    /**\n     * Publish this signal event (call all handlers).\n     */\n    emit(...args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback)\n                link.callback.apply(null, args);\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    emitCollecting(collector, args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback) {\n                const result = link.callback.apply(null, args);\n                if (!collector.handleResult(result))\n                    break;\n            }\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    unsetNewLink() {\n        if (this.hasNewLinks && this.emitDepth === 0) {\n            for (let link = this.head.next; link !== this.head; link = link.next)\n                link.newLink = false;\n            this.hasNewLinks = false;\n        }\n    }\n}\nexports.Signal = Signal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = void 0;\n/**\n * Represents a list of connections to a signal for easy disconnect.\n */\nclass SignalConnections {\n    constructor() {\n        this.list = [];\n    }\n    /**\n     * Add a connection to the list.\n     * @param connection\n     */\n    add(connection) {\n        this.list.push(connection);\n    }\n    /**\n     * Disconnect all connections in the list and empty the list.\n     */\n    disconnectAll() {\n        for (const connection of this.list) {\n            connection.disconnect();\n        }\n        this.list = [];\n    }\n    /**\n     * @returns The number of connections in this list.\n     */\n    getCount() {\n        return this.list.length;\n    }\n    /**\n     * @returns true if this list is empty.\n     */\n    isEmpty() {\n        return this.list.length === 0;\n    }\n}\nexports.SignalConnections = SignalConnections;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = exports.Signal = exports.CollectorWhile0 = exports.CollectorUntil0 = exports.CollectorLast = exports.CollectorArray = exports.Collector = void 0;\nvar Collector_1 = require(\"./Collector\");\nObject.defineProperty(exports, \"Collector\", { enumerable: true, get: function () { return Collector_1.Collector; } });\nvar CollectorArray_1 = require(\"./CollectorArray\");\nObject.defineProperty(exports, \"CollectorArray\", { enumerable: true, get: function () { return CollectorArray_1.CollectorArray; } });\nvar CollectorLast_1 = require(\"./CollectorLast\");\nObject.defineProperty(exports, \"CollectorLast\", { enumerable: true, get: function () { return CollectorLast_1.CollectorLast; } });\nvar CollectorUntil0_1 = require(\"./CollectorUntil0\");\nObject.defineProperty(exports, \"CollectorUntil0\", { enumerable: true, get: function () { return CollectorUntil0_1.CollectorUntil0; } });\nvar CollectorWhile0_1 = require(\"./CollectorWhile0\");\nObject.defineProperty(exports, \"CollectorWhile0\", { enumerable: true, get: function () { return CollectorWhile0_1.CollectorWhile0; } });\nvar Signal_1 = require(\"./Signal\");\nObject.defineProperty(exports, \"Signal\", { enumerable: true, get: function () { return Signal_1.Signal; } });\nvar SignalConnections_1 = require(\"./SignalConnections\");\nObject.defineProperty(exports, \"SignalConnections\", { enumerable: true, get: function () { return SignalConnections_1.SignalConnections; } });\n","import {\n  Collector,\n  CollectorArray,\n  CollectorLast,\n  CollectorUntil0,\n  CollectorWhile0,\n  Signal as TsSignal,\n  SignalConnection,\n  SignalConnections,\n} from 'typed-signals';\n\nclass Signal<THandler extends (...args: any[]) => any> extends TsSignal<THandler> {\n  // add a connectOnce method to the Signal class, that will connect a listener to the signal, and then remove it after the first time it is called\n  public connectOnce(callback: THandler, order?: number): SignalConnection {\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      // Assuming you have a method to remove the connection, using it here to disconnect\n      wrapperConnection.disconnect();\n    }) as THandler;\n\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n\n  public connectNTimes(callback: THandler, times: number, order?: number): SignalConnection {\n    let numTimes = 0;\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      numTimes++;\n      if (numTimes >= times) {\n        wrapperConnection.disconnect();\n      }\n    }) as THandler;\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n}\n\n// export anything useful from ts-signals, as well as the new Signal class\nexport { Signal, SignalConnections, Collector, CollectorLast, CollectorArray, CollectorUntil0, CollectorWhile0 };\nexport type { SignalConnection };\n","export const env = process.env.NODE_ENV;\nexport const isDev = env === 'development';\nexport const isProduction = env === 'production';\n","import { isDev } from '../env';\n\nexport class Logger {\n  private static _instance: Logger | null = null;\n\n  public static initialize(namespace: string = '') {\n    if (Logger._instance) {\n      throw new Error('Logger has already been instantiated.');\n    }\n    Logger._instance = new Logger(namespace);\n  }\n\n  public static log(...args: any) {\n    if (!Logger._instance || !Logger._instance._namespace) {\n      console.log(...args);\n    } else {\n      console.log(`%c[${Logger._instance._namespace}]`, 'background: lightblue; color: black;', ...args);\n      if (isDev) Logger.trace();\n    }\n  }\n\n  public static error(...args: any) {\n    if (!Logger._instance || !Logger._instance._namespace) {\n      console.error(...args);\n    } else {\n      console.error(`%c[${Logger._instance._namespace}]`, 'background: red; color: black;', ...args);\n      if (isDev) Logger.trace();\n    }\n  }\n\n  public static warn(...args: any) {\n    if (!Logger._instance || !Logger._instance._namespace) {\n      console.warn(...args);\n    } else {\n      console.warn(`%c[${Logger._instance._namespace}]`, 'background: orange; color: black;', ...args);\n      if (isDev) Logger.trace();\n    }\n  }\n\n  public static trace() {\n    console.groupCollapsed('%cLogger trace', 'background: #ccc; color: black;');\n    console.trace();\n    console.groupEnd();\n  }\n\n  private constructor(private _namespace: string = '') {\n    Logger._instance = this;\n  }\n}\n","import { IApplication } from '../core/Application';\nimport { Logger } from '../utils/console/Logger';\nimport { IStorageAdapter } from './adapters/StorageAdapter';\n\n/**\n * Configuration for saving data with an adapter.\n */\ntype AdapterSaveConfig = {\n  adapterId: string;\n  awaitSave: boolean;\n};\n\n/**\n * Interface for the Store class.\n */\nexport interface IStore {\n  initialize(app: IApplication): IStore;\n\n  destroy(): void;\n\n  registerAdapter(adapter: IStorageAdapter, adapterOptions: any): void;\n\n  getAdapter<T extends IStorageAdapter>(adapterId: string): T;\n\n  hasAdapter(adapterId: string): boolean;\n\n  save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave?: boolean,\n  ): Promise<any>;\n\n  load(adapterId: string, key: string): Promise<any>;\n}\n\n/**\n * A class representing a store of data, with multiple storage adapters.\n */\nexport class Store implements IStore {\n  private _app: IApplication;\n  private _adapters: Map<string, IStorageAdapter> = new Map<string, IStorageAdapter>();\n\n  /**\n   * Registers a new storage adapter with the store.\n   * @param {IStorageAdapter} adapter The adapter to register.\n   * @param {any} adapterOptions The options to initialize the adapter with.\n   * @returns {Promise<void>} A promise that resolves when the adapter has been registered and initialized.\n   */\n  async registerAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<void> {\n    if (this._adapters.has(adapter.id)) {\n      Logger.error(`Storage Adapter with id \"${adapter.id}\" already registered. Not registering.`);\n      return Promise.resolve();\n    }\n    this._adapters.set(adapter.id, adapter);\n    await adapter.initialize(this._app, adapterOptions);\n  }\n\n  /**\n   * Retrieves a registered storage adapter.\n   * @template T The type of the adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {T} The adapter.\n   */\n  getAdapter<T extends IStorageAdapter>(adapterId: string): T {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return adapter as T;\n  }\n\n  /**\n   * Checks if a storage adapter is registered.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {boolean} True if the adapter is registered, false otherwise.\n   */\n  hasAdapter(adapterId: string): boolean {\n    return this._adapters.has(adapterId);\n  }\n\n  /**\n   * Destroys the store and all its adapters.\n   */\n  destroy(): void {\n    this._adapters.forEach((adapter) => {\n      adapter.destroy();\n    });\n    this._adapters.clear();\n  }\n\n  /**\n   * Saves data with a storage adapter.\n   * @param {string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[]} adapterId The ID of the adapter, or an array of IDs, or an array of save configurations.\n   * @param {string} key The key to save the data under.\n   * @param {any} data The data to save.\n   * @param {boolean} [awaitSave] Whether to wait for the save operation to complete before returning.\n   * @returns {Promise<any>} A promise that resolves with the result of the save operation.\n   */\n  async save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave = true,\n  ): Promise<any> {\n    let keys: string[] | Partial<AdapterSaveConfig>[] = [];\n    const result = [];\n\n    if (!Array.isArray(adapterId)) {\n      if (typeof adapterId === 'object') {\n        keys = [adapterId];\n      } else {\n        keys = [adapterId as string];\n      }\n    }\n\n    if ((keys[0] as string) === '*' || (keys[0] as Partial<AdapterSaveConfig>)?.adapterId === '*') {\n      // use all adapter\n      keys = Array.from(this._adapters.keys());\n    }\n    for (let i = 0; i < keys.length; i++) {\n      let aKey: string;\n      let shouldAwait: boolean = false;\n      if (typeof keys[i] === 'object') {\n        const obj = keys[i] as Partial<AdapterSaveConfig>;\n        aKey = obj.adapterId as string;\n        shouldAwait = obj.awaitSave ?? false;\n      } else {\n        aKey = keys[i] as unknown as string;\n        shouldAwait = awaitSave;\n      }\n      const adapter = this._adapters.get(aKey);\n      if (!adapter) {\n        throw new Error(`Adapter ${keys[i]} not found`);\n      }\n\n      if (shouldAwait) {\n        result.push(await adapter.save(key, data));\n      } else {\n        result.push(void adapter.save(key, data));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Loads data from a storage adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @param {string} key The key to load the data from.\n   * @returns {Promise<any>} A promise that resolves with the loaded data.\n   */\n  public async load(adapterId: string, key: string): Promise<any> {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return await adapter.load(key);\n  }\n\n  public initialize(app: IApplication): IStore {\n    this._app = app;\n    return this;\n  }\n}\n","/**\n * Delays the execution of the subsequent code.\n * @param {number} seconds The delay time in seconds. Default is 0.\n * @returns {Promise<void>} A promise that resolves after the specified delay.\n */\nexport const delay = (seconds: number = 0): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n\n/**\n * Checks if the given value is a promise.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a promise, false otherwise.\n */\nexport const isPromise = (value: any): value is Promise<any> => value && typeof value.then === 'function';\n","import { isPromise } from './async';\nimport { Constructor, ImportListItem, ImportListItemModule } from './types';\n\n/**\n * Checks if the given value is a class.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a class, false otherwise.\n */\nfunction isClass(value: any): boolean {\n  return typeof value === 'function' && /^class\\s/.test(Function.prototype.toString.call(value));\n}\n\n/**\n * Retrieves the constructor of the module from the given import list item.\n * If the module is a promise, it waits for it to resolve.\n * If the module is a class, it returns it directly.\n * If the module has a named export specified in the item, it returns that.\n * Otherwise, it returns the default export of the module.\n * @param {ImportListItem<T>} item The import list item to get the module from.\n * @returns {Promise<Constructor<T>>} A promise that resolves to the constructor of the module.\n */\nexport async function getDynamicModuleFromImportListItem<T = any>(\n  item: ImportListItem<T>,\n): Promise<ImportListItemModule<T>> {\n  let module;\n  let ctor: ImportListItemModule<T>;\n\n  if (isPromise(item.module)) {\n    module = await item.module;\n    ctor = item?.namedExport ? module[item.namedExport] : module.default;\n  } else if (typeof item.module === 'function') {\n    if (isClass(item.module)) {\n      module = item.module;\n      ctor = module as Constructor<T>;\n    } else {\n      module = await (item.module as () => Promise<any>)();\n      ctor = item?.namedExport ? module[item.namedExport] : module.default;\n    }\n  } else {\n    module = item.module;\n    ctor = module;\n  }\n\n  return ctor;\n}\n","type MethodNames = {\n  [key: string]: any;\n};\n\n/**\n * Binds the provided methods to the provided instance.\n * @param instance - The instance to which the methods should be bound.\n * @param methodNames - The names of the methods to bind.\n */\nexport function bindMethods(instance: unknown, ...methodNames: string[]) {\n  methodNames.forEach((methodName) => {\n    const method = (instance as MethodNames)[methodName];\n    if (typeof method === 'function') {\n      (instance as MethodNames)[methodName] = method.bind(instance);\n    }\n  });\n}\n\n/**\n * Retrieves the names of all methods in an instance's prototype chain.\n * @param instance - The instance from which to retrieve method names.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n * @returns An array of method names.\n */\nfunction getInstanceMethodNames(\n  instance: any,\n  excludePrefixes: string[] = [],\n  excludeMethodNames: string[] = [],\n): string[] {\n  let prototype = Object.getPrototypeOf(instance);\n  const methodNames: string[] = [];\n\n  while (prototype) {\n    const filteredMethodNames = Object.getOwnPropertyNames(prototype).filter((propertyName) => {\n      const ownDescriptor = Object.getOwnPropertyDescriptor(prototype, propertyName);\n      return (\n        typeof ownDescriptor?.value === 'function' &&\n        propertyName !== 'constructor' &&\n        !excludePrefixes.some((prefix) => propertyName.startsWith(prefix)) &&\n        !excludeMethodNames.includes(propertyName)\n      );\n    });\n\n    methodNames.push(...filteredMethodNames);\n\n    if (prototype === Object.prototype || Object.prototype.hasOwnProperty.call(prototype.constructor, '__dill_pixel_method_binding_root')) {\n      break;\n    }\n\n    prototype = Object.getPrototypeOf(prototype);\n  }\n\n  return methodNames;\n}\n\n/**\n * Binds all methods of an instance to the instance.\n * @param instance - The instance to which the methods should be bound.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n */\nexport function bindAllMethods(instance: any, excludePrefixes: string[] = [], excludeMethodNames: string[] = []) {\n  getInstanceMethodNames(instance, excludePrefixes, excludeMethodNames).forEach((methodName) => {\n    instance[methodName] = instance[methodName].bind(instance);\n  });\n}\n\n/**\n * Checks if a method exists on an object and, if it does, invokes it with the provided arguments.\n * @param obj - The object on which to check for the method.\n * @param methodName - The name of the method to check for and invoke.\n * @param methodArgs - The arguments to pass to the method.\n */\nexport function checkAndInvokeMethod(obj: any, methodName: string, ...methodArgs: any[]): void {\n  if (typeof obj[methodName] === 'function') {\n    obj[methodName](...methodArgs);\n  }\n}\n","import { ICoreFunctions } from './ICoreFunctions';\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreFunctionRegistry: { [K in keyof ICoreFunctions]: ICoreFunctions[K] } = {};\n","import { ICoreSignals } from './ICoreSignals';\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreSignalRegistry: { [K in keyof ICoreSignals]: ICoreSignals[K] } = {};\n","import type { ImportList } from '../utils/types';\nimport { IPlugin } from './Plugin';\n\nexport const defaultPlugins: ImportList<IPlugin> = [\n  {\n    id: 'assets',\n    module: () => import('./AssetsPlugin'),\n    namedExport: 'AssetsPlugin',\n  },\n  {\n    id: 'webEvents',\n    module: () => import('./WebEventsPlugin'),\n    namedExport: 'WebEventsPlugin',\n  },\n  {\n    id: 'scenes',\n    module: () => import('./SceneManagerPlugin'),\n    namedExport: 'SceneManagerPlugin',\n  },\n  {\n    id: 'input',\n    module: () => import('./input/InputPlugin'),\n    namedExport: 'InputPlugin',\n  },\n  {\n    id: 'keyboard',\n    module: () => import('./KeyboardPlugin'),\n    namedExport: 'KeyboardPlugin',\n  },\n  {\n    id: 'focus',\n    module: () => import('./focus/FocusManagerPlugin'),\n    namedExport: 'FocusManagerPlugin',\n  },\n  {\n    id: 'popups',\n    module: () => import('./popups/PopupManagerPlugin'),\n    namedExport: 'PopupManagerPlugin',\n  },\n  {\n    id: 'audio',\n    module: () => import('./audio/AudioManagerPlugin'),\n    namedExport: 'AudioManagerPlugin',\n  },\n  {\n    id: 'i18n',\n    module: () => import('./i18nPlugin'),\n    namedExport: 'i18nPlugin',\n  },\n  {\n    id: 'resizer',\n    module: () => import('./ResizerPlugin'),\n    namedExport: 'ResizerPlugin',\n  },\n] as const;\n","import {\n  Application as PIXIPApplication,\n  ApplicationOptions,\n  AssetInitOptions,\n  Assets,\n  AssetsManifest,\n  DestroyOptions,\n  isMobile,\n  Point,\n  Renderer,\n  RendererDestroyOptions,\n} from 'pixi.js';\nimport type { IScene } from '../display/Scene';\nimport { IAssetsPlugin } from '../plugins/AssetsPlugin';\nimport { IAudioManagerPlugin } from '../plugins/audio/AudioManagerPlugin';\nimport type { IVoiceOverPlugin } from '../plugins/audio/VoiceOverPlugin';\nimport type { CaptionsOptions, ICaptionsPlugin } from '../plugins/captions/CaptionsPlugin';\nimport { FocusManagerPluginOptions, IFocusManagerPlugin } from '../plugins/focus/FocusManagerPlugin';\nimport { i18nOptions, Ii18nPlugin } from '../plugins/i18nPlugin';\nimport { IInputPlugin } from '../plugins/input/InputPlugin';\nimport { Action, ActionContext } from '../plugins/input/actions';\nimport { IKeyboardPlugin } from '../plugins/KeyboardPlugin';\nimport { IPlugin } from '../plugins/Plugin';\nimport { IPopupManagerPlugin } from '../plugins/popups/PopupManagerPlugin';\nimport { IResizerPlugin, ResizerPluginOptions } from '../plugins/ResizerPlugin';\nimport { ISceneManagerPlugin, LoadSceneMethod } from '../plugins/SceneManagerPlugin';\nimport { IWebEventsPlugin } from '../plugins/WebEventsPlugin';\nimport { Signal } from '../signals';\nimport type { IStorageAdapter } from '../store/adapters/StorageAdapter';\nimport { IStore, Store } from '../store/Store';\nimport { isPromise } from '../utils/async';\nimport { Logger } from '../utils/console/Logger';\nimport { isDev } from '../utils/env';\nimport { getDynamicModuleFromImportListItem } from '../utils/framework';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport type { ImportList, ImportListItem, SceneImportList, Size, WithRequiredProps } from '../utils/types';\nimport { coreFunctionRegistry } from './coreFunctionRegistry';\nimport type { ICoreFunctions } from './ICoreFunctions';\nimport { coreSignalRegistry } from './coreSignalRegistry';\nimport type { ICoreSignals } from './ICoreSignals';\nimport { defaultPlugins } from '../plugins/defaults';\nimport { ActionSignal } from '../plugins/input/types';\n\nexport interface IApplicationOptions extends ApplicationOptions {\n  id: string;\n  resizeToContainer: boolean;\n  useStore: boolean;\n  useSpine: boolean;\n  useVoiceover: boolean;\n  storageAdapters: ImportList<IStorageAdapter>;\n  plugins: ImportList<IPlugin>;\n  scenes: SceneImportList<IScene>;\n  focusOptions: Partial<FocusManagerPluginOptions>;\n  defaultScene: string;\n  defaultSceneLoadMethod: LoadSceneMethod;\n  showSceneDebugMenu: boolean;\n  manifest: AssetsManifest | Promise<AssetsManifest> | string;\n  i18n: Partial<i18nOptions>;\n  resizer: Partial<ResizerPluginOptions>;\n  captions: Partial<CaptionsOptions>;\n  showStats: boolean;\n}\n\nconst defaultApplicationOptions: Partial<IApplicationOptions> = {\n  antialias: false,\n  autoStart: true,\n  resizeToContainer: false,\n  backgroundColor: 0x0,\n  backgroundAlpha: 1,\n  clearBeforeRender: false,\n  context: null,\n  eventFeatures: undefined,\n  eventMode: undefined,\n  hello: false,\n  powerPreference: 'high-performance',\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  resizeTo: undefined,\n  sharedTicker: true,\n  view: undefined,\n  autoDensity: false,\n  resolution: window.devicePixelRatio > 1.5 ? 2 : 1,\n  // dill pixel options\n  useStore: true,\n  useSpine: false,\n  useVoiceover: true,\n  storageAdapters: [],\n  plugins: [],\n  scenes: [],\n  defaultSceneLoadMethod: 'immediate',\n  manifest: './assets.json',\n};\n\nexport type AppConfig = WithRequiredProps<IApplicationOptions, 'id'>;\n\nexport interface IApplication extends PIXIPApplication {\n  config: Partial<IApplicationOptions>;\n  readonly size: Size;\n  readonly center: Point;\n  manifest: AssetsManifest | string | undefined;\n  assets: IAssetsPlugin;\n  scenes: ISceneManagerPlugin;\n  webEvents: IWebEventsPlugin;\n  keyboard: IKeyboardPlugin;\n  focus: IFocusManagerPlugin;\n  popups: IPopupManagerPlugin;\n  audio: IAudioManagerPlugin;\n  i18n: Ii18nPlugin;\n  resizer: IResizerPlugin;\n  input: IInputPlugin;\n  store: IStore;\n\n  actionContext: string | ActionContext;\n  onPause: Signal<() => void>;\n  onResume: Signal<() => void>;\n\n  actions(action: string): ActionSignal;\n\n  initialize(config: AppConfig): Promise<IApplication>;\n\n  postInitialize(): Promise<void>;\n\n  getPlugin<T extends IPlugin>(name: string): T;\n}\n\nexport class Application<R extends Renderer = Renderer> extends PIXIPApplication<R> implements IApplication {\n  public static containerId = 'dill-pixel-game-container';\n  public static containerElement: HTMLElement;\n  protected static instance: IApplication;\n  __dill_pixel_method_binding_root = true;\n  // config\n  public config: Partial<IApplicationOptions>;\n  public manifest: string | AssetsManifest | undefined;\n  public onPause = new Signal<() => void>();\n  public onResume = new Signal<() => void>();\n  // signals\n  public onResize = new Signal<(size: Size) => void>();\n  // plugins\n  protected _plugins: Map<string, IPlugin> = new Map();\n  // default plugins\n  protected _assetManager: IAssetsPlugin;\n  protected _sceneManager: ISceneManagerPlugin;\n  protected _webEventsManager: IWebEventsPlugin;\n  protected _keyboardManager: IKeyboardPlugin;\n  protected _focusManager: IFocusManagerPlugin;\n  protected _popupManager: IPopupManagerPlugin;\n  protected _audioManager: IAudioManagerPlugin;\n  protected _voiceoverPlugin: IVoiceOverPlugin;\n  protected _captionsPlugin: ICaptionsPlugin;\n  protected _actions: ActionSignal;\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  public get appVersion() {\n    let version;\n    try {\n      version = __APP_VERSION__;\n    } catch (e) {\n      version = '-1';\n    }\n\n    return version;\n  }\n\n  protected _i18n: Ii18nPlugin;\n\n  public get i18n(): Ii18nPlugin {\n    if (!this._i18n) {\n      this._i18n = this.getPlugin<Ii18nPlugin>('i18n');\n    }\n    return this._i18n;\n  }\n\n  protected _resizer: IResizerPlugin;\n\n  public get resizer(): IResizerPlugin {\n    if (!this._resizer) {\n      this._resizer = this.getPlugin<IResizerPlugin>('resizer');\n    }\n    return this._resizer;\n  }\n\n  // input\n  protected _input: IInputPlugin;\n\n  public get input(): IInputPlugin {\n    if (!this._input) {\n      this._input = this.getPlugin<IInputPlugin>('input');\n    }\n    return this._input;\n  }\n\n  // store\n  protected _store: IStore;\n\n  public get store(): IStore {\n    return this._store;\n  }\n\n  // size\n  protected _center = new Point(0, 0);\n\n  public get center(): Point {\n    return this._center;\n  }\n\n  public get assets(): IAssetsPlugin {\n    if (!this._assetManager) {\n      this._assetManager = this.getPlugin<IAssetsPlugin>('assets');\n    }\n    return this._assetManager;\n  }\n\n  public get scenes(): ISceneManagerPlugin {\n    if (!this._sceneManager) {\n      this._sceneManager = this.getPlugin<ISceneManagerPlugin>('scenes');\n    }\n    return this._sceneManager;\n  }\n\n  public get webEvents(): IWebEventsPlugin {\n    if (!this._webEventsManager) {\n      this._webEventsManager = this.getPlugin<IWebEventsPlugin>('webEvents');\n    }\n    return this._webEventsManager;\n  }\n\n  public get keyboard(): IKeyboardPlugin {\n    if (!this._keyboardManager) {\n      this._keyboardManager = this.getPlugin<IKeyboardPlugin>('keyboard');\n    }\n    return this._keyboardManager;\n  }\n\n  public get focus(): IFocusManagerPlugin {\n    if (!this._focusManager) {\n      this._focusManager = this.getPlugin<IFocusManagerPlugin>('focus');\n    }\n    return this._focusManager;\n  }\n\n  get size() {\n    return this.resizer.size;\n  }\n\n  public get popups(): IPopupManagerPlugin {\n    if (!this._popupManager) {\n      this._popupManager = this.getPlugin<IPopupManagerPlugin>('popups');\n    }\n    return this._popupManager;\n  }\n\n  public get audio(): IAudioManagerPlugin {\n    if (!this._audioManager) {\n      this._audioManager = this.getPlugin<IAudioManagerPlugin>('audio');\n    }\n    return this._audioManager;\n  }\n\n  public get actionContext(): string | ActionContext {\n    return this.input.context;\n  }\n\n  public set actionContext(context: string | ActionContext) {\n    this.input.context = context;\n  }\n\n  public get voiceover(): IVoiceOverPlugin {\n    if (!this._voiceoverPlugin) {\n      this._voiceoverPlugin = this.getPlugin<IVoiceOverPlugin>('voiceover');\n    }\n    return this._voiceoverPlugin;\n  }\n\n  public get captions(): ICaptionsPlugin {\n    if (!this._captionsPlugin) {\n      this._captionsPlugin = this.getPlugin<ICaptionsPlugin>('captions');\n    }\n    return this._captionsPlugin;\n  }\n\n  get isMobile() {\n    return isMobile.any;\n  }\n\n  get isTouch() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  get signal(): ICoreSignals {\n    return coreSignalRegistry;\n  }\n\n  get func(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  get exec(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  private get views(): any[] {\n    return [this.scenes.view, this.popups.view, this.captions.view];\n  }\n\n  public static getInstance<T extends Application = Application>(): T {\n    return Application.instance as T;\n  }\n\n  public static createContainer(pId: string) {\n    const container = document.createElement('div');\n    Application.containerElement = container;\n    container.setAttribute('id', pId);\n    document.body.appendChild(container);\n    return container;\n  }\n\n  /**\n   * Destroy the application\n   * This will destroy all plugins and the store\n   * @param {RendererDestroyOptions} rendererDestroyOptions\n   * @param {DestroyOptions} options\n   */\n  public destroy(rendererDestroyOptions?: RendererDestroyOptions, options?: DestroyOptions) {\n    this._plugins.forEach((plugin) => {\n      plugin.destroy();\n    });\n    this.store.destroy();\n    super.destroy(rendererDestroyOptions, options);\n  }\n\n  public async initialize(config: AppConfig): Promise<IApplication> {\n    if (Application.instance) {\n      throw new Error('Application is already initialized');\n    }\n    Application.instance = this;\n    this.config = Object.assign({ ...defaultApplicationOptions }, config);\n    await this.boot(this.config);\n    await this.preInitialize(this.config);\n    await this.initAssets();\n    // initialize the pixi application\n    await this.init(this.config);\n    // initialize the logger\n    Logger.initialize(config.id);\n\n    // register the default plugins\n    await this.registerDefaultPlugins();\n\n    if (this.config.plugins && this.config.plugins.length > 0) {\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        const listItem = this.config.plugins[i];\n        if (listItem && listItem?.autoLoad !== false) {\n          await this.loadPlugin(listItem);\n        }\n      }\n    }\n\n    // register the applications custom plugins\n    await this.registerPlugins();\n\n    // add the store if it's enabled\n    if (this.config.useStore) {\n      this._store = new Store();\n      this._store.initialize(this);\n\n      // register any storage adapters passed through the config\n      if (this.config.storageAdapters && this.config.storageAdapters.length > 0) {\n        for (let i = 0; i < this.config.storageAdapters.length; i++) {\n          const listItem = this.config.storageAdapters[i];\n          if (this.store.hasAdapter(listItem.id)) {\n            Logger.error(`Storage Adapter with id \"${listItem.id}\" already registered. Not registering.`);\n            continue;\n          }\n          const storageAdapter = await getDynamicModuleFromImportListItem(listItem);\n          await this.registerStorageAdapter(new storageAdapter(listItem.id), listItem.options);\n        }\n      }\n      // also call the registerStorageAdapters method to allow for custom storage adapters to be registered\n      await this.registerStorageAdapters();\n    }\n\n    await this._setup(); // internal\n    await this.setup();\n    await this.loadDefaultScene();\n\n    // focus the canvas\n    this.renderer.canvas.focus();\n\n    Application.containerElement.classList.add('loaded');\n\n    // return the Application instance to the create method, if needed\n    return Application.instance;\n  }\n\n  public getPlugin<T extends IPlugin>(pluginName: string): T {\n    const plugin = this._plugins.get(pluginName) as T;\n    if (!plugin) {\n      Logger.error(`Plugin with name \"${pluginName}\" not found.`);\n    }\n    return plugin;\n  }\n\n  async postInitialize(): Promise<void> {\n    (globalThis as any).__PIXI_APP__ = this;\n    this._plugins.forEach((plugin) => {\n      plugin.postInitialize(this);\n    });\n\n    this.webEvents.onVisibilityChanged.connect((visible) => {\n      if (visible) {\n        this.audio.restore();\n      } else {\n        this.audio.suspend();\n      }\n    });\n\n    void this._resize();\n  }\n\n  public actions<T = any>(action: Action | string): ActionSignal<T> {\n    return this.input.actions(action);\n  }\n\n  public getUnloadedPlugin(id: string): ImportListItem<IPlugin> | undefined {\n    return this.config.plugins?.find((plugin) => plugin.id === id);\n  }\n\n  async loadPlugin(listItem: ImportListItem) {\n    if (this._plugins.has(listItem.id)) {\n      return await this.registerPlugin(this._plugins.get(listItem.id)!, listItem.options);\n    }\n    const plugin = await getDynamicModuleFromImportListItem(listItem);\n    const pluginInstance = new plugin(listItem.id);\n    if (pluginInstance.id !== listItem.id) {\n      pluginInstance.id = listItem.id;\n    }\n    return await this.registerPlugin(pluginInstance, listItem.options);\n  }\n\n  public sendAction(action: string, data?: any) {\n    this.input.sendAction(action, data);\n  }\n\n  /**\n   * Get a storage adapter by id\n   * @param {string} adapterId\n   * @returns {IStorageAdapter}\n   */\n  public getStorageAdapter(adapterId: string): IStorageAdapter {\n    return this.store.getAdapter(adapterId);\n  }\n\n  /**\n   * app hasn't been initialized yet\n   * @protected\n   * @example boot(){\n   *     console.log(this.appVersion);\n   * }\n   * returns {Promise<void> | void}\n   */\n  protected boot(config?: Partial<IApplicationOptions>): Promise<void> | void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected async boot(config?: Partial<IApplicationOptions>): Promise<void> {\n    Logger.log(`${this.constructor.name}:: v${this.appVersion}`);\n  }\n\n  /**\n   * Pre-initialize the application\n   * This is called before the application is initialized\n   * should register any pixi extensions, etc\n   * @param {Partial<IApplicationOptions>} config\n   * @returns {Promise<void>}\n   * @protected\n   */\n  protected async preInitialize(config: Partial<IApplicationOptions>): Promise<void> {\n    if (config.useSpine) {\n      await this.loadPlugin({\n        id: 'SpinePlugin',\n        module: () => import('../plugins/spine/SpinePlugin'),\n        namedExport: 'SpinePlugin',\n      });\n    }\n  }\n\n  // plugins\n  protected async registerPlugin(plugin: IPlugin, options?: any) {\n    if (this._plugins.has(plugin.id)) {\n      Logger.error(`Plugin with id \"${plugin.id}\" already registered. Not registering.`);\n      return plugin.initialize(this, options);\n    }\n    Logger.log(`Registering plugin: ${plugin.id}`);\n    plugin.registerCoreFunctions();\n    plugin.registerCoreSignals();\n    this._plugins.set(plugin.id, plugin);\n    return plugin.initialize(this, options);\n  }\n\n  protected async registerDefaultPlugins() {\n    for (let i = 0; i < defaultPlugins.length; i++) {\n      const listItem = defaultPlugins[i];\n      await this.loadPlugin(listItem);\n    }\n    const showStats = this.config.showStats === true || (isDev && this.config.showStats !== false);\n    if (showStats) {\n      await this.loadPlugin({\n        id: 'stats',\n        module: () => import('../plugins/StatsPlugin'),\n        namedExport: 'StatsPlugin',\n      });\n    }\n    if (this.config.useVoiceover) {\n      await this.loadPlugin({\n        id: 'voiceover',\n        module: () => import('../plugins/audio/VoiceOverPlugin'),\n        namedExport: 'VoiceOverPlugin',\n        options: this.config['voiceover' as keyof IApplicationOptions] || undefined,\n      });\n      await this.loadPlugin({\n        id: 'captions',\n        module: () => import('../plugins/captions/CaptionsPlugin'),\n        namedExport: 'CaptionsPlugin',\n        options: this.config['captions' as keyof IApplicationOptions] || undefined,\n      });\n    }\n  }\n\n  protected async registerPlugins() {\n    if (isDev) {\n      Logger.log(\n        'No custom plugins registered using \"registerPlugins\". Register them by overriding the \"registerPlugins\"' +\n          ' method in your' +\n          ' Application class.',\n      );\n    }\n    return Promise.resolve();\n  }\n\n  // storage\n  protected async registerStorageAdapters() {\n    if (isDev) {\n      Logger.log(\n        'No storage adapters registered using \"registerStorageAdapters\". Register them by overriding the' +\n          ' \"registerStorageAdapters\" method in your' +\n          ' Application class.',\n      );\n    }\n    return Promise.resolve();\n  }\n\n  protected async registerStorageAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<any> {\n    return this.store.registerAdapter(adapter, adapterOptions);\n  }\n\n  /**\n   * This is called after the application is initialized\n   * You can be sure that\n   * - all plugins are registered\n   * - the store is created, with all storage adapters registered\n   * @protected\n   */\n  protected setup(): Promise<void> | void;\n\n  protected async setup(): Promise<void> {\n    // override me to set up application specific stuff\n  }\n\n  protected async initAssets(): Promise<void> {\n    const opts: Partial<AssetInitOptions> = {\n      texturePreference: { resolution: this.config.resolution! >= 1.5 ? 1 : 0.5 },\n    };\n    if (this.config.manifest) {\n      let manifest = this.config.manifest;\n      if (isPromise(manifest)) {\n        manifest = await manifest;\n      }\n      opts.manifest = manifest;\n    }\n    this.manifest = opts.manifest;\n    await Assets.init(opts);\n  }\n\n  protected async loadDefaultScene(): Promise<void> {\n    return this.scenes.loadDefaultScene();\n  }\n\n  private async _resize() {\n    this.resizer.resize();\n    this._center.set(this.size.width * 0.5, this.size.height * 0.5);\n    this.ticker.addOnce(() => {\n      this.views.forEach((view) => {\n        view.position.set(this._center.x, this._center.y);\n      });\n      this.onResize.emit(this.size);\n    });\n  }\n\n  /**\n   * Called after the application is initialized\n   * Here we add application specific signal listeners, etc\n   * @returns {Promise<void>}\n   * @private\n   */\n  private async _setup(): Promise<void> {\n    // register for PIXI DevTools extension\n    if (isDev) {\n      (globalThis as any).__PIXI_APP__ = this;\n    }\n\n    // connect onResize signal\n    this.webEvents.onResize.connect(this._resize, -1);\n\n    // scene manager\n    this.scenes.view.label = 'SceneManager';\n    this.stage.addChild(this.scenes.view);\n\n    // popup manager\n    this.stage.addChild(this.popups.view);\n\n    // focus manager\n    this.focus.view.label = 'FocusManager';\n    this.stage.addChild(this.focus.view);\n\n    void this._resize();\n    // is touch device\n    return Promise.resolve();\n  }\n}\n","import { Application, IApplication } from '../core/Application';\nimport { SignalConnection, SignalConnections } from '../signals';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { coreFunctionRegistry } from '../core/coreFunctionRegistry';\nimport { ICoreFunctions } from '../core/ICoreFunctions';\nimport { ICoreSignals } from '../core/ICoreSignals';\nimport { coreSignalRegistry } from '../core/coreSignalRegistry';\n\nexport interface IPlugin {\n  id: string;\n\n  app: IApplication;\n\n  initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  postInitialize(_app: IApplication): Promise<void> | void;\n\n  destroy(): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n\n  clearSignalConnections(): void;\n\n  registerCoreFunctions(): void;\n\n  registerCoreSignals(): void;\n}\n\nexport class Plugin<T extends Application = Application> implements IPlugin {\n  // A collection of signal connections.\n  __dill_pixel_method_binding_root: boolean;\n  protected _signalConnections: SignalConnections = new SignalConnections();\n\n  constructor(public id: string = 'Plugin') {\n    bindAllMethods(this);\n    this.__dill_pixel_method_binding_root = true;\n  }\n\n  public get app(): T {\n    return Application.getInstance<T>();\n  }\n\n  public destroy(): void {\n    this._signalConnections.disconnectAll();\n  }\n\n  public initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async initialize(_app: IApplication, _options?: any): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  public postInitialize(_app: IApplication): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async postInitialize(_app: IApplication): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * Add signal connections to the container.\n   * @param args - The signal connections to add.\n   */\n  public addSignalConnection(...args: SignalConnection[]) {\n    for (const connection of args) {\n      this._signalConnections.add(connection);\n    }\n  }\n\n  public clearSignalConnections() {\n    this._signalConnections.disconnectAll();\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreFunctions(): void {\n    const functions = this.getCoreFunctions();\n    functions.forEach((f) => {\n      const fName = f as keyof ICoreFunctions;\n      // @ts-expect-error implicit any\n      coreFunctionRegistry[fName] = this[f];\n    });\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreSignals(): void {\n    const signals = this.getCoreSignals();\n    signals.forEach((s) => {\n      const sName = s as keyof ICoreSignals;\n      // @ts-expect-error implicit any\n      coreSignalRegistry[sName] = this[s];\n    });\n  }\n\n  protected getCoreFunctions(): string[] {\n    return [];\n  }\n\n  protected getCoreSignals(): string[] {\n    return [];\n  }\n}\n","import { Application, Container, Sprite, Graphics, Text, BitmapText, HTMLText, Texture, Point, Rectangle, TextStyle, HTMLTextStyle} from 'pixi.js';\n\nconst PIXI = {\n\tApplication,\n\tContainer,\n\tSprite,\n\tGraphics,\n\tText,\n\tBitmapText,\n\tHTMLText,\n\tTexture,\n\tPoint,\n\tRectangle,\n\tTextStyle,\n\tHTMLTextStyle\n}\n\nexport { PIXI };\n\nexport type { Application as PIXIApplication, Container as PIXIContainer, Sprite as PIXISprite, Graphics as PIXIGraphics, Text as PIXIText, BitmapText as PIXIBitmapText, HTMLText as PIXIHTMLText, Texture as PIXITexture, Point as PIXIPoint, Rectangle as PIXIRectangle, TextStyle as PIXITextStyle, HTMLTextStyle as PIXIHTMLTextStyle,  } from 'pixi.js';","import { Point } from 'pixi.js';\nimport { PointLike, Size, SizeLike, SpriteSheetLike, TextureLike } from './types';\n\ntype PointLikeResult = { x: number; y: number } | Point;\n\nexport function resolvePointLike(\n  position?: PointLike,\n  asPoint?: false,\n  x?: number,\n  y?: number,\n): { x: number; y: number };\nexport function resolvePointLike(position?: PointLike, asPoint?: true, x?: number, y?: number): Point;\nexport function resolvePointLike(\n  position?: PointLike,\n  asPoint: boolean = false,\n  x: number = 0,\n  y: number = 0,\n): PointLikeResult {\n  if (position instanceof Point) {\n    x = position.x;\n    y = position.y;\n  } else if (Array.isArray(position)) {\n    x = position[0];\n    y = position[1] === undefined ? position[0] : position[1];\n  } else if (typeof position === 'object') {\n    // cast as an object\n    const obj = position as { x: number; y: number };\n    x = obj.x || 0;\n    y = obj.y || 0;\n  } else {\n    x = position ?? x;\n    y = position ?? y;\n  }\n\n  return asPoint ? new Point(x, y) : { x, y };\n}\n\nexport function resolveSizeLike(size?: SizeLike): Size {\n  if (size === undefined) {\n    return { width: 0, height: 0 };\n  }\n  if (Array.isArray(size)) {\n    return { width: size[0], height: size[1] === undefined ? size[0] : size[1] };\n  } else if (size instanceof Point) {\n    return { width: size.x, height: size.y };\n  } else if (typeof size === 'object') {\n    // cast as an object\n    const obj = size as { width: number; height: number };\n    return { width: obj.width || 0, height: obj.height || 0 };\n  } else {\n    return { width: size ?? 0, height: size ?? 0 };\n  }\n}\n\nexport function getSheetLikeString(sheet: SpriteSheetLike) {\n  if (Array.isArray(sheet)) {\n    return sheet.join('/');\n  } else {\n    return sheet;\n  }\n}\n\nexport function setObjectName(object: any, texture: TextureLike, sheet: SpriteSheetLike) {\n  if (sheet && texture) {\n    object.name = `${getSheetLikeString(sheet)}/${texture}`;\n  } else if (typeof texture === 'string') {\n    object.name = `${texture}`;\n  }\n  if (typeof texture === 'string') {\n    object.__textureString = texture;\n  }\n  if (Array.isArray(sheet)) {\n    object.__textureSheetArray = sheet;\n  } else if (sheet) {\n    object.__textureSheet = sheet;\n  }\n}\n\ntype DebouncedFunction<T extends (...args: any[]) => any> = (...args: Parameters<T>) => void;\n\n/**\n * Debounce a function\n * @param func - function to debounce\n * @param wait - time in milliseconds\n * @example const debounced = debounce(() => console.log('debounced'), 1000);\n * @example window.addEventListener('resize', debounced);\n */\nexport function debounce<T extends (...args: any[]) => any>(func: T, wait: number): DebouncedFunction<T> {\n  let timeoutId: any;\n  return function (...args: Parameters<T>) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n}\n","import { Bounds, Container, DestroyOptions, Graphics, PointLike } from 'pixi.js';\nimport { Application } from '../../core/Application';\nimport { resolvePointLike } from '../../utils/functions';\nimport { bindAllMethods } from '../../utils/methodBinding';\nimport { IFocusable } from './FocusManagerPlugin';\n\nexport type FocusOutlinerConfig = {\n  color: number;\n  shape: 'rectangle' | 'rounded rectangle';\n  lineWidth?: number;\n  radius?: number;\n};\n\nexport interface IFocusOutliner {\n  position: PointLike;\n  focusBounds: Bounds;\n\n  draw(focusTarget: IFocusable): void;\n\n  clear(): void;\n\n  destroy(args?: DestroyOptions): void;\n\n  setFocusTarget(focusTarget: IFocusable): void;\n\n  clearFocusTarget(): void;\n\n  updatePosition(): void;\n}\n\nexport class FocusOutliner extends Container implements IFocusOutliner {\n  focusBounds: Bounds;\n  focusTarget: IFocusable | null;\n  protected _config: FocusOutlinerConfig;\n  protected _graphics: Graphics;\n\n  constructor(config?: Partial<FocusOutlinerConfig>) {\n    super();\n    bindAllMethods(this);\n    this._config = {\n      color: 0x00ffff,\n      shape: 'rounded rectangle',\n      radius: 8,\n      lineWidth: 2,\n      ...config,\n    };\n    this._graphics = new Graphics();\n    this.addChild(this._graphics);\n  }\n\n  public draw(focusTarget: IFocusable): void {\n    this.clear();\n    this.setFocusTarget(focusTarget);\n    if (!this.focusTarget) {\n      return;\n    }\n    this._graphics.strokeStyle = { width: this._config.lineWidth, color: this._config.color, alpha: 1 };\n    if (this._config.shape === 'rectangle') {\n      this._graphics.rect(0, 0, this.focusBounds.width, this.focusBounds.height);\n    } else {\n      this._graphics.roundRect(0, 0, this.focusBounds.width, this.focusBounds.height, this._config.radius);\n    }\n    this._graphics.stroke();\n  }\n\n  public clear(): void {\n    this.clearFocusTarget();\n  }\n\n  public destroy(options?: DestroyOptions) {\n    this.clear();\n    this._graphics.destroy();\n    super.destroy(options);\n  }\n\n  public setFocusTarget(focusTarget: IFocusable) {\n    if (focusTarget) {\n      this.focusTarget = focusTarget;\n      this.focusBounds = this.focusTarget.getFocusArea().clone();\n      Application.getInstance().ticker.add(this.updatePosition);\n    }\n  }\n\n  public clearFocusTarget() {\n    this.focusTarget = null;\n    Application.getInstance().ticker.remove(this.updatePosition);\n  }\n\n  public updatePosition() {\n    if (!this.focusTarget) {\n      return;\n    }\n    const pos = this.focusTarget.getGlobalPosition();\n    const focusPos = this.focusTarget.getFocusPosition();\n    if (focusPos) {\n      const fp = resolvePointLike(focusPos);\n      pos.x += fp.x;\n      pos.y += fp.y;\n    }\n\n    this.position.set(pos.x, pos.y);\n  }\n}\n","export enum ActionContext {\n  General = 'general',\n  Menu = 'menu',\n  Game = 'game',\n}\n\nexport enum Action {\n  Up = 'up',\n  Down = 'down',\n  Left = 'left',\n  Right = 'right',\n  Action = 'action',\n  Next = 'next',\n  Back = 'back',\n  Pause = 'pause',\n  Unpause = 'unpause',\n  Start = 'start',\n  Menu = 'menu',\n}\n","import type { Application } from '../../core/Application';\nimport { IPlugin, Plugin } from '../../plugins/Plugin';\n\n/**\n * Interface for a storage adapter module.\n */\nexport interface IStorageAdapter extends IPlugin {\n  /**\n   * Saves data under a specified key.\n   * @param _key\n   * @param _data\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   */\n  save(_key: string, _data: any): Promise<void> | void;\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   * @param _key\n   */\n  load<T = any>(_key: string): Promise<T> | T | null;\n}\n\n/**\n * A class representing a storage adapter module.\n * @template T The type of the application that the module belongs to.\n */\nexport class StorageAdapter<T extends Application = Application> extends Plugin<T> implements IStorageAdapter {\n  /**\n   * Creates a new StorageAdapter.\n   * @param {string} id The ID of the adapter. Default is 'StorageAdapter'.\n   */\n  constructor(public readonly id: string = 'StorageAdapter') {\n    super(id);\n  }\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @param {string} _key The key from which to load the data.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   */\n  load<T = any>(_key: string): Promise<T> | T | null;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async load<T = any>(_key: string): Promise<T | null> {\n    return null;\n  }\n\n  /**\n   * Saves data under a specified key.\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   * @param _key\n   * @param _data\n   */\n\n  save(_key: string, _data: any): Promise<void> | void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async save(_key: string, _data: any): Promise<void> {\n    return;\n  }\n}\n","import { IApplication } from '../../core/Application';\nimport { Logger } from '../../utils/console/Logger';\nimport { StorageAdapter } from './StorageAdapter';\n\n/**\n * Interface for the options of the LocalStorageAdapter.\n */\nexport interface ILocalStorageAdapterOptions {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  namespace?: string;\n}\n\n/**\n * A class representing a storage adapter that uses the local storage.\n */\nexport class LocalStorageAdapter extends StorageAdapter {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  public namespace: string = '';\n\n  /**\n   * Gets the prefix to use for the keys in the local storage.\n   * @returns {string} The prefix.\n   */\n  get prefix(): string {\n    return this.namespace ? `${this.namespace}_` : '';\n  }\n\n  /**\n   * Destroys the adapter.\n   */\n  destroy() {}\n\n  /**\n   * Initializes the adapter.\n   * @param {IApplication} _app The application that the adapter belongs to.\n   * @param {Partial<ILocalStorageAdapterOptions>} options The options to initialize the adapter with.\n   */\n  public initialize(_app: IApplication, options?: Partial<ILocalStorageAdapterOptions>): void {\n    Logger.log('LocalStorageAdapter initialized');\n    this.namespace = options?.namespace || '';\n  }\n\n  /**\n   * Saves data under a specified key in the local storage.\n   * @param {string} key The key under which to save the data.\n   * @param {any} data The data to save.\n   * @returns {any} The saved data.\n   */\n  save(key: string, data: any): any {\n    localStorage.setItem(`${this.prefix}${key}`, JSON.stringify(data));\n    return JSON.stringify(data);\n  }\n\n  /**\n   * Loads data from a specified key in the local storage.\n   * @template T The type of the data to load.\n   * @param {string} key The key from which to load the data.\n   * @returns {T} The loaded data.\n   */\n  load<T = any>(key: string): T {\n    const data = localStorage.getItem(`${this.prefix}${key}`);\n    return (data ? JSON.parse(data) : null) as T;\n  }\n\n  /**\n   * Deletes data from a specified key in the local storage.\n   * @param {string} key The key from which to delete the data.\n   */\n  clear(key: string) {\n    localStorage.deleteItem(`${this.prefix}${key}`);\n  }\n}\n","/**\n * Clamp a number\n * @param pValue\n * @param pMin\n * @param pMax\n */\nexport function clamp(pValue: number, pMin: number, pMax: number): number {\n  return Math.max(pMin, Math.min(pMax, pValue));\n}\n\n/**\n * lerp\n * @param pMin\n * @param pMax\n * @param pPerc\n */\nexport function lerp(pMin: number, pMax: number, pPerc: number): number {\n  return pMin + (pMax - pMin) * pPerc;\n}\n","/**\n * Returns the map entry that comes before the entry with the provided key.\n * If the provided key is the first entry in the map or doesn't exist in the map, the function returns undefined.\n * @param {Map<K, V>} map The map to search in.\n * @param {any} currentKey The key of the map entry that comes after the desired entry.\n * @returns {[K, V] | undefined} The map entry that comes before the entry with the provided key, or undefined if such an entry doesn't exist.\n */\nexport function getPreviousMapEntry<K = any, V = any>(map: Map<K, V>, currentKey: any): [K, V] | undefined {\n  let previous: [any, any] | undefined;\n\n  for (const entry of map) {\n    if (entry[0] === currentKey) {\n      return previous;\n    }\n    previous = entry;\n  }\n  return undefined;\n}\n\n/**\n * Returns the last entry in the provided map.\n * If the map is empty, the function returns undefined.\n * @param {Map<K, V>} map The map to get the last entry from.\n * @returns {[K, V] | undefined} The last entry in the map, or undefined if the map is empty.\n */\nexport function getLastMapEntry<K = any, V = any>(map: Map<K, V>): [K, V] | undefined {\n  return Array.from(map.entries()).pop() as [K, V];\n}\n","import { isMobile as PIXIUtilsIsMobile } from 'pixi.js';\n\n/**\n * Checks if the device has a retina display.\n * A device is considered to have a retina display if its device pixel ratio is greater than 1,\n * or if it matches the media query for high resolution displays.\n * @type {boolean}\n */\nexport const isRetina =\n  window.devicePixelRatio > 1 ||\n  (window.matchMedia &&\n    window.matchMedia(\n      '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)',\n    ).matches);\n\n/**\n * Checks if the device is a mobile device.\n * This uses the `isMobile` function from the `@pixi/utils` package.\n * @type {boolean}\n */\nexport const isMobile = PIXIUtilsIsMobile.any;\n","import { Logger } from '../console/Logger';\n\n/**\n * Creates a new Queue with the given promises.\n * @param {...(Promise<any> | (() => Promise<any | void>))[]} promises The promises to add to the queue.\n * @returns {Queue} The created Queue.\n */\nexport function createQueue(...promises: (Promise<any> | (() => Promise<any | void>))[]): Queue {\n  return new Queue(promises);\n}\n\n/**\n * A class representing a queue of promises.\n * @template T The type of the values that the promises in the queue resolve to.\n */\nexport class Queue<T = any | void> {\n  private _promises: (Promise<any> | (() => Promise<T>))[];\n  private _currentIndex: number = 0;\n  private _isPaused: boolean = false;\n  private _isCanceled: boolean = false;\n  private _results: T[];\n\n  /**\n   * Creates a new Queue.\n   * @param {(Promise<any> | (() => Promise<T>))[]} promises The promises to add to the queue.\n   */\n  constructor(promises: (Promise<any> | (() => Promise<T>))[] = []) {\n    this._promises = promises;\n  }\n\n  /**\n   * Gets the results of the promises that have been resolved so far.\n   * @returns {T[]} The results.\n   */\n  public get results(): T[] {\n    return this._results;\n  }\n\n  /**\n   * Adds promises to the queue.\n   * @param {...(Promise<any> | (() => Promise<T>))[]} args The promises to add.\n   */\n  public add(...args: (Promise<any> | (() => Promise<T>))[]) {\n    this._promises.push(...args);\n  }\n\n  /**\n   * Starts the execution of the promises in the queue.\n   */\n  public start(): void {\n    if (this._currentIndex === 0) {\n      // don't start if already started\n      this._results = [];\n      void this._next();\n    }\n  }\n\n  /**\n   * Pauses the execution of the promises in the queue.\n   */\n  public pause(): void {\n    this._isPaused = true;\n  }\n\n  /**\n   * Resumes the execution of the promises in the queue.\n   */\n  public resume(): void {\n    if (this._isPaused) {\n      this._isPaused = false;\n      void this._next();\n    }\n  }\n\n  /**\n   * Cancels the execution of the promises in the queue.\n   */\n  public cancel(): void {\n    this._isCanceled = true;\n    this._promises = [];\n  }\n\n  /**\n   * Executes the next promise in the queue.\n   * @private\n   * @returns {Promise<void>} A promise that resolves when the next promise in the queue has been executed.\n   */\n  private async _next(): Promise<void> {\n    if (this._isPaused || this._isCanceled || this._currentIndex >= this._promises.length) {\n      return;\n    }\n\n    const currentFunction = this._promises[this._currentIndex];\n\n    try {\n      const result = typeof currentFunction === 'function' ? await currentFunction() : await currentFunction;\n      this._results.push(result);\n      this._currentIndex++;\n      void this._next();\n    } catch (error) {\n      Logger.error(\"Queue didn't complete due to an error:\", error, 'Cancelling Queue');\n      this._isCanceled = true;\n    }\n  }\n}\n","/**\n * Plucks the specified keys from an object and returns a new object with only those keys.\n * @template T The type of the original object.\n * @template K The keys to pluck from the original object.\n * @param {T} obj The original object.\n * @param {K[]} keys The keys to pluck from the original object.\n * @returns {Pick<T, K>} A new object with only the plucked keys.\n */\nexport function pluck<T extends object, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((acc, key) => (key in obj ? { ...acc, [key]: obj[key] } : acc), {} as Pick<T, K>);\n}\n\n/**\n * Omits the specified keys from an object and returns a new object without those keys.\n * @template T The type of the original object.\n * @template K The keys to omit from the original object.\n * @param {K[]} keysToOmit The keys to omit from the original object.\n * @param {Partial<T>} obj The original object.\n * @returns {Omit<T, K>} A new object without the omitted keys.\n */\nexport function omitKeys<T extends object, K extends keyof T>(keysToOmit: K[], obj: Partial<T>): Omit<T, K> {\n  return Object.entries(obj)\n    .filter(([key]) => !keysToOmit.includes(key as K))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {} as Omit<T, K>);\n}\n","import { FederatedEvent, PointerEvents } from 'pixi.js';\nimport { Application } from '../core/Application';\nimport { PIXIContainer } from '../pixi';\nimport { IFocusable } from '../plugins/focus/FocusManagerPlugin';\nimport { Signal } from '../signals';\nimport { Constructor, PointLike } from '../utils/types';\n\nexport function Focusable<TBase extends Constructor<PIXIContainer>>(Base: TBase): TBase & Constructor<IFocusable> {\n  return class extends Base implements IFocusable {\n    _accessibleDiv: HTMLElement;\n    isFocused = false;\n    isKeyDown = false;\n    focusEnabled = true;\n    tabIndex = 0;\n    // pixi accessibility options\n    accessible = false;\n    accessibleType: 'button' | 'div' | 'heading' = 'button';\n    accessibleTitle = 'Focusable';\n    accessibleHint = 'Press enter to focus';\n    accessiblePointerEvents: PointerEvents = 'auto';\n    accessibleChildren = true;\n    // signals\n    onFocus = new Signal<(focusable: IFocusable) => void>();\n    onFocusIn = new Signal<(focusable: IFocusable) => void>();\n    onFocusOut = new Signal<(focusable: IFocusable) => void>();\n    onBlur = new Signal<(focusable: IFocusable) => void>();\n\n    private _eventsDisabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this.eventMode = 'static';\n      this.on('mouseover', this._onMouseOver);\n      this.on('mousedown', this._onMouseDown);\n      this.on('click', this._handleClick);\n      this.on('tap', this._handleClick);\n    }\n\n    get app() {\n      return Application.getInstance();\n    }\n\n    public focusIn() {\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerover', { type: 'pointerover' });\n      }\n    }\n\n    public blur() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n    }\n\n    public focusOut() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerout', { type: 'pointerout' });\n      }\n    }\n\n    public click() {}\n\n    public getFocusPosition() {\n      return null;\n    }\n\n    public getFocusArea() {\n      return this.getBounds();\n    }\n\n    public getFocusSize(): PointLike | null {\n      return [this.getFocusArea().width, this.getFocusArea().height];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _onMouseOver(_e: MouseEvent) {\n      this.app.focus.setFocus(this);\n    }\n\n    protected _onMouseDown(e: FederatedEvent) {\n      this._maybeEmit('pointerdown', e);\n    }\n\n    protected _handleClick(e: FederatedEvent) {\n      this._maybeEmit('click', e);\n      this.click();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _handleKeyUp(_e: KeyboardEvent) {}\n\n    private _maybeEmit(type: string, e: FederatedEvent) {\n      if (this._eventsDisabled || e.type) {\n        return;\n      }\n      this._eventsDisabled = true;\n      this.emit(type, { type });\n      this._eventsDisabled = false;\n    }\n  } as unknown as TBase & Constructor<IFocusable>;\n}\n\nFocusable.INITTED = false;\n","import { AllFederatedEventMap, DestroyOptions, FederatedEvent } from 'pixi.js';\nimport { PIXIContainer } from '../pixi';\nimport { Signal } from '../signals';\n\nimport { Constructor } from '../utils/types';\n\n// gets all the event names from the PIXI event map\ntype InteractionEventName = keyof AllFederatedEventMap;\n\ntype InteractionSignal = Signal<(event: FederatedEvent) => void>;\n\nexport interface IInteractive {\n  onInteraction: (eventName: InteractionEventName) => InteractionSignal;\n}\n\nexport function Interactive<TBase extends Constructor<PIXIContainer>>(Base: TBase): TBase & Constructor<IInteractive> {\n  return class extends Base implements IInteractive {\n    private _signals: Map<InteractionEventName, InteractionSignal> = new Map();\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._emitSignal = this._emitSignal.bind(this);\n      this.eventMode = 'static';\n    }\n\n    public onInteraction(eventName: InteractionEventName) {\n      if (!this._signals.has(eventName)) {\n        const signal = new Signal<(event: FederatedEvent) => void>();\n        this._signals.set(eventName, signal);\n        this.on(eventName, this._emitSignal);\n      }\n      return this._signals.get(eventName) as InteractionSignal;\n    }\n\n    public destroy(options: DestroyOptions): void {\n      for (const eventName of this._signals.keys()) {\n        this.off(eventName, this._emitSignal);\n      }\n      this._signals.clear();\n      super.destroy(options);\n    }\n\n    private _emitSignal(event: FederatedEvent) {\n      const signalName = event.type as InteractionEventName;\n      const signal = this._signals.get(signalName);\n\n      if (signal) {\n        signal.emit(event);\n      }\n    }\n  } as unknown as TBase & Constructor<IInteractive>;\n}\n","import { DestroyOptions } from 'pixi.js';\nimport { SignalConnection, SignalConnections } from '../signals';\nimport { Constructor } from '../utils/types';\n\n/**\n * Interface for animated entities.\n */\nexport interface ISignalContainer {\n  signalConnections: SignalConnections;\n\n  destroy(options?: DestroyOptions): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n}\n\nexport function WithSignals<TBase extends Constructor<any>>(Base: TBase): TBase & Constructor<ISignalContainer> {\n  return class extends Base implements ISignalContainer {\n    signalConnections: SignalConnections = new SignalConnections();\n\n    /**\n     * Add signal connections to the container.\n     * @param args - The signal connections to add.\n     */\n    public addSignalConnection(...args: SignalConnection[]) {\n      for (const connection of args) {\n        this.signalConnections.add(connection);\n      }\n    }\n\n    destroy(options?: DestroyOptions): void {\n      this.signalConnections.disconnectAll();\n      super.destroy(options);\n    }\n  } as unknown as TBase & Constructor<ISignalContainer>;\n}\n","import { Cursor, Sprite } from 'pixi.js';\n\nimport { Application } from '../core/Application';\nimport { FactoryContainer } from '../mixins/factory';\nimport { Focusable } from '../mixins/focus';\nimport { Interactive } from '../mixins/interaction';\nimport { WithSignals } from '../mixins/signals';\nimport { Signal } from '../signals';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { SpriteSheetLike, TextureLike } from '../utils/types';\n\nexport type ButtonConfig = {\n  textures: {\n    default: TextureLike;\n    hover?: TextureLike;\n    active?: TextureLike;\n    disabled?: TextureLike;\n  };\n  cursor: Cursor;\n  disabledCursor: Cursor;\n  sheet: SpriteSheetLike;\n  enabled: boolean;\n};\n\nexport const ButtonConfigKeys: (keyof ButtonConfig)[] = ['textures', 'cursor', 'disabledCursor', 'sheet', 'enabled'];\n\n// Create a new class that extends Container and includes the Interactive and Focusable mixins.\nconst _Button = Focusable(Interactive(WithSignals(FactoryContainer())));\n\n/**\n * @class\n * @extends {Container}\n * @implements {IFocusable}\n * @description A class representing a button.\n */\nexport class Button extends _Button {\n  // signals\n  public onDown = new Signal<() => void>();\n  public onUp = new Signal<() => void>();\n  public onUpOutside = new Signal<() => void>();\n  public onOut = new Signal<() => void>();\n  public onOver = new Signal<() => void>();\n  public onClick = new Signal<() => void>();\n  public onEnabled = new Signal<() => void>();\n  public onDisabled = new Signal<() => void>();\n  public onKeyboardEvent = new Signal<(key: string) => void>();\n  // visual\n  public view: Sprite;\n  // whether the button is down\n  public isDown: boolean;\n  public isOver: boolean;\n  // config\n  protected config: ButtonConfig;\n  // enabled state\n  protected _enabled: boolean;\n  // a set of unique callbacks for when the button is down\n  protected _isDownCallbacks: Map<string, () => void> = new Map();\n  private _isDownListenerAdded: boolean = false;\n\n  /**\n   * @constructor\n   * @param {Partial<ButtonConfig>} config - The configuration for the button.\n   */\n  constructor(config: Partial<ButtonConfig>) {\n    super();\n\n    bindAllMethods(this);\n\n    this.config = Object.assign(\n      {\n        textures: { default: '' },\n        sheet: undefined,\n        enabled: true,\n        cursor: 'default',\n        disabledCursor: 'not-allowed',\n      },\n      config,\n    );\n\n    // Create a sprite with the default texture and add it to the container.\n    this.view = this.add.sprite({ asset: this.config.textures.default, sheet: this.config.sheet, anchor: 0.5 });\n\n    this.cursor = this.config.cursor;\n    this.enabled = config.enabled !== false;\n\n    // Set up interaction handlers.\n    // make them high priority so they run before any other interaction handlers\n    this.addSignalConnection(\n      this.onInteraction('pointerover').connect(this.handlePointerOver, -1),\n      this.onInteraction('pointerout').connect(this.handlePointerOut, -1),\n      this.onInteraction('pointerup').connect(this.handlePointerUp, -1),\n      this.onInteraction('click').connect(this.handleClick, -1),\n      this.onInteraction('tap').connect(this.handleClick, -1),\n      this.onInteraction('pointerdown').connect(this.handlePointerDown, -1),\n    );\n  }\n\n  /**\n   * @description Sets the enabled state of the button.\n   * @param {boolean} enabled - Whether the button is enabled.\n   */\n  public set enabled(enabled: boolean) {\n    if (this._enabled === enabled) {\n      return;\n    }\n    this._enabled = enabled;\n    this.cursor = this._enabled ? this.config.cursor : this.config.disabledCursor;\n    this.focusEnabled = enabled;\n    if (this._enabled) {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onEnabled.emit();\n    } else {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.disabled || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDisabled.emit();\n    }\n  }\n\n  get app() {\n    return Application.getInstance();\n  }\n\n  focusOut() {\n    super.focusOut();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  blur() {\n    super.blur();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  public getFocusArea() {\n    return this.view.getBounds().clone();\n  }\n\n  public getFocusPosition() {\n    return [-this.width * 0.5, -this.height * 0.5];\n  }\n\n  addIsDownCallback(callbackId: string, callback: () => void) {\n    this._isDownCallbacks.set(callbackId, callback);\n    this._checkIsDownCallbacks();\n  }\n\n  removeIsDownCallback(callbackId: string) {\n    this._isDownCallbacks.delete(callbackId);\n  }\n\n  /**\n   * @description Handles the pointer over event.\n   * Sets the texture of the button to the hover texture and emits the onOver event.\n   */\n  protected handlePointerOver() {\n    if (!this._enabled) {\n      return;\n    }\n    if (!this.isOver) {\n      this.isOver = true;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({\n      asset: this.config.textures.hover || this.config.textures.default,\n      sheet: this.config.sheet,\n    });\n    this.onOver.emit();\n  }\n\n  /**\n   * @description Handles the pointer out event.\n   * Sets the texture of the button to the default texture and emits the onOut event.\n   */\n  protected handlePointerOut() {\n    this.isOver = false;\n    if (!this._enabled) {\n      return;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onOut.emit();\n  }\n\n  /**\n   * @description Handles the pointer down event.\n   * Sets the isDown property to true and changes the texture of the button.\n   */\n  protected handlePointerDown() {\n    if (!this._enabled && !this.isKeyDown) {\n      return;\n    }\n    if (!this.isDown) {\n      window.removeEventListener('pointerup', this.handlePointerUpOutside);\n      window.addEventListener('pointerup', this.handlePointerUpOutside);\n      this.isDown = true;\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.active || this.config.textures.hover || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDown.emit();\n    }\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   * Removes the keyup event listener and emits the onPress and onUp events.\n   */\n  protected handlePointerUp() {\n    if (!this._enabled || !this.isOver) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onUp.emit();\n  }\n\n  protected handleClick() {\n    this.isDown = false;\n    this.onClick.emit();\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   */\n  protected handlePointerUpOutside() {\n    if (!this._enabled || this.isOver) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.isDown = false;\n    this.isOver = false;\n    this.onUpOutside.emit();\n  }\n\n  private _checkIsDownCallbacks() {\n    // check if there are any callbacks, if there are, add the ticker listener\n    if (!this._isDownListenerAdded && this._isDownCallbacks.size > 0) {\n      this._isDownListenerAdded = true;\n      this.app.ticker.add(this._handleIsDownCallbacks);\n    } else {\n      this.app.ticker.remove(this._handleIsDownCallbacks);\n      this._isDownListenerAdded = false;\n    }\n  }\n\n  private _handleIsDownCallbacks() {\n    if (this.isDown) {\n      this._isDownCallbacks.forEach((callback) => {\n        callback();\n      });\n    }\n  }\n}\n","import {gsap} from 'gsap';\nimport {Signal} from '../signals';\nimport {Constructor} from '../utils/types';\n\n/**\n * Extended GSAP animation configuration interface.\n */\nexport interface GSAPAnimationConfigExtended extends gsap.TweenVars {}\n\n/**\n * Type for GSAP entity.\n */\ntype GSAPEntity = gsap.core.Tween | gsap.core.Timeline;\n\n/**\n * Interface for animated entities.\n */\nexport interface IAnimated {\n  onAnimationStart: Signal<(entity: GSAPEntity) => void>;\n  onAnimationUpdate: Signal<(entity: GSAPEntity) => void>;\n  onAnimationComplete: Signal<(entity: GSAPEntity) => void>;\n\n  animate(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFrom(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFromTo(\n    fromProps: GSAPAnimationConfigExtended,\n    toProps: GSAPAnimationConfigExtended,\n    instance?: any,\n  ): gsap.core.Tween;\n\n  animateSequence(sequences: GSAPAnimationConfigExtended[], instance?: any): gsap.core.Timeline;\n\n  pauseAnimations(): void;\n\n  resumeAnimations(): void;\n\n  clearAnimations(): void;\n\n  reverseAnimation(): void;\n\n  isAnimationPlaying(): boolean;\n\n  //utility\n  shake(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  pulse(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  bob(config?: { duration?: number; intensity?: number }, instance?: any): gsap.core.Tween;\n}\n\n/**\n * Animated mixin function.\n * @param Base - Base class to extend.\n * @returns Class that extends the base class and implements IAnimated.\n */\nexport function Animated<TBase extends Constructor>(Base: TBase): TBase & Constructor<IAnimated> {\n  return class extends Base implements IAnimated {\n    // signals for animation events\n    onAnimationStart = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationUpdate = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationComplete = new Signal<(entity: GSAPEntity) => void>();\n\n    // store active tweens / timelines\n    _activeTweens: gsap.core.Tween[] = [];\n    _activeTimeline?: gsap.core.Timeline;\n\n    /**\n     * Animate method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animate(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.to(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate from method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFrom(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.from(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate sequence method.\n     * @param sequences - Array of animation sequences.\n     * @param instance - Instance to animate.\n     * @returns GSAP Timeline instance.\n     */\n    public animateSequence(sequences: GSAPAnimationConfigExtended[], instance: any = this): gsap.core.Timeline {\n      if (!this._activeTimeline) {\n        this._activeTimeline = gsap.timeline({\n          onStart: () => this._onAnimationStart(this._activeTimeline),\n          onUpdate: () => this._onAnimationUpdate(this._activeTimeline),\n          onComplete: () => {\n            this._onAnimationComplete(this._activeTimeline);\n            this._activeTimeline = undefined;\n          },\n        });\n      }\n\n      sequences.forEach((sequence) => {\n        this._activeTimeline?.to(instance, sequence);\n      });\n\n      return this._activeTimeline;\n    }\n\n    /**\n     * Clear animations method.\n     */\n    public clearAnimations() {\n      this._activeTweens.forEach((tween) => tween.kill());\n      this._activeTweens = [];\n      this._activeTimeline?.clear();\n      this._activeTimeline = undefined;\n    }\n\n    /**\n     * Pause animations method.\n     */\n    public pauseAnimations() {\n      this._activeTweens.forEach((tween) => tween.pause());\n      this._activeTimeline?.pause();\n    }\n\n    /**\n     * Resume animations method.\n     */\n    public resumeAnimations() {\n      this._activeTweens.forEach((tween) => tween.play());\n      this._activeTimeline?.play();\n    }\n\n    /**\n     * Animate from-to method.\n     * @param fromProps - Animation properties for the start state.\n     * @param toProps - Animation properties for the end state.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFromTo(\n      fromProps: GSAPAnimationConfigExtended,\n      toProps: GSAPAnimationConfigExtended,\n      instance: any = this,\n    ) {\n      const tween = gsap.fromTo(\n        instance,\n        {\n          ...fromProps,\n        },\n        {\n          ...toProps,\n        },\n      );\n      tween.eventCallback('onStart', () => {\n        this._onAnimationStart(tween);\n      });\n      tween.eventCallback('onUpdate', () => {\n        this._onAnimationUpdate(tween);\n      });\n      tween.eventCallback('onComplete', () => {\n        this._onAnimationComplete(tween);\n        this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n      });\n\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Reverses animations.\n     */\n    public reverseAnimation(): void {\n      this._activeTweens.forEach((tween) => tween.reverse());\n      this._activeTimeline?.reverse();\n    }\n\n    public isAnimationPlaying(): boolean {\n      return (\n        this._activeTweens?.some((tween) => !tween.paused()) ||\n        (this._activeTimeline && !this._activeTimeline.paused()) ||\n        false\n      );\n    }\n\n    // utility animations\n    /**\n     * Shake animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public shake(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.05, intensity = 12, times = 41 } = config;\n      const obj = { x: instance.x, y: instance.y };\n      const origX = obj.x;\n\n      const repeat = times % 2 === 0 ? times + 1 : times;\n\n      const tween = gsap.to(instance, {\n        x: origX + gsap.utils.random(-Math.max(intensity, 2), Math.max(intensity, 2)),\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Pulse animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public pulse(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 1.2, times = 1 } = config;\n      const repeat = times * 2 - 1;\n      const tween = gsap.to(instance?.scale, {\n        x: intensity,\n        y: intensity,\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Bob animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public bob(\n      config: {\n        duration?: number;\n        intensity?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 10 } = config;\n      const tween = gsap.to(instance, {\n        y: `-=${intensity}`,\n        repeat: -1,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Private method for handling animation start event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationStart(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationStart.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation update event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationUpdate(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationUpdate.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation complete event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationComplete(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationComplete.emit(animationEntity as GSAPEntity);\n    }\n  } as unknown as TBase & Constructor<IAnimated>;\n}\n","import { DestroyOptions, Ticker } from 'pixi.js';\nimport type { IApplication } from '../core/Application';\nimport { Application } from '../core/Application';\nimport { Animated } from '../mixins/animated';\nimport { FactoryContainer } from '../mixins/factory';\nimport { WithSignals } from '../mixins/signals';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { Size } from '../utils/types';\n\n// Create a new class that extends PIXI.Container and includes the Animated and Factory mixins.\nconst _Container = Animated(WithSignals(FactoryContainer()));\n\n/**\n * Interface for the Container class.\n */\nexport interface IContainer {\n  app: IApplication;\n\n  destroy(options?: DestroyOptions): void;\n\n  added(): Promise<void> | void;\n\n  resize(size?: Size): void;\n\n  update(ticker?: Ticker | number): void;\n}\n\n/**\n * Configuration for the Container class.\n */\ntype ContainerConfig = {\n  autoResize: boolean;\n  autoUpdate: boolean;\n  priority: number;\n};\n\n/**\n * The Container class extends the _Container class (which includes the Animated and Factory mixins) and implements the IContainer interface.\n * It represents a container for PIXI.js display objects.\n */\nexport class Container<A extends Application = Application> extends _Container implements IContainer {\n  __dill_pixel_method_binding_root = true;\n\n  /**\n   * The constructor for the Container class.\n   * @param __config - The configuration for the container.\n   */\n  constructor(private __config: ContainerConfig = { autoResize: true, autoUpdate: false, priority: 0 }) {\n    super();\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('removed', this._removed);\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): A {\n    return Application.getInstance() as A;\n  }\n\n  /**\n   * Update the container. This method is meant to be overridden by subclasses.\n   * @param ticker\n   */\n  public update(ticker?: Ticker | number) {\n    void ticker;\n  }\n\n  /**\n   * Resize the container. This method is meant to be overridden by subclasses.\n   * @param size\n   */\n  public resize(size?: Size) {\n    void size;\n  }\n\n  /**\n   * This method is called when the container is added to the stage. It is meant to be overridden by subclasses.\n   */\n  public added() {}\n\n  destroy(options?: DestroyOptions): void {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n    super.destroy(options);\n  }\n\n  public removed() {}\n\n  /**\n   * This method is called when the container is added to the stage. It sets up auto-resizing and auto-updating if enabled.\n   */\n  private _added() {\n    if (this.__config.autoResize) {\n      this.addSignalConnection(this.app.onResize.connect(this.resize, this.__config.priority));\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.add(this.update, this, this.__config.priority);\n    }\n    this.added();\n  }\n\n  private _removed() {\n    if (this.__config.autoResize) {\n      this.app.onResize.disconnect(this.resize);\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n\n    this.removed();\n  }\n}\n","import { DestroyOptions } from 'pixi.js';\nimport { Application } from '../core/Application';\nimport { FactoryContainer } from '../mixins/factory';\nimport { WithSignals } from '../mixins/signals';\nimport { PIXIContainer } from '../pixi';\nimport { Signal } from '../signals';\nimport { resolvePointLike } from '../utils/functions';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { ContainerLike, PointLike } from '../utils/types';\nimport { Logger } from '../utils/console/Logger';\n\nconst _FlexContainer = WithSignals(FactoryContainer());\n\nexport interface FlexContainerConfig {\n  width: number;\n  height: number;\n  bindTo: ContainerLike;\n  bindToAppSize: boolean;\n  gap: number;\n  flexWrap: 'wrap' | 'nowrap';\n  flexDirection: 'row' | 'column';\n  alignItems: 'center' | 'flex-start' | 'flex-end';\n  justifyContent: 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n}\n\nexport const FlexContainerConfigKeys: (keyof FlexContainerConfig)[] = [\n  'width',\n  'height',\n  'bindTo',\n  'bindToAppSize',\n  'gap',\n  'flexWrap',\n  'flexDirection',\n  'alignItems',\n  'justifyContent',\n];\n\nconst defaultConfig = {\n  bindTo: null,\n  width: 0,\n  height: 0,\n  gap: 0,\n  flexWrap: 'nowrap',\n  flexDirection: 'row',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  padding: 0,\n};\n\nexport interface IFlexContainer {\n  onLayoutComplete: Signal<() => void>;\n  debug: boolean;\n  config: FlexContainerConfig;\n\n  removeChildren<U extends PIXIContainer>(): U[];\n\n  removeChildAt<U extends PIXIContainer>(index: number): U;\n\n  addChildAt<U extends PIXIContainer>(child: U, index: number): U;\n\n  setChildIndex<U extends PIXIContainer>(child: U, index: number): void;\n\n  getChildIndex<U extends PIXIContainer>(child: U): number;\n\n  getChildAt<U extends PIXIContainer>(index: number): U;\n\n  setFlexChildren(): void;\n\n  cleanup(): void;\n\n  handleChildAdded(child: any): void;\n\n  deleteChild(child: PIXIContainer): boolean;\n\n  layout(): void;\n\n  added(): void;\n}\n\nexport type FlexWrap = 'wrap' | 'nowrap';\nexport type FlexDirection = 'row' | 'column';\nexport type AlignItems = 'center' | 'flex-start' | 'flex-end';\nexport type JustifyContent = 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n\nexport class FlexContainer<T extends Application = Application> extends _FlexContainer {\n  public onLayoutComplete: Signal<() => void> = new Signal<() => void>();\n  public debug: boolean = false;\n  public config: FlexContainerConfig;\n  protected paddingLeft: number = 0;\n  protected paddingRight: number = 0;\n  protected paddingTop: number = 0;\n  protected paddingBottom: number = 0;\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  private _reparentAddedChild: boolean = true;\n\n  constructor(config: Partial<FlexContainerConfig> = {}) {\n    super();\n\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = Object.assign({ ...defaultConfig }, config);\n\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('childAdded', this.handleChildAdded);\n    this.on('childRemoved', this.handleChildRemoved);\n\n    this.layout();\n  }\n\n  protected _flexChildren: PIXIContainer[] = [];\n\n  get flexChildren() {\n    return this._flexChildren;\n  }\n\n  get gap(): number {\n    return this.config.gap!;\n  }\n\n  set gap(value: number) {\n    this.config.gap = value;\n    this.layout();\n  }\n\n  get flexWrap(): FlexWrap {\n    return this.config.flexWrap!;\n  }\n\n  set flexWrap(value: FlexWrap) {\n    this.config.flexWrap = value;\n    this.layout();\n  }\n\n  get flexDirection(): FlexDirection {\n    return this.config.flexDirection!;\n  }\n\n  set flexDirection(value: FlexDirection) {\n    this.config.flexDirection = value;\n    this.layout();\n  }\n\n  get alignItems(): AlignItems {\n    return this.config.alignItems!;\n  }\n\n  set alignItems(value: AlignItems) {\n    this.config.alignItems = value;\n    this.layout();\n  }\n\n  get justifyContent(): JustifyContent {\n    return this.config.justifyContent!;\n  }\n\n  set justifyContent(value: JustifyContent) {\n    this.config.justifyContent = value;\n    this.layout();\n  }\n\n  get containerHeight(): number {\n    return this.config.height;\n  }\n\n  set containerHeight(value: number) {\n    this.config.height = value;\n    this.layout();\n  }\n\n  get containerWidth(): number {\n    return this.config.width;\n  }\n\n  set containerWidth(value: number) {\n    this.config.width = value;\n    this.layout();\n  }\n\n  get size(): { width: number; height: number } {\n    return { width: this.config.width, height: this.config.height };\n  }\n\n  set size(size: PointLike) {\n    const { x, y } = resolvePointLike(size);\n    this.config.width = x;\n    this.config.height = y;\n\n    this.layout();\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = <U extends PIXIContainer>() => {\n    const children = this.flexChildren;\n    this.removeChild(...children);\n    return children as U[];\n  };\n\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this.removeChild(this.flexChildren[index]) as U;\n  };\n\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this.add.existing(child);\n    this.setChildIndex(newChild, index);\n    return newChild;\n  };\n\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    const actualChild = this._childMap.get(child as PIXIContainer);\n    if (actualChild) {\n      super.setChildIndex(actualChild, index);\n      this.setFlexChildren();\n      this.layout();\n    }\n  };\n\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   * @param {DisplayObject} child\n   * @param {number} index\n   * @returns {U}\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    if (this._childMap.has(child as PIXIContainer)) {\n      return super.getChildIndex(child.parent);\n    }\n    return super.getChildIndex(child);\n  };\n\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return super.getChildAt(index)?.getChildAt(0) as U;\n  };\n\n  destroy(_options?: DestroyOptions | boolean) {\n    this.off('childAdded', this.handleChildAdded);\n    this.off('childRemoved', this.handleChildRemoved);\n\n    super.destroy(_options);\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   * @param children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child);\n        if (actualChild) {\n          return super.removeChild(actualChild);\n        }\n        return;\n      });\n    } else {\n      return super.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  /**\n   * Public method to manually trigger a layout\n   */\n  public layout() {\n    this.app.ticker.addOnce(this._layout, this);\n  }\n\n  resize() {\n    this.layout();\n  }\n\n  update() {}\n\n  added() {}\n\n  /**\n   * Ensures we delete the child from the map when it's removed\n   * @protected\n   */\n  protected handleChildRemoved(child: PIXIContainer) {\n    if (this._reparentAddedChild) {\n      if (!this.deleteChild(child)) {\n        child = (child as PIXIContainer).getChildAt(0);\n        this.deleteChild(child);\n      }\n    }\n  }\n\n  /**\n   * Deletes a child from the map\n   * @param {PIXIContainer} child\n   * @returns {boolean}\n   * @protected\n   */\n  protected deleteChild(child: PIXIContainer): boolean {\n    const isInMap = this._childMap.has(child as PIXIContainer);\n    if (isInMap) {\n      // disconnect signal\n      if (child instanceof FlexContainer) {\n        try {\n          child.onLayoutComplete.disconnect(this.layout);\n        } catch (e) {\n          Logger.warn(`FlexContainer:: Error disconnecting signal from removed child`);\n          console.warn(e);\n        }\n      }\n      this._childMap.delete(child as PIXIContainer);\n      this.setFlexChildren();\n      this.layout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sorts the children in the container\n   * Needed because we need to ensure re-parented children are sorted by their actual index in the container\n   * @protected\n   */\n  protected setFlexChildren() {\n    this._flexChildren = Array.from(this._childMap.keys());\n    // order by the actual index in the container\n    this._flexChildren.sort((a, b) => this.getChildIndex(a) - this.getChildIndex(b));\n    this.cleanup();\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.flexChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (!(child as PIXIContainer)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  /**\n   * Re-parent a child to account for e.g. sprite that are added with anchors\n   * @param child\n   * @protected\n   */\n  protected handleChildAdded(child: any) {\n    // avoid maximum call stack error b/c we're about to add a container\n    if (!this._reparentAddedChild) return;\n    this._reparentAddedChild = false;\n    // add an inner container so we can account for e.g. sprite that are added with anchors\n    // re-parent the added child to the inner container\n    const container = this.add.container();\n    container.add.existing(child);\n    // figure out the bounds of the inner container\n    // then, offset its pivot so that it's top-left corner is always at 0,0\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n\n    if (child instanceof FlexContainer) {\n      this.addSignalConnection(child.onLayoutComplete.connect(this.layout));\n    }\n\n    this._childMap.set(child, container);\n    this.setFlexChildren();\n    this._reparentAddedChild = true;\n    this.app.render();\n    this.layout();\n  }\n\n  /**\n   * Lay out the children according to the settings\n   * Tries to follow the CSS Flexbox model as closely as possible\n   * @private\n   */\n  private _layout() {\n    if (this.config.bindTo) {\n      this.config.width = this.config.bindTo?.width ?? 0;\n      this.config.height = this.config.bindTo?.height ?? 0;\n    }\n\n    if (this.config.bindToAppSize) {\n      this.config.width = this.app.size.width;\n      this.config.height = this.app.size.height;\n    }\n\n    const canHaveEndlessWidthOrHeight = ['flex-start'];\n\n    let { width, height } = this.config;\n    const { gap, flexDirection, flexWrap, alignItems, justifyContent } = this.config;\n\n    if (\n      this.config.flexDirection === 'row' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      width = Infinity;\n    } else if (\n      this.config.flexDirection === 'column' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      height = Infinity;\n    }\n\n    let layoutProps: { x: number; y: number }[] = [];\n\n    let x = 0;\n    let y = 0;\n    let rowHeight = 0;\n    let columnWidth = 0;\n    let nextRowY = 0; // y-coordinate of the next row\n    let nextColumnX = 0; // x-coordinate of the next column\n    const newLayoutProps: { x: number; y: number }[] = [];\n    const items = this.children.filter(Boolean);\n    let lineItems: { index: number; width: number; height: number }[] = [];\n    let lineStart = 0;\n\n    const shouldWrap = (childRef: PIXIContainer, x: number, y: number) =>\n      (flexDirection === 'row' && x + childRef.width + gap! > width!) ||\n      (flexDirection === 'column' && y + childRef.height + gap! > height!);\n\n    const handleWrap = () => {\n      if (flexDirection === 'row') {\n        nextRowY += rowHeight + gap!;\n      } else {\n        nextColumnX += columnWidth + gap!;\n      }\n      x = 0;\n      y = 0;\n      rowHeight = 0;\n      columnWidth = 0;\n    };\n\n    const updateLayoutVariables = (childRef: PIXIContainer) => {\n      if (flexDirection === 'row') {\n        x += childRef.width + gap!;\n        rowHeight = Math.max(rowHeight, childRef.height);\n      } else {\n        y += childRef.height + gap!;\n        columnWidth = Math.max(columnWidth, childRef.width);\n      }\n    };\n\n    const getNextX = (currentX: number) => (flexDirection === 'row' ? currentX : nextColumnX);\n    const getNextY = (currentY: number) => (flexDirection === 'column' ? currentY : nextRowY);\n\n    const handleJustification = (\n      lineItems: { index: number; width: number; height: number }[],\n      lineStart: number,\n      lineEnd: number,\n      direction: 'row' | 'column',\n    ) => {\n      const extraSpace = (direction === 'row' ? width! : height!) - (lineEnd - lineStart);\n      lineItems.forEach(({ index }, i) => {\n        let offset = 0;\n        switch (justifyContent) {\n          case 'flex-start':\n            break; // Do nothing\n          case 'flex-end':\n            offset = extraSpace;\n            break;\n          case 'center':\n            offset = extraSpace / 2;\n            break;\n          case 'space-between':\n            offset = lineItems.length > 1 ? i * (extraSpace / (lineItems.length - 1)) : 0;\n            break;\n          case 'space-around':\n            offset = (extraSpace / lineItems.length) * i + extraSpace / (2 * lineItems.length);\n            break;\n          case 'space-evenly':\n            offset = (extraSpace / (lineItems.length + 1)) * (i + 1);\n            break;\n        }\n        if (direction === 'row') {\n          newLayoutProps[index].x += offset;\n        } else {\n          newLayoutProps[index].y += offset;\n        }\n      });\n    };\n\n    const handleAlignment = (newLayoutProps: { x: number; y: number }[], items: (PIXIContainer | null)[]) => {\n      newLayoutProps.forEach((props, index) => {\n        const childRef = items[index] as PIXIContainer;\n        if (!childRef) return;\n\n        if (flexDirection === 'row') {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.y += rowHeight - childRef.height;\n              break;\n            case 'center':\n              props.y += (rowHeight - childRef.height) / 2;\n              break;\n          }\n        } else {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.x = width ? width - childRef.width : -childRef.width;\n              break;\n            case 'center':\n              props.x += (width - childRef.width) / 2;\n              break;\n          }\n        }\n      });\n    };\n\n    items.forEach((childRef, index) => {\n      if (!childRef) return;\n\n      const item = childRef as PIXIContainer;\n\n      // Check for wrapping\n      if (flexWrap === 'wrap' && shouldWrap(item, x, y)) {\n        handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n        handleWrap();\n        lineItems = [];\n        lineStart = x;\n      }\n\n      lineItems.push({ index, width: item.width, height: item.height });\n\n      // Position child\n      newLayoutProps[index] = { x: getNextX(x), y: getNextY(y) };\n\n      // Update layout variables\n      updateLayoutVariables(item);\n    });\n\n    // Justify the last line\n    handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n    handleAlignment(newLayoutProps, items);\n\n    layoutProps = newLayoutProps;\n\n    items.forEach((childRef, index) => {\n      const item = childRef as PIXIContainer;\n      const { x, y } = layoutProps[index] || { x: 0, y: 0 };\n      item.position.set(x, y);\n    });\n\n    // handle alignment within container bounds\n    const totalHeight = this.children.reduce(\n      (acc, child) => Math.max(acc, child.y + (child as PIXIContainer).height),\n      0,\n    );\n    this.children.forEach((child) => {\n      if (this.config.flexDirection === 'row') {\n        switch (this.config.alignItems) {\n          case 'center':\n            child.y -= (totalHeight - height) * 0.5;\n            break;\n          case 'flex-end':\n            child.y += height - totalHeight;\n            break;\n        }\n      }\n    });\n    // force re-render\n\n    this.onLayoutComplete.emit();\n  }\n\n  private _added() {\n    this.addSignalConnection(this.app.onResize.connect(this.layout, 0));\n    this.added();\n  }\n}\n","import { FactoryContainer } from '../mixins/factory';\nimport { SpineProps } from '../mixins/factory/props';\nimport { WithSignals } from '../mixins/signals';\nimport type { Spine } from '../plugins/spine/pixi-spine';\n\nconst _SpineAnimation = WithSignals(FactoryContainer());\n\nexport interface ISpineAnimation extends InstanceType<typeof _SpineAnimation> {\n  spine: Spine;\n  animationNames: string[];\n\n  setAnimation(name: string, loop?: boolean, tracklndex?: number): void;\n\n  getCurrentAnimation(tracklndex?: number): string;\n}\n\nexport class SpineAnimation extends _SpineAnimation {\n  spine: Spine;\n\n  public constructor(props?: Partial<SpineProps>) {\n    super();\n    let data = props?.data;\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      if (data.slice(-5) !== '.json') {\n        data = { skeleton: data + '.json', atlas: data + '.atlas' };\n      }\n    }\n    this.spine = (window as any).Spine.from(data);\n    this.add.existing(this.spine);\n    if (props) {\n      if (props.autoUpdate !== undefined) this.spine.autoUpdate = props.autoUpdate;\n      if (props.animationName) this.setAnimation(props.animationName, props.loop, props.trackIndex ?? 0);\n    }\n\n    // this.spine.position.set(-this.spine.width * 0.5, -this.spine.height * 0.5);\n  }\n\n  get animationNames() {\n    return this.spine.state.data.skeletonData.animations.map((a) => a.name);\n  }\n\n  getCurrentAnimation(trackIndex: number = 0): string {\n    return this.spine.state.getCurrent(trackIndex)?.animation?.name || '';\n  }\n\n  setAnimation(name: string, loop = false, tracklndex: number = 0) {\n    this.spine.state.setAnimation(tracklndex, name, loop);\n  }\n}\n","import { Padding, PointLike } from './types';\n\nexport function resolvePadding(paddingNum: number, size: number) {\n  // check of the paddingNum is a decimal between 0 and 1\n  // if it is, return a number that is the percentage of the size\n  if (paddingNum >= 0 && paddingNum <= 1) {\n    return paddingNum * size;\n  }\n  return paddingNum;\n}\n\nexport function ensurePadding(padding: Partial<Padding> | PointLike): Padding {\n  if (Array.isArray(padding)) {\n    return {\n      top: padding[0],\n      right: padding?.[1] ?? padding[0],\n      bottom: padding?.[2] ?? padding[0],\n      left: padding?.[3] ?? padding?.[1] ?? padding[0] ?? 0,\n    };\n  }\n  if (typeof padding === 'number') {\n    return { top: padding, right: padding, bottom: padding, left: padding };\n  } else if (typeof padding === 'object') {\n    const paddingAsPointLike = padding as { x?: number; y?: number };\n    if (paddingAsPointLike.x !== undefined && paddingAsPointLike.y !== undefined) {\n      return {\n        top: paddingAsPointLike.y,\n        right: paddingAsPointLike.x,\n        bottom: paddingAsPointLike.y,\n        left: paddingAsPointLike.x,\n      };\n    } else {\n      return {\n        top: (padding as Padding).top ?? 0,\n        right: (padding as Padding).right ?? 0,\n        bottom: (padding as Padding).bottom ?? 0,\n        left: (padding as Padding).left ?? 0,\n      };\n    }\n  } else {\n    return { top: 0, right: 0, bottom: 0, left: 0 };\n  }\n}\n","import { Bounds, Container as PIXIContainer, Graphics, Rectangle } from 'pixi.js';\nimport { Application } from '../core/Application';\nimport { FactoryContainer } from '../mixins/factory';\nimport { WithSignals } from '../mixins/signals';\nimport { Logger } from '../utils/console/Logger';\nimport { resolveSizeLike } from '../utils/functions';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { ensurePadding, resolvePadding } from '../utils/padding';\nimport { Padding, PointLike, Size, SizeLike } from '../utils/types';\nimport { Container } from './Container';\nimport { FlexContainer } from './FlexContainer';\n\nexport type UICanvasEdge =\n  | 'top right'\n  | 'top left'\n  | 'top center'\n  | 'top'\n  | 'bottom right'\n  | 'bottom left'\n  | 'bottom center'\n  | 'bottom'\n  | 'left top'\n  | 'left bottom'\n  | 'left center'\n  | 'left'\n  | 'right top'\n  | 'right bottom'\n  | 'right center'\n  | 'right'\n  | 'center';\n\nexport interface UICanvasChildSettings {\n  align: UICanvasEdge;\n  padding: Padding;\n}\n\nexport interface UICanvasChildProps {\n  align: UICanvasEdge;\n  padding: Partial<Padding> | PointLike;\n}\n\nexport type UICanvasConfig = {\n  debug: boolean;\n  padding: Padding;\n  size: Size;\n  useAppSize: boolean;\n};\n\nexport const UICanvasConfigKeys: (keyof UICanvasConfig)[] = ['debug', 'padding', 'size', 'useAppSize'];\n\nexport type UICanvasProps = {\n  debug: boolean;\n  padding: Partial<Padding> | PointLike;\n  size?: SizeLike;\n  useAppSize?: boolean;\n};\n\nconst _UICanvas = WithSignals(FactoryContainer());\n\nexport class UICanvas<T extends Application = Application> extends _UICanvas {\n  public config: UICanvasConfig;\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = (beginIndex?: number, endIndex?: number) => {\n    return this._inner.removeChildren(beginIndex, endIndex);\n  };\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this._inner.removeChildAt(index) as U;\n  };\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this._inner.add.existing(child);\n    this._inner.setChildIndex(newChild, index);\n    return newChild;\n  };\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    this._inner.setChildIndex(child, index);\n    this.layout();\n  };\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    return this._inner.getChildIndex(child);\n  };\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return this._inner.getChildAt(index)?.getChildAt(0) as U;\n  };\n  protected _bounds: Bounds;\n  protected _outerBounds: Rectangle;\n  protected _displayBounds: Rectangle;\n  protected settingsMap = new Map<PIXIContainer, UICanvasChildSettings>();\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  protected _canvasChildren: PIXIContainer[] = [];\n  protected _debugGraphics: Graphics;\n  protected _inner: Container;\n  private _reparentAddedChild: boolean = true;\n  private _disableAddChildError: boolean = false;\n\n  constructor(config: Partial<UICanvasProps>) {\n    super();\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = {\n      debug: config.debug === true,\n      padding: ensurePadding(config?.padding ?? 0),\n      size: config.size !== undefined ? resolveSizeLike(config.size) : { width: 0, height: 0 },\n      useAppSize: config.useAppSize === true,\n    };\n    this._disableAddChildError = true;\n    this._inner = this.add.container({ x: this.config.padding.left, y: this.config.padding.top });\n    this._disableAddChildError = false;\n\n    this.addSignalConnection(this.app.onResize.connect(this.resize));\n\n    this.on('childRemoved', this._childRemoved);\n    this.once('added', this._added);\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  public get canvasChildren(): PIXIContainer[] {\n    return this._canvasChildren;\n  }\n\n  get bounds(): Bounds {\n    if (!this._bounds) {\n      this._bounds = this.getBounds();\n    }\n    return this._bounds;\n  }\n\n  set size(value: SizeLike) {\n    this.config.useAppSize = false;\n    this.config.size = value === undefined ? { width: 0, height: 0 } : resolveSizeLike(value);\n    this.resize();\n  }\n\n  set padding(value: Partial<Padding> | PointLike) {\n    this.config.padding = ensurePadding(value);\n    this._inner.position.set(this.config.padding.left, this.config.padding.top);\n    this.resize();\n  }\n\n  public addChild<U extends PIXIContainer[]>(...children: PIXIContainer[]): U[0] {\n    if (this._disableAddChildError) {\n      return super.addChild(...children) as U[0];\n    }\n    Logger.warn(\n      `UICanvas:: You probably shouldn't add children directly to UICanvas. Use .addElement(child, settings) instead, so you can pass alignment settings.`,\n      children,\n      `will be added using the default 'top left' alignment'.`,\n    );\n    return this._inner.addChild(...children) as U[0];\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child as PIXIContainer) as PIXIContainer;\n        if (actualChild) {\n          return this._inner.removeChild(actualChild);\n        }\n        return undefined;\n      });\n    } else {\n      return this._inner.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  public resize() {\n    const _size = this.config.useAppSize ? this.app.size : this.config.size;\n\n    this._displayBounds = this.__calculateBounds(_size);\n    this._outerBounds = this.__calculateOuterBounds(_size);\n\n    this.layout();\n\n    if (this.config.useAppSize) {\n      this.position.set(-_size.width * 0.5, -_size.height * 0.5);\n    }\n\n    if (this.config.debug) {\n      this.app.ticker.addOnce(this.drawDebug);\n    }\n  }\n\n  public layout() {\n    this._inner.children.forEach((child) => {\n      const childObj = child as PIXIContainer;\n      const settings = this.settingsMap.get(childObj);\n      if (settings) {\n        this.applySettings(childObj, settings);\n      }\n    });\n  }\n\n  public addElement<U extends PIXIContainer = PIXIContainer>(\n    child: PIXIContainer,\n    settings?: Partial<UICanvasChildProps>,\n  ): U {\n    const container = this._inner.add.container();\n    container.addChild(child);\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n    if ((child as any) instanceof FlexContainer) {\n      this.addSignalConnection((child as FlexContainer).onLayoutComplete.connect(this.layout));\n    }\n\n    this.settingsMap.set(container, {\n      align: settings?.align ?? 'top left',\n      padding: settings?.padding ? ensurePadding(settings.padding) : { top: 0, left: 0, bottom: 0, right: 0 },\n    });\n\n    this._childMap.set(child, container);\n    this._canvasChildren = Array.from(this._childMap.keys());\n\n    this.resize();\n    return child as U;\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.canvasChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (this.config.debug && child === this._debugGraphics) return;\n      if (!(child as PIXIContainer)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  private __calculateBounds(_size: Size): Rectangle {\n    return new Rectangle(\n      0,\n      0,\n      _size.width - this.config.padding.left - this.config.padding.right,\n      _size.height - this.config.padding.top - this.config.padding.bottom,\n    );\n  }\n\n  private __calculateOuterBounds(_size: Size): Rectangle {\n    return new Rectangle(0, 0, _size.width, _size.height);\n  }\n\n  private _childRemoved(child: any) {\n    this.settingsMap.delete(child);\n    this._childMap.delete(child as PIXIContainer);\n    this._canvasChildren = Array.from(this._childMap.keys());\n  }\n\n  private _added() {\n    this.layout();\n  }\n\n  private applySettings(child: PIXIContainer, settings: UICanvasChildSettings) {\n    if (!settings) return;\n    const displayWidth = this._displayBounds.width;\n    const displayHeight = this._displayBounds.height;\n\n    const firstChild = (child as PIXIContainer).getChildAt(0);\n\n    const childWidth = firstChild instanceof FlexContainer ? firstChild.containerWidth || child.width : child.width;\n    const childHeight = firstChild instanceof FlexContainer ? firstChild.containerHeight || child.height : child.height;\n\n    switch (settings.align) {\n      case 'top right':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'top left':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'top center':\n      case 'top':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = 0;\n        break;\n      case 'bottom right':\n        child.x = displayWidth - childWidth;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom left':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom center':\n      case 'bottom':\n        child.x = (displayWidth - child.width) / 2;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left top':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'left bottom':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left center':\n      case 'left':\n        child.x = 0;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'right top':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'right bottom':\n        child.x = displayWidth;\n        child.y = displayHeight;\n        break;\n      case 'right center':\n      case 'right':\n        child.x = displayWidth - childWidth;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'center':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n    }\n    child.x +=\n      resolvePadding(settings.padding.left, displayWidth) - resolvePadding(settings.padding.right, displayWidth);\n\n    child.y +=\n      resolvePadding(settings.padding.top, displayHeight) - resolvePadding(settings.padding.bottom, displayHeight);\n  }\n\n  private drawDebug() {\n    if (!this._debugGraphics) {\n      this._disableAddChildError = true;\n      this._debugGraphics = this._inner.add.graphics();\n      this._disableAddChildError = false;\n    }\n    this._debugGraphics\n      .clear()\n      .rect(0, 0, this._displayBounds.width, this._displayBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .rect(-this.config.padding.left, -this.config.padding.top, this._outerBounds.width, this._outerBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .moveTo(this._displayBounds.width / 2, this._displayBounds.height / 2 - 10)\n      .lineTo(this._displayBounds.width / 2, this._displayBounds.height / 2 + 10)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .moveTo(this._displayBounds.width / 2 - 10, this._displayBounds.height / 2)\n      .lineTo(this._displayBounds.width / 2 + 10, this._displayBounds.height / 2)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      });\n  }\n}\n","import { TextStyleOptions } from 'pixi.js';\nimport { ButtonConfig } from '../../display/Button';\nimport { FlexContainerConfig } from '../../display/FlexContainer';\nimport { UICanvasProps } from '../../display/UICanvas';\nimport { PointLike, SpriteSheetLike, TextureLike, WithRequiredProps } from '../../utils/types';\n\nexport interface AbstractProps {\n  [key: string]: any;\n}\n\nexport interface TextureProps {\n  asset: TextureLike;\n  sheet: SpriteSheetLike;\n}\n\nexport interface PositionProps {\n  x: number;\n  y: number;\n  position: PointLike;\n}\n\nexport interface ScaleProps {\n  scaleX: number;\n  scaleY: number;\n  scale: PointLike;\n}\n\nexport interface PivotProps {\n  pivot: PointLike;\n}\n\nexport interface VisibilityProps {\n  alpha: number;\n  visible: boolean;\n}\n\nexport interface ExistingProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport interface GraphicsProps extends AbstractProps, PositionProps, ScaleProps, PivotProps, VisibilityProps {}\n\nexport interface SpriteProps extends AbstractProps, TextureProps, ScaleProps, PositionProps, VisibilityProps {\n  anchor: PointLike;\n}\n\nexport interface TextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {\n  text: string;\n  anchor: PointLike;\n  resolution: number;\n  roundPixels: boolean;\n  style: Partial<TextStyleOptions>;\n}\n\nexport interface OmittedTextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport const TextPropsKeys: (keyof TextProps)[] = ['text', 'anchor', 'resolution', 'roundPixels', 'style'];\n\nexport interface ContainerProps extends AbstractProps, PositionProps, ScaleProps, PivotProps, VisibilityProps {}\n\nexport interface FlexContainerProps extends ContainerProps, FlexContainerConfig {}\n\nexport interface UICanvasFactoryProps extends ContainerProps, UICanvasProps {}\n\n// spine\ntype SpineData = {\n  skeleton: string;\n  atlas: string;\n};\n\nexport interface SpineProps extends AbstractProps, ScaleProps, PositionProps, VisibilityProps {\n  data: string | SpineData;\n  autoUpdate: boolean;\n  animationName: string;\n  trackIndex: number;\n  loop: boolean;\n}\n\ninterface _ButtonProps extends AbstractProps, ScaleProps, PositionProps, PivotProps, VisibilityProps, ButtonConfig {}\n\nexport type ButtonProps = WithRequiredProps<_ButtonProps, 'textures'>;\n","import { Assets, Sprite, Spritesheet, Texture } from 'pixi.js';\nimport { Logger } from '../../utils/console/Logger';\nimport { resolvePointLike } from '../../utils/functions';\nimport { PointLike } from '../../utils/types';\n\nimport { PositionProps, ScaleProps, TextureProps } from './props';\n\nexport function resolveUnknownKeys(props: any, entity: any) {\n  for (const key in props) {\n    try {\n      (entity as any)[key] = props[key];\n    } catch (e) {\n      Logger.error(`Error setting property ${key}`, e);\n    }\n  }\n}\n\nexport function resolveTexture(props?: Partial<TextureProps>): Texture {\n  let texture: Texture | undefined;\n  const asset = props?.asset;\n  const assetAsString = asset as string;\n  const sheet = props?.sheet;\n  if (asset instanceof Texture) {\n    texture = asset;\n  } else if (!sheet || sheet?.length === 0) {\n    if (Assets.cache.has(assetAsString)) {\n      texture = Assets.get(assetAsString)!;\n    } else if (Assets.get(assetAsString)) {\n      texture = Assets.get(assetAsString).texture!;\n    } else {\n      throw new Error('Asset \"' + asset + '\" not loaded into Pixi cache');\n    }\n  } else {\n    if (!Assets.get(sheet)) {\n      throw new Error('Spritesheet \"' + sheet + '\" not loaded into Pixi cache');\n    } else {\n      const spriteSheet: Spritesheet = Assets.get(sheet) as Spritesheet;\n      const textures = spriteSheet.textures;\n      if (textures !== undefined) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (textures.hasOwnProperty(assetAsString)) {\n          texture = textures[assetAsString];\n        } else if (spriteSheet.linkedSheets !== undefined && spriteSheet.linkedSheets.length > 0) {\n          for (const linkedSheet of spriteSheet.linkedSheets) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (linkedSheet.textures !== undefined && linkedSheet.textures.hasOwnProperty(assetAsString)) {\n              texture = linkedSheet.textures[assetAsString];\n              break;\n            }\n          }\n          if (texture === undefined) {\n            throw new Error(\n              'Asset \"' + asset + '\" not found inside spritesheet \"' + asset + \"' or any of its linked sheets\",\n            );\n          }\n        } else {\n          throw new Error('Asset \"' + asset + '\" not found inside spritesheet \"' + sheet + \"'\");\n        }\n      } else {\n        throw new Error('Spritesheet \"' + sheet + '\" loaded but textures arent?!');\n      }\n    }\n  }\n  return texture || new Sprite().texture;\n}\n\nexport function resolvePosition(props: Partial<PositionProps>, entity: any) {\n  const pos = resolvePointLike(props.position, false, props.x, props.y);\n  entity.x = pos.x;\n  entity.y = pos.y;\n}\n\nexport function resolveScale(props: Partial<ScaleProps>, entity: any) {\n  if (!props) {\n    return;\n  }\n  if (props.scale === undefined) {\n    if (props.scaleX === undefined && props.scaleY === undefined) {\n      return;\n    }\n    if (props.scaleX === undefined) {\n      props.scaleX = 1;\n    }\n    if (props.scaleY === undefined) {\n      props.scaleY = 1;\n    }\n  }\n  const scale = resolvePointLike(props.scale, false, props.scaleX, props.scaleY);\n  entity.scale.set(scale.x, scale.y);\n}\n\nexport function resolveAnchor(anchor: PointLike | undefined, entity: any) {\n  if (anchor !== undefined) {\n    const anchorPoint = resolvePointLike(anchor);\n    entity.anchor.set(anchorPoint.x, anchorPoint.y);\n  }\n}\n\nexport function resolvePivot(pivot: PointLike | undefined, entity: any) {\n  if (pivot !== undefined) {\n    const pivotPoint = resolvePointLike(pivot);\n    entity.pivot.set(pivotPoint.x, pivotPoint.y);\n  }\n}\n","import { BitmapText, Container as PIXIContainer, Graphics, Sprite, Text } from 'pixi.js';\nimport { Button, ButtonConfig, ButtonConfigKeys } from '../../display/Button';\nimport { Container } from '../../display/Container';\nimport { FlexContainer, FlexContainerConfig, FlexContainerConfigKeys } from '../../display/FlexContainer';\nimport { ISpineAnimation, SpineAnimation } from '../../display/SpineAnimation';\nimport { UICanvas, UICanvasConfig, UICanvasConfigKeys } from '../../display/UICanvas';\nimport { resolvePointLike } from '../../utils/functions';\nimport { omitKeys, pluck } from '../../utils/object';\nimport {\n  ButtonProps,\n  ContainerProps,\n  ExistingProps,\n  FlexContainerProps,\n  GraphicsProps,\n  SpineProps,\n  SpriteProps,\n  TextProps,\n  TextPropsKeys,\n  UICanvasFactoryProps,\n} from './props';\nimport {\n  resolveAnchor,\n  resolvePivot,\n  resolvePosition,\n  resolveScale,\n  resolveTexture,\n  resolveUnknownKeys,\n} from './utils';\n\nexport const defaultFactoryMethods = {\n  existing: <TEntity>(entity: TEntity, props?: Partial<ExistingProps>): TEntity => {\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  texture: resolveTexture,\n  container: (props?: Partial<ContainerProps>) => {\n    const entity = new Container();\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  sprite: (props?: Partial<SpriteProps>) => {\n    const entity = new Sprite(props ? resolveTexture(props) : undefined);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  graphics: (props?: Partial<GraphicsProps>) => {\n    const entity = new Graphics();\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  text: (props?: Partial<TextProps>) => {\n    const options = props\n      ? {\n          text: props.text,\n          roundPixels: props.roundPixels,\n          resolution: props.resolution,\n          style: props.style,\n          anchor: props.anchor ? resolvePointLike(props.anchor, true) : undefined,\n        }\n      : {};\n    const entity = new Text(options);\n    if (!props) return entity;\n    const { position, x, y, scale, scaleX, scaleY, pivot } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props,\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  bitmapText: (props?: Partial<TextProps>) => {\n    const options = pluck(props ?? {}, TextPropsKeys);\n    const entity = new BitmapText(options);\n    if (props?.position) {\n      resolvePosition({ position: props.position, x: props.x, y: props.y }, entity);\n    }\n    if (props?.scale) {\n      resolveScale({ scale: props.scale ?? 1, scaleX: props.scaleX, scaleY: props.scaleY }, entity);\n    }\n    if (props?.pivot) {\n      resolvePivot(props.pivot, entity);\n    }\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props ?? {},\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  // dill pixel specific stuff\n  button: (props?: Partial<ButtonProps>) => {\n    const config = pluck(props ?? {}, ButtonConfigKeys);\n    const otherProps = omitKeys<ButtonProps, keyof ButtonConfig>(ButtonConfigKeys, props ?? {});\n    const entity = new Button(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  flexContainer: (props?: Partial<FlexContainerProps>): FlexContainer => {\n    const config = pluck(props ?? {}, FlexContainerConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof FlexContainerConfig>(FlexContainerConfigKeys, props ?? {});\n    const entity = new FlexContainer(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  uiCanvas: (props?: Partial<UICanvasFactoryProps>): UICanvas => {\n    const config = pluck(props ?? {}, UICanvasConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof UICanvasConfig>(UICanvasConfigKeys, props ?? {});\n    const entity = new UICanvas(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spine: (props?: Partial<SpineProps>): import('../../plugins/spine/pixi-spine').Spine => {\n    let data = props?.data;\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      if (data.slice(-5) !== '.json') {\n        data = { skeleton: data + '.json', atlas: data + '.atlas' };\n      }\n    }\n    const entity: import('../../plugins/spine/pixi-spine/Spine').Spine = (window as any).Spine.from(data);\n    if (!props) return entity;\n    console.log('adding spine', props, entity);\n    if (props.autoUpdate !== undefined) entity.autoUpdate = props.autoUpdate;\n    if (props.animationName) entity.state.setAnimation(props.trackIndex ?? 0, props.animationName, props.loop);\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spineAnimation: (props?: Partial<SpineProps>): ISpineAnimation => {\n    const entity = new SpineAnimation(props);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n};\n\nexport interface IFactoryContainer<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>\n  extends PIXIContainer {\n  add: T;\n  make: T;\n}\n\nfunction createFactoryMethods<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  methods: Partial<T>,\n  instance: any,\n  addToStage: boolean,\n): T {\n  const factoryMethods: any = {};\n  for (const key in methods) {\n    factoryMethods[key] = (...args: any[]) => {\n      // @ts-ignore\n      const obj = methods[key](...args);\n      if (addToStage) {\n        instance.addChild(obj);\n        // instance.addChild(obj);\n      }\n      return obj;\n    };\n  }\n  return factoryMethods as T;\n}\n\nexport function FactoryContainer<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  extensions?: Partial<T>,\n): new () => IFactoryContainer<T> {\n  return class ExtendedContainer extends PIXIContainer implements IFactoryContainer<T> {\n    add: T;\n    make: T;\n\n    constructor() {\n      super();\n      extensions = Object.assign(defaultFactoryMethods, extensions);\n      this.make = createFactoryMethods(extensions, this, false);\n      this.add = createFactoryMethods(extensions, this, true);\n    }\n  };\n}\n\nexport class Factory {\n  static get = Object.assign(defaultFactoryMethods, {});\n}\n","import {ColorSource, DestroyOptions, Graphics, Sprite, Texture} from 'pixi.js';\nimport {Application} from '../core/Application';\nimport {IFocusable} from '../plugins/focus/FocusManagerPlugin';\nimport {Size} from '../utils/types';\nimport {Container, IContainer} from './Container';\n\n/**\n * Interface for Popup\n */\nexport interface IPopup<T = any> extends IContainer {\n  readonly id: string | number; // Unique identifier for the popup\n  config: PopupConfig<T>; // Configuration for the popup\n  view: Container; // The view of the popup\n  backing?: any; // The backing of the popup\n  isShowing: boolean; // Whether the popup is currently showing\n  firstFocusableEntity?: IFocusable; // The first focusable entity in the popup\n  data: T;\n\n  close(): void;\n\n  initialize(): void; // Initialize the popup\n\n  show(): void | Promise<any>; // Show the popup\n\n  afterShow(): void; // Show the popup\n\n  beforeHide(): void; // Hide the popup\n\n  hide(): void | Promise<any>; // Hide the popup\n\n  start(): void | Promise<any>; // Start the popup\n\n  end(): void; // End the popup\n}\n\nexport type PopupConstructor<T = any> = new (id: string | number, config?: Partial<PopupConfig<T>>) => IPopup<T>;\n\n/**\n * Configuration for the backing of the popup\n */\nexport type BackingConfig = {\n  color: ColorSource;\n  alpha: number;\n};\n\nconst defaultBackingConfig = {\n  color: 0x0,\n  alpha: 0.75,\n};\n\n/**\n * Configuration for the popup\n */\nexport type PopupConfig<T = any> = {\n  id: string | number;\n  closeOnEscape: boolean;\n  closeOnPointerDownOutside: boolean;\n  backing: boolean | Partial<BackingConfig>;\n  data?: T;\n};\n\nconst defaultPopupConfig = { backing: true, closeOnEscape: true, closeOnPointerDownOutside: true };\n\n/**\n * Class representing a Popup\n */\nexport class Popup<T = any> extends Container implements IPopup<T> {\n  public static BACKING_TEXTURE: Texture;\n  public isShowing: boolean = false;\n  public firstFocusableEntity: IFocusable;\n  public view: Container;\n  public backing?: Container;\n  public config: PopupConfig<T>;\n\n  /**\n   * Create a new Popup\n   * @param id - The unique identifier for the popup\n   * @param config - The configuration for the popup\n   */\n  constructor(\n    public readonly id: string | number,\n    config: Partial<PopupConfig> = {},\n  ) {\n    super();\n    this.config = Object.assign({ id, ...defaultPopupConfig }, config);\n\n    this._initialize();\n  }\n\n  get data(): T {\n    return this.config.data as T;\n  }\n\n  /**\n   * Create a backing for the popup\n   * @param config - The configuration for the backing\n   * @param size - The size of the backing\n   * @returns The backing container\n   */\n  private static makeBacking(config: boolean | Partial<BackingConfig>, size: Size): Container {\n    let finalConfig = {};\n    if (typeof config === 'object') {\n      finalConfig = config;\n    }\n    const backingConfig: BackingConfig = Object.assign({ ...defaultBackingConfig }, finalConfig);\n    if (Popup.BACKING_TEXTURE === undefined) {\n      const gfx = new Graphics();\n      gfx.rect(0, 0, 100, 100).fill('white');\n      Popup.BACKING_TEXTURE = Application.getInstance().renderer.generateTexture(gfx);\n    }\n    const backingWrapper = new Container();\n    backingWrapper.sortableChildren = false;\n    const backing = backingWrapper.addChild(new Sprite(Popup.BACKING_TEXTURE));\n    backing.anchor.set(0.5);\n    backing.alpha = backingConfig.alpha;\n    backing.tint = backingConfig.color;\n    backing.setSize(size.width, size.height);\n\n    return backingWrapper;\n  }\n\n  initialize() {}\n\n  public beforeHide() {\n    this.app.focus.removeFocusLayer(this.id);\n  }\n\n  destroy(options?: boolean | DestroyOptions): void {\n    this.app.focus.removeFocusLayer(this.id);\n    super.destroy(options);\n  }\n\n  /**\n   * Hide the popup\n   * @returns A promise that resolves when the popup is hidden\n   */\n  hide(): void | any | Promise<any>;\n\n  async hide(): Promise<void> {\n    this.visible = false;\n    return Promise.resolve();\n  }\n\n  /**\n   * Show the popup\n   * @returns A promise that resolves when the popup is shown\n   */\n  show(): void | Promise<any>;\n\n  async show(): Promise<void> {\n    this.visible = true;\n    return Promise.resolve();\n  }\n\n  /**\n   * Start the popup\n   */\n  start(): void | Promise<any>;\n  async start() {}\n\n  afterShow() {\n    if (this.firstFocusableEntity) {\n      this.app.focus.add(this.firstFocusableEntity, this.id, true);\n      this.app.focus.setFocus(this.firstFocusableEntity);\n    }\n  }\n\n  /**\n   * End the popup\n   */\n  end() {}\n\n  close(): void | Promise<void>;\n  async close(): Promise<void> {\n    void this.app.popups.hidePopup(this.id, this.config.data);\n  }\n\n  /**\n   * Initialize the popup\n   * @private\n   */\n  private _initialize() {\n    this.app.focus.addFocusLayer(this.id, false);\n\n    if (this.config.backing) {\n      this.backing = this.add.existing(Popup.makeBacking(this.config.backing, this.app.size));\n      this.backing.eventMode = 'static';\n      if (this.config.closeOnPointerDownOutside) {\n        this.backing.once('click', this.close);\n        this.backing.once('tap', this.close);\n      }\n    }\n\n    this.view = this.add.container();\n    this.view.eventMode = 'static';\n  }\n}\n","import { Ticker, UnresolvedAsset } from 'pixi.js';\nimport { Application } from '../core/Application';\nimport { Size } from '../utils/types';\nimport type { IContainer } from './Container';\nimport { Container } from './Container';\n\nexport interface IScene extends IContainer {\n  id: string;\n  enter: () => Promise<any>;\n  exit: () => Promise<any>;\n  initialize: () => Promise<void> | void;\n  start: () => Promise<void> | void;\n  bundles?: string[] | null;\n  assets?: string[] | UnresolvedAsset[] | null;\n}\n\nexport class Scene<T extends Application = Application> extends Container<T> implements IScene {\n  public readonly id: string;\n\n  constructor() {\n    super({ autoResize: true, autoUpdate: true, priority: -9999 });\n  }\n\n  get assets(): string[] | UnresolvedAsset[] | null {\n    return null;\n  }\n\n  get bundles(): string[] | null {\n    return null;\n  }\n\n  /**\n   * Called to initialize the scene\n   * Called before the scene is added to the stage\n   * and before the scene is animated in\n   * @returns {Promise<void> | void}\n   */\n  public initialize(): Promise<void> | void;\n  public async initialize(): Promise<void> {}\n\n  /**\n   * Called to animate the scene in\n   * @returns {Promise<void>}\n   */\n  public enter(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called to animate the scene out\n   * @returns {Promise<void>}\n   */\n  public exit(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after the enter resolves\n   * If enter doesn't return a promise, this is called immediately after enter\n   * @returns {Promise<void> | void}\n   */\n  public start(): Promise<void> | void;\n\n  public async start(): Promise<void> {}\n\n  /**\n   * Called every frame\n   * @param {Ticker} ticker\n   */\n  public update(ticker?: Ticker) {\n    void ticker;\n  }\n\n  /**\n   * Called when the window is resized\n   * @param {Size} size\n   * @override\n   */\n  public resize(size?: Size): void {\n    void size;\n  }\n}\n","import { Container, Point } from 'pixi.js';\nimport { ContainerLike, PointLike } from '../utils/types';\nimport { Signal } from '../signals';\nimport { Application, IApplication } from '../core/Application';\nimport { bindAllMethods } from '../utils/methodBinding';\nimport { Logger } from '../utils/console/Logger';\nimport { resolvePointLike } from '../utils/functions';\nimport { KeyboardEventDetail } from '../plugins/KeyboardPlugin';\n\ntype CameraCOnfig = {\n  container: Container;\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  target: ContainerLike | null;\n  targetPivot: Point;\n  lerp: number;\n};\n\n// require container to be set\ntype OptionalCameraConfig = Partial<CameraCOnfig>;\ntype RequiredCameraConfig = Required<Pick<CameraCOnfig, 'container'>>;\ntype CustomCameraConfig = OptionalCameraConfig & RequiredCameraConfig;\n\nexport interface ICamera {\n  onZoom: Signal<(camera: ICamera) => void>;\n  container: Container;\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  readonly targetPivot: Point;\n  readonly targetScale: Point;\n  readonly zooming: boolean;\n  readonly zoomLerp: number;\n  readonly lerp: number;\n  readonly target: ContainerLike | null;\n  readonly followOffset: Point;\n  app: Application;\n\n  follow(target: ContainerLike, offset: PointLike): void;\n\n  pan(deltaX: number, deltaY: number): void;\n\n  zoom(scale: number, lerp?: number): void;\n\n  update(): void;\n}\n\nexport class Camera extends Container implements ICamera {\n  public onZoom = new Signal<(camera: ICamera) => void>();\n  public onZoomComplete = new Signal<(camera: ICamera) => void>();\n  public container: Container;\n  public minX: number = 0;\n  public minY: number = 0;\n  public maxX: number;\n  public maxY: number;\n  public viewportWidth: number;\n  public viewportHeight: number;\n  public worldWidth: number;\n  public worldHeight: number;\n\n  constructor(public config: CustomCameraConfig) {\n    super({ isRenderGroup: true });\n    bindAllMethods(this);\n    if (config) {\n      this.container = config.container;\n      this.addChild(this.container);\n      if (config.minX) {\n        this.minX = config.minX;\n      }\n      if (config.maxX) {\n        this.maxX = config.maxX;\n      }\n      if (config.minY) {\n        this.minY = config.minY;\n      }\n      this.viewportWidth = config.viewportWidth ?? this.app.size.width;\n      this.viewportHeight = config.viewportHeight ?? this.app.size.width;\n      this.worldWidth = config.worldWidth ?? this.viewportWidth;\n      this.worldHeight = config.worldHeight ?? this.viewportHeight;\n      this.maxX = config.maxX ?? this.worldWidth - this.viewportWidth;\n      this.maxY = config.maxY ?? this.worldHeight - this.viewportHeight;\n    }\n\n    this._targetPivot.set(this.viewportWidth * 0.5, this.viewportHeight * 0.5);\n    if (config.target) {\n      this.target = config.target;\n    }\n    this._lerp = 1;\n    this.update();\n    if (config.lerp) {\n      this.lerp = config.lerp;\n    }\n    return this;\n  }\n\n  protected _zooming: boolean = false;\n\n  get zooming(): boolean {\n    return this._zooming;\n  }\n\n  protected _zoomLerp: number = 0.1;\n\n  get zoomLerp(): number {\n    return this._zoomLerp;\n  }\n\n  protected _targetPivot: Point = new Point(0, 0);\n\n  get targetPivot(): Point {\n    return this._targetPivot;\n  }\n\n  protected _targetScale: Point = new Point(1, 1);\n\n  get targetScale(): Point {\n    return this._targetPivot;\n  }\n\n  private _lerp: number = 0;\n\n  get lerp(): number {\n    return this._lerp;\n  }\n\n  set lerp(value: number) {\n    // if the value is less than 0 or greater than 1, clamp it to the range [0, 1], and log an error\n    if (value < 0 || value > 1) {\n      Logger.error('Camera lerp value must be in the range [0, 1]');\n    }\n    this._lerp = Math.max(0, Math.min(value, 1));\n  }\n\n  protected _target: ContainerLike | null = null;\n\n  get target(): ContainerLike | null {\n    return this._target;\n  }\n\n  set target(value: ContainerLike | null) {\n    this._target = value;\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n  }\n\n  protected _followOffset: Point = new Point(0, 0);\n  get followOffset(): Point {\n    return this._followOffset;\n  }\n\n  set followOffset(value: PointLike) {\n    this._followOffset = resolvePointLike(value, true);\n  }\n\n  get app(): Application {\n    return Application.getInstance();\n  }\n\n  follow(target: ContainerLike, offset?: PointLike) {\n    if (!offset) {\n      offset = { x: 0, y: 0 };\n    }\n    this.followOffset = offset;\n    this.target = target;\n  }\n\n  pan(deltaX: number, deltaY: number) {\n    let newPivotX = this.pivot.x + deltaX;\n    let newPivotY = this.pivot.y + deltaY;\n\n    // Clamp pivot to min and max values\n    newPivotX = Math.max(this.minX, Math.min(newPivotX, this.maxX));\n    newPivotY = Math.max(this.minY, Math.min(newPivotY, this.maxY));\n\n    this._targetPivot.set(newPivotX, newPivotY);\n  }\n\n  zoom(scale: number, lerp: number = 0.1) {\n    this._zoomLerp = lerp;\n    this._zooming = true;\n    this._targetScale.set(scale, scale);\n  }\n\n  update() {\n    this.updateZoom();\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n    this.updatePosition(this._zooming);\n    if (\n      this._zooming &&\n      Math.abs(this.scale.x - this._targetScale.x) < 0.001 &&\n      Math.abs(this.scale.y - this._targetScale.y) < 0.001\n    ) {\n      this.onZoom.emit(this);\n      this._zooming = false;\n      this.scale.set(this._targetScale.x, this._targetScale.y);\n      this.onZoomComplete.emit(this);\n    } else if (this._zooming) {\n      this.onZoom.emit(this);\n    }\n  }\n\n  private focusOn(entity: ContainerLike) {\n    // Get the global position of the entity and convert it to the local position within the container.\n    const globalPosition = entity.getGlobalPosition();\n    const spritePosition = this.toLocal(globalPosition);\n\n    const posXModifier = this.position.x / this.scale.x - this.viewportWidth / 2;\n    const posYModifier = this.position.y / this.scale.y - this.viewportHeight / 2;\n\n    const offsetX = this.followOffset.x / this.scale.x;\n    const offsetY = this.followOffset.y / this.scale.y;\n\n    this._targetPivot.x = (spritePosition.x * this.scale.x + this.viewportWidth / 2) * (1 / this.scale.x) + offsetX;\n\n    const tMinX = this.viewportWidth / this.scale.x / 2 + posXModifier + this.minX - offsetX;\n    const tMaxX = this.worldWidth - this.viewportWidth / this.scale.x / 2 + posXModifier + this.maxX + offsetX;\n\n    if (this._targetPivot.x < tMinX) {\n      this._targetPivot.x = tMinX;\n    } else if (this._targetPivot.x > tMaxX) {\n      this._targetPivot.x = tMaxX;\n    }\n\n    this._targetPivot.y = (spritePosition.y * this.scale.y + this.viewportHeight / 2) * (1 / this.scale.y) + offsetY;\n\n    const tMinY = this.viewportHeight / this.scale.y / 2 + posYModifier + this.minY - offsetY;\n    const tMaxY = this.worldHeight - this.viewportHeight / this.scale.y / 2 + posYModifier + this.maxY - offsetY;\n\n    if (this._targetPivot.y < tMinY) {\n      this._targetPivot.y = tMinY;\n    } else if (this._targetPivot.y > tMaxY) {\n      this._targetPivot.y = tMaxY;\n    }\n  }\n\n  private updateZoom() {\n    const currentScaleX = this.scale.x;\n    const currentScaleY = this.scale.y;\n\n    const interpolatedScaleX = currentScaleX + this._zoomLerp * (this._targetScale.x - currentScaleX);\n    const interpolatedScaleY = currentScaleY + this._zoomLerp * (this._targetScale.y - currentScaleY);\n\n    this.scale.set(Math.max(0, interpolatedScaleX), Math.max(0, interpolatedScaleY));\n  }\n\n  private updatePosition(skipLerp: boolean = false) {\n    if (this.lerp > 0 && !skipLerp) {\n      // Current pivot positions\n      const currentPivotX = this.pivot.x;\n      const currentPivotY = this.pivot.y;\n\n      // Calculate interpolated pivot positions\n      const interpolatedPivotX = currentPivotX + this.lerp * (this._targetPivot.x - currentPivotX);\n      const interpolatedPivotY = currentPivotY + this.lerp * (this._targetPivot.y - currentPivotY);\n\n      // Set the pivot to the interpolated position to smooth out the camera movement\n      this.pivot.set(interpolatedPivotX, interpolatedPivotY);\n    } else {\n      this.pivot.set(this._targetPivot.x, this._targetPivot.y);\n    }\n\n    this.position.set(this.viewportWidth / 2, this.viewportHeight / 2);\n  }\n}\n\nexport class CameraController {\n  private dragging: boolean = false;\n  private previousPointerPosition: Point | null = null;\n\n  constructor(\n    public camera: Camera,\n    public interactiveArea: Container,\n  ) {\n    bindAllMethods(this);\n    this.camera = camera;\n    this.interactiveArea = interactiveArea;\n    this.app.keyboard.onKeyDown().connect(this.handleKeyDown);\n    // Keyboard events\n\n    // Mouse and touch events\n    this.interactiveArea.on('pointerdown', this.onPointerDown.bind(this));\n    this.interactiveArea.on('pointermove', this.onPointerMove.bind(this));\n    this.app.stage.on('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.on('pointerupoutside', this.onPointerUp.bind(this));\n\n    // Touch events equivalent\n    this.interactiveArea.on('touchstart', this.onPointerDown.bind(this));\n    this.interactiveArea.on('touchmove', this.onPointerMove.bind(this));\n    this.interactiveArea.on('touchend', this.onPointerUp.bind(this));\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  destroy() {\n    // Mouse and touch events\n    this.interactiveArea.removeAllListeners();\n    this.app.stage.off('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.off('pointerupoutside', this.onPointerUp.bind(this));\n  }\n\n  private handleKeyDown(detail: KeyboardEventDetail) {\n    const panSpeed = 10; // Adjust pan speed as necessary\n    const zoomFactor = 1.1; // Adjust zoom factor as necessary\n\n    switch (detail.event.key) {\n      case 'ArrowUp':\n        this.camera.pan(0, -panSpeed);\n        break;\n      case 'ArrowDown':\n        this.camera.pan(0, panSpeed);\n        break;\n      case 'ArrowLeft':\n        this.camera.pan(-panSpeed, 0);\n        break;\n      case 'ArrowRight':\n        this.camera.pan(panSpeed, 0);\n        break;\n      case '+':\n        this.camera.zoom(zoomFactor);\n        break;\n      case '-':\n        this.camera.zoom(1 / zoomFactor);\n        break;\n    }\n  }\n\n  private onPointerDown(event: MouseEvent | TouchEvent) {\n    this.dragging = true;\n    this.previousPointerPosition = this.getEventPosition(event);\n  }\n\n  private onPointerMove(event: MouseEvent | TouchEvent) {\n    if (!this.dragging || !this.previousPointerPosition) return;\n\n    const currentPosition = this.getEventPosition(event);\n    const deltaX = currentPosition.x - this.previousPointerPosition.x;\n    const deltaY = currentPosition.y - this.previousPointerPosition.y;\n\n    this.camera.pan(deltaX, deltaY);\n    this.previousPointerPosition = currentPosition;\n  }\n\n  private onPointerUp() {\n    this.dragging = false;\n    this.previousPointerPosition = null;\n  }\n\n  private getEventPosition(event: MouseEvent | TouchEvent): Point {\n    if (event instanceof TouchEvent) {\n      return new Point(event.touches[0].clientX, event.touches[0].clientY);\n    } else {\n      return new Point(event.clientX, event.clientY);\n    }\n  }\n}\n","// This file is auto-generated during the build process.\nexport const version: string = '8.3.9';\n","import { version } from './version';\n\nexport function sayHello() {\n  let hello: string = `%cDill Pixel Game Framework v${version}`;\n  hello += ' - %chttps://dillpixel.io';\n  console.log(hello, 'color: #74b64c', 'color: #74b64c; font-weight: bold');\n}\n","import { sayHello } from '../hello';\nimport { delay } from '../utils/async';\nimport { AppConfig, Application, IApplication } from './Application';\n\nexport async function create<T extends IApplication = Application>(\n  ApplicationClass: new () => T,\n  config: AppConfig = { id: 'DillPixelApplication' },\n  domElement: string | Window | HTMLElement = Application.containerId,\n  speak: boolean = true,\n): Promise<T> {\n  if (speak) {\n    sayHello();\n  }\n  let el: HTMLElement | null = null;\n  if (typeof domElement === 'string') {\n    el = document.getElementById(domElement);\n    if (!el) {\n      el = Application.createContainer(domElement);\n    }\n  } else if (domElement instanceof HTMLElement) {\n    el = domElement;\n  } else if (domElement === window) {\n    el = document.body;\n  }\n  if (!el) {\n    // no element to use\n    throw new Error(\n      'You passed in a DOM Element, but none was found. If you instead pass in a string, a container will be created for you, using the string for its id.',\n    );\n  }\n  Application.containerElement = el;\n  if (config.resizeToContainer) {\n    config.resizeTo = el;\n  }\n  const instance = new ApplicationClass();\n  await instance.initialize(config);\n  if (el) {\n    el.appendChild(instance.canvas as HTMLCanvasElement);\n  } else {\n    throw new Error('No element found to append the view to.');\n  }\n  // ensure all plugins are initialized\n  await delay(0.01);\n\n  // call postInitialize on the instance\n  await instance.postInitialize();\n\n  // return th app instance\n  return instance as unknown as T;\n}\n"],"names":["Collector_1","Collector","signal","args","CollectorArray_1","require$$0","CollectorArray","result","CollectorLast_1","CollectorLast","CollectorUntil0_1","CollectorUntil0","CollectorWhile0_1","CollectorWhile0","SignalConnection","SignalConnectionImpl","link","parentCleanup","enable","SignalLink_1","SignalLink","prev","next","order","flag","callback","after","Signal_1","SignalConnection_1","require$$1","Signal$1","collector","Signal","SignalConnections_1","SignalConnections","connection","exports","require$$2","require$$3","require$$4","require$$5","require$$6","TsSignal","wrapper","wrapperConnection","times","numTimes","env","isDev","isProduction","_Logger","_namespace","namespace","Logger","Store","adapter","adapterOptions","adapterId","key","data","awaitSave","keys","_a","i","aKey","shouldAwait","obj","app","delay","seconds","resolve","isPromise","value","isClass","getDynamicModuleFromImportListItem","item","module","ctor","bindMethods","instance","methodNames","methodName","method","getInstanceMethodNames","excludePrefixes","excludeMethodNames","prototype","filteredMethodNames","propertyName","ownDescriptor","prefix","bindAllMethods","checkAndInvokeMethod","methodArgs","coreFunctionRegistry","coreSignalRegistry","defaultPlugins","defaultApplicationOptions","_Application","PIXIPApplication","Point","version","context","isMobile","pId","container","rendererDestroyOptions","options","plugin","config","listItem","storageAdapter","pluginName","visible","action","id","pluginInstance","opts","manifest","Assets","view","Application","Plugin","_app","_options","f","fName","s","sName","PIXI","Container","Sprite","Graphics","Text","BitmapText","HTMLText","Texture","Rectangle","TextStyle","HTMLTextStyle","resolvePointLike","position","asPoint","x","y","resolveSizeLike","size","getSheetLikeString","sheet","setObjectName","object","texture","debounce","func","wait","timeoutId","FocusOutliner","focusTarget","pos","focusPos","fp","ActionContext","Action","_Action","StorageAdapter","_key","_data","LocalStorageAdapter","clamp","pValue","pMin","pMax","lerp","pPerc","getPreviousMapEntry","map","currentKey","previous","entry","getLastMapEntry","isRetina","PIXIUtilsIsMobile","createQueue","promises","Queue","currentFunction","error","pluck","acc","omitKeys","keysToOmit","Focusable","Base","_e","e","type","Interactive","eventName","event","signalName","WithSignals","ButtonConfigKeys","_Button","FactoryContainer","Button","enabled","callbackId","Animated","animationProps","tween","gsap","t","sequences","sequence","fromProps","toProps","duration","intensity","origX","repeat","animationEntity","_Container","__config","ticker","_FlexContainer","FlexContainerConfigKeys","defaultConfig","FlexContainer","children","index","child","newChild","actualChild","a","b","bounds","_b","canHaveEndlessWidthOrHeight","width","height","gap","flexDirection","flexWrap","alignItems","justifyContent","layoutProps","rowHeight","columnWidth","nextRowY","nextColumnX","newLayoutProps","items","lineItems","lineStart","shouldWrap","childRef","handleWrap","updateLayoutVariables","getNextX","currentX","getNextY","currentY","handleJustification","lineEnd","direction","extraSpace","offset","handleAlignment","props","totalHeight","_SpineAnimation","SpineAnimation","trackIndex","name","loop","tracklndex","resolvePadding","paddingNum","ensurePadding","padding","paddingAsPointLike","UICanvasConfigKeys","_UICanvas","UICanvas","beginIndex","endIndex","_size","childObj","settings","displayWidth","displayHeight","firstChild","childWidth","childHeight","TextPropsKeys","resolveUnknownKeys","entity","resolveTexture","asset","assetAsString","spriteSheet","textures","linkedSheet","resolvePosition","resolveScale","scale","resolveAnchor","anchor","anchorPoint","resolvePivot","pivot","pivotPoint","defaultFactoryMethods","scaleX","scaleY","rest","unknowns","otherProps","createFactoryMethods","methods","addToStage","factoryMethods","extensions","PIXIContainer","_Factory","Factory","defaultBackingConfig","defaultPopupConfig","Popup","finalConfig","backingConfig","gfx","backingWrapper","backing","Scene","Camera","target","deltaX","deltaY","newPivotX","newPivotY","globalPosition","spritePosition","posXModifier","posYModifier","offsetX","offsetY","tMinX","tMaxX","tMinY","tMaxY","currentScaleX","currentScaleY","interpolatedScaleX","interpolatedScaleY","skipLerp","currentPivotX","currentPivotY","interpolatedPivotX","interpolatedPivotY","sayHello","hello","create","ApplicationClass","domElement","speak","el"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}