{"version":3,"file":"dill-pixel.mjs","sources":["../node_modules/typed-signals/dist/Collector.js","../node_modules/typed-signals/dist/CollectorArray.js","../node_modules/typed-signals/dist/CollectorLast.js","../node_modules/typed-signals/dist/CollectorUntil0.js","../node_modules/typed-signals/dist/CollectorWhile0.js","../node_modules/typed-signals/dist/SignalConnection.js","../node_modules/typed-signals/dist/SignalLink.js","../node_modules/typed-signals/dist/Signal.js","../node_modules/typed-signals/dist/SignalConnections.js","../node_modules/typed-signals/dist/index.js","../src/signals/Signal.ts","../src/utils/env.ts","../src/utils/string.ts","../src/utils/console/Logger.ts","../src/utils/promise/functions.ts","../src/utils/promise/Queue.ts","../src/utils/framework.ts","../src/utils/functions.ts","../src/utils/map.ts","../src/utils/math.ts","../src/utils/object.ts","../src/utils/bind.ts","../src/utils/padding.ts","../src/utils/platform.ts","../src/store/Store.ts","../src/core/registries.ts","../src/version.ts","../src/hello.ts","../src/core/create.ts","../src/plugins/Plugin.ts","../src/store/adapters/StorageAdapter.ts","../src/store/adapters/LocalStorageAdapter.ts","../src/plugins/AssetsPlugin.ts","../src/plugins/WebEventsPlugin.ts","../src/plugins/SceneManagerPlugin.ts","../src/plugins/input/constants.ts","../src/plugins/input/actions.ts","../src/plugins/input/InputPlugin.ts","../src/plugins/KeyboardPlugin.ts","../src/plugins/focus/FocusOutliner.ts","../src/plugins/focus/FocusManagerPlugin.ts","../src/mixins/animated.ts","../src/mixins/focus.ts","../src/mixins/interaction.ts","../src/mixins/mixin.ts","../src/mixins/signals.ts","../src/mixins/factory/props.ts","../src/mixins/factory/utils.ts","../src/mixins/factory/index.ts","../src/display/Container.ts","../src/display/Scene.ts","../src/display/Button.ts","../src/display/Camera.ts","../src/display/FlexContainer.ts","../src/display/UICanvas.ts","../src/display/Popup.ts","../src/display/SpineAnimation.ts","../src/plugins/PopupManagerPlugin.ts","../src/plugins/audio/AudioChannel.ts","../src/plugins/audio/AudioInstance.ts","../node_modules/@pixi/sound/lib/instance.mjs","../node_modules/@pixi/sound/lib/webaudio/WebAudioUtils.mjs","../node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioContext.mjs","../node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioInstance.mjs","../node_modules/@pixi/sound/lib/htmlaudio/HTMLAudioMedia.mjs","../node_modules/@pixi/sound/lib/SoundSprite.mjs","../node_modules/@pixi/sound/lib/utils/supported.mjs","../node_modules/@pixi/sound/lib/webaudio/WebAudioInstance.mjs","../node_modules/@pixi/sound/lib/Filterable.mjs","../node_modules/@pixi/sound/lib/webaudio/WebAudioNodes.mjs","../node_modules/@pixi/sound/lib/webaudio/WebAudioMedia.mjs","../node_modules/@pixi/sound/lib/Sound.mjs","../node_modules/@pixi/sound/lib/webaudio/WebAudioContext.mjs","../node_modules/@pixi/sound/lib/SoundLibrary.mjs","../node_modules/@pixi/sound/lib/soundAsset.mjs","../node_modules/@pixi/sound/lib/index.mjs","../src/plugins/audio/AudioManagerPlugin.ts","../src/plugins/i18nPlugin.ts","../src/plugins/ResizerPlugin.ts","../src/plugins/defaults.ts","../src/Application.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\n/**\n * Base class for collectors.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Collector {\n    /**\n     * Create a new collector.\n     *\n     * @param signal The signal to emit.\n     */\n    constructor(signal) {\n        // eslint-disable-next-line dot-notation\n        this.emit = (...args) => {\n            // eslint-disable-next-line dot-notation\n            signal[\"emitCollecting\"](this, args);\n        };\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorArray = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the all signal handlers from a signal emission in an array.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorArray extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = [];\n    }\n    handleResult(result) {\n        this.result.push(result);\n        return true;\n    }\n    /**\n     * Get the list of results from the signal handlers.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result.length = 0;\n    }\n}\nexports.CollectorArray = CollectorArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorLast = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the last signal handler from a signal emission.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorLast extends Collector_1.Collector {\n    handleResult(result) {\n        this.result = result;\n        return true;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        delete this.result;\n    }\n}\nexports.CollectorLast = CollectorLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorUntil0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return true.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorUntil0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorUntil0 = CollectorUntil0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorWhile0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return false.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorWhile0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return !this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorWhile0 = CollectorWhile0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnectionImpl = void 0;\n/**\n * Implementation of SignalConnection, for internal use only.\n * @private\n */\nclass SignalConnectionImpl {\n    /**\n     * @param link The actual link of the connection.\n     * @param parentCleanup Callback to cleanup the parent signal when a connection is disconnected\n     */\n    constructor(link, parentCleanup) {\n        this.link = link;\n        this.parentCleanup = parentCleanup;\n    }\n    disconnect() {\n        if (this.link !== null) {\n            this.link.unlink();\n            this.link = null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.parentCleanup();\n            this.parentCleanup = null;\n            return true;\n        }\n        return false;\n    }\n    set enabled(enable) {\n        if (this.link)\n            this.link.setEnabled(enable);\n    }\n    get enabled() {\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        return this.link !== null && this.link.isEnabled();\n    }\n}\nexports.SignalConnectionImpl = SignalConnectionImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalLink = void 0;\n/**\n * SignalLink implements a doubly-linked ring with nodes containing the signal handlers.\n * @private\n */\nclass SignalLink {\n    constructor(prev = null, next = null, order = 0) {\n        this.enabled = true;\n        this.newLink = false;\n        this.callback = null;\n        this.prev = prev !== null && prev !== void 0 ? prev : this;\n        this.next = next !== null && next !== void 0 ? next : this;\n        this.order = order;\n    }\n    isEnabled() {\n        return this.enabled && !this.newLink;\n    }\n    setEnabled(flag) {\n        this.enabled = flag;\n    }\n    unlink() {\n        this.callback = null;\n        this.next.prev = this.prev;\n        this.prev.next = this.next;\n    }\n    insert(callback, order) {\n        let after = this.prev;\n        while (after !== this) {\n            if (after.order <= order)\n                break;\n            after = after.prev;\n        }\n        const link = new SignalLink(after, after.next, order);\n        link.callback = callback;\n        after.next = link;\n        link.next.prev = link;\n        return link;\n    }\n}\nexports.SignalLink = SignalLink;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signal = void 0;\nconst SignalConnection_1 = require(\"./SignalConnection\");\nconst SignalLink_1 = require(\"./SignalLink\");\n/**\n * A signal is a way to publish and subscribe to events.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Signal {\n    constructor() {\n        this.head = new SignalLink_1.SignalLink();\n        this.hasNewLinks = false;\n        this.emitDepth = 0;\n        this.connectionsCount = 0;\n    }\n    /**\n     * @returns The number of connections on this signal.\n     */\n    getConnectionsCount() {\n        return this.connectionsCount;\n    }\n    /**\n     * @returns true if this signal has connections.\n     */\n    hasConnections() {\n        return this.connectionsCount > 0;\n    }\n    /**\n     * Subscribe to this signal.\n     *\n     * @param callback This callback will be run when emit() is called.\n     * @param order Handlers with a higher order value will be called later.\n     */\n    connect(callback, order = 0) {\n        this.connectionsCount++;\n        const link = this.head.insert(callback, order);\n        if (this.emitDepth > 0) {\n            this.hasNewLinks = true;\n            link.newLink = true;\n        }\n        return new SignalConnection_1.SignalConnectionImpl(link, () => this.decrementConnectionCount());\n    }\n    decrementConnectionCount() {\n        this.connectionsCount--;\n    }\n    /**\n     * Unsubscribe from this signal with the original callback instance.\n     * While you can use this method, the SignalConnection returned by connect() will not be updated!\n     *\n     * @param callback The callback you passed to connect().\n     */\n    disconnect(callback) {\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.callback === callback) {\n                this.decrementConnectionCount();\n                link.unlink();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Disconnect all handlers from this signal event.\n     */\n    disconnectAll() {\n        while (this.head.next !== this.head) {\n            this.head.next.unlink();\n        }\n        this.connectionsCount = 0;\n    }\n    /**\n     * Publish this signal event (call all handlers).\n     */\n    emit(...args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback)\n                link.callback.apply(null, args);\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    emitCollecting(collector, args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback) {\n                const result = link.callback.apply(null, args);\n                if (!collector.handleResult(result))\n                    break;\n            }\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    unsetNewLink() {\n        if (this.hasNewLinks && this.emitDepth === 0) {\n            for (let link = this.head.next; link !== this.head; link = link.next)\n                link.newLink = false;\n            this.hasNewLinks = false;\n        }\n    }\n}\nexports.Signal = Signal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = void 0;\n/**\n * Represents a list of connections to a signal for easy disconnect.\n */\nclass SignalConnections {\n    constructor() {\n        this.list = [];\n    }\n    /**\n     * Add a connection to the list.\n     * @param connection\n     */\n    add(connection) {\n        this.list.push(connection);\n    }\n    /**\n     * Disconnect all connections in the list and empty the list.\n     */\n    disconnectAll() {\n        for (const connection of this.list) {\n            connection.disconnect();\n        }\n        this.list = [];\n    }\n    /**\n     * @returns The number of connections in this list.\n     */\n    getCount() {\n        return this.list.length;\n    }\n    /**\n     * @returns true if this list is empty.\n     */\n    isEmpty() {\n        return this.list.length === 0;\n    }\n}\nexports.SignalConnections = SignalConnections;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = exports.Signal = exports.CollectorWhile0 = exports.CollectorUntil0 = exports.CollectorLast = exports.CollectorArray = exports.Collector = void 0;\nvar Collector_1 = require(\"./Collector\");\nObject.defineProperty(exports, \"Collector\", { enumerable: true, get: function () { return Collector_1.Collector; } });\nvar CollectorArray_1 = require(\"./CollectorArray\");\nObject.defineProperty(exports, \"CollectorArray\", { enumerable: true, get: function () { return CollectorArray_1.CollectorArray; } });\nvar CollectorLast_1 = require(\"./CollectorLast\");\nObject.defineProperty(exports, \"CollectorLast\", { enumerable: true, get: function () { return CollectorLast_1.CollectorLast; } });\nvar CollectorUntil0_1 = require(\"./CollectorUntil0\");\nObject.defineProperty(exports, \"CollectorUntil0\", { enumerable: true, get: function () { return CollectorUntil0_1.CollectorUntil0; } });\nvar CollectorWhile0_1 = require(\"./CollectorWhile0\");\nObject.defineProperty(exports, \"CollectorWhile0\", { enumerable: true, get: function () { return CollectorWhile0_1.CollectorWhile0; } });\nvar Signal_1 = require(\"./Signal\");\nObject.defineProperty(exports, \"Signal\", { enumerable: true, get: function () { return Signal_1.Signal; } });\nvar SignalConnections_1 = require(\"./SignalConnections\");\nObject.defineProperty(exports, \"SignalConnections\", { enumerable: true, get: function () { return SignalConnections_1.SignalConnections; } });\n","import {\n  Collector,\n  CollectorArray,\n  CollectorLast,\n  CollectorUntil0,\n  CollectorWhile0,\n  Signal as TsSignal,\n  SignalConnection,\n  SignalConnections,\n} from 'typed-signals';\n\nclass Signal<THandler extends (...args: any[]) => any> extends TsSignal<THandler> {\n  // add a connectOnce method to the Signal class, that will connect a listener to the signal, and then remove it after the first time it is called\n  public connectOnce(callback: THandler, order?: number): SignalConnection {\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      // Assuming you have a method to remove the connection, using it here to disconnect\n      wrapperConnection.disconnect();\n    }) as THandler;\n\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n\n  public connectNTimes(callback: THandler, times: number, order?: number): SignalConnection {\n    let numTimes = 0;\n    // Wrapper function to include logic for disconnecting\n    const wrapper: THandler = ((...args: any[]) => {\n      callback(...args);\n      numTimes++;\n      if (numTimes >= times) {\n        wrapperConnection.disconnect();\n      }\n    }) as THandler;\n    // Connect the wrapper with the same order, store the connection\n    const wrapperConnection = this.connect(wrapper, order);\n    return wrapperConnection;\n  }\n}\n\n// export anything useful from ts-signals, as well as the new Signal class\nexport { Signal, SignalConnections, Collector, CollectorLast, CollectorArray, CollectorUntil0, CollectorWhile0 };\nexport type { SignalConnection };\n","export const env = process.env.NODE_ENV;\nexport const isDev = env === 'development';\nexport const isProduction = env === 'production';\n","export function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function capitalizeWords(str: string): string {\n  return str.split(' ').map(capitalize).join(' ');\n}\n","import { isDev } from '../env';\nimport { capitalize } from '../string';\n\nconst colors = {\n  log: 'background: #74b64c; color: black;',\n  warn: 'background: yellow; color: black;',\n  error: 'background: orange; color: black;',\n};\n\nexport type LoggerMode = 'development' | 'default' | 'disabled';\n\nexport class Logger {\n  private static _instance: Logger | null = null;\n\n  private constructor(mode?: LoggerMode) {\n    Logger._instance = this;\n    Logger.mode = mode !== undefined ? mode : isDev ? 'development' : 'default';\n    // check if mode is one of the valid modes\n    if (!['development', 'default', 'disabled'].includes(Logger.mode)) {\n      Logger.mode = 'default';\n    }\n  }\n\n  private static _mode: LoggerMode = 'disabled';\n\n  static get mode(): LoggerMode {\n    return Logger._mode;\n  }\n\n  static set mode(mode: LoggerMode) {\n    Logger._mode = mode;\n  }\n\n  public static initialize(mode?: LoggerMode) {\n    if (Logger._instance) {\n      throw new Error('Logger has already been instantiated.');\n    }\n    Logger._instance = new Logger(mode);\n  }\n\n  public static log(...args: any) {\n    Logger.trace('log', ...args);\n  }\n\n  public static warn(...args: any) {\n    Logger.trace('warn', ...args);\n  }\n\n  public static error(...args: any) {\n    Logger.trace('error', ...args);\n  }\n\n  public static trace(type: 'log' | 'warn' | 'error' = 'log', ...args: any[]) {\n    if (Logger.mode === 'disabled') {\n      return;\n    }\n    if (Logger.mode === 'default') {\n      return console.log(`%c ${capitalize(type)} `, colors[type], ...args);\n    }\n    console.groupCollapsed(`%c ${capitalize(type)} `, colors[type], ...args);\n    console.trace(`%c Stack `, colors[type]);\n    console.groupEnd();\n  }\n}\n","/**\n * Delays the execution of the subsequent code.\n * @param {number} seconds The delay time in seconds. Default is 0.\n * @returns {Promise<void>} A promise that resolves after the specified delay.\n */\nexport const delay = (seconds: number = 0): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n\n/**\n * Checks if the given value is a promise.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a promise, false otherwise.\n */\nexport const isPromise = (value: any): value is Promise<any> => value && typeof value.then === 'function';\n","import {Logger} from '../console';\n\n/**\n * Creates a new Queue with the given promises.\n * @param {...(Promise<any> | (() => Promise<any | void>))[]} promises The promises to add to the queue.\n * @returns {Queue} The created Queue.\n */\nexport function createQueue(...promises: (Promise<any> | (() => Promise<any | void>))[]): Queue {\n  return new Queue(promises);\n}\n\n/**\n * A class representing a queue of promises.\n * @template T The type of the values that the promises in the queue resolve to.\n */\nexport class Queue<T = any | void> {\n  private _promises: (Promise<any> | (() => Promise<T>))[];\n  private _currentIndex: number = 0;\n  private _isPaused: boolean = false;\n  private _isCanceled: boolean = false;\n\n  /**\n   * Creates a new Queue.\n   * @param {(Promise<any> | (() => Promise<T>))[]} promises The promises to add to the queue.\n   */\n  constructor(promises: (Promise<any> | (() => Promise<T>))[] = []) {\n    this._promises = promises;\n  }\n\n  private _results: T[];\n\n  /**\n   * Gets the results of the promises that have been resolved so far.\n   * @returns {T[]} The results.\n   */\n  public get results(): T[] {\n    return this._results;\n  }\n\n  /**\n   * Adds promises to the queue.\n   * @param {...(Promise<any> | (() => Promise<T>))[]} args The promises to add.\n   */\n  public add(...args: (Promise<any> | (() => Promise<T>))[]) {\n    this._promises.push(...args);\n  }\n\n  /**\n   * Starts the execution of the promises in the queue.\n   */\n  public start(): void {\n    if (this._currentIndex === 0) {\n      // don't start if already started\n      this._results = [];\n      void this._next();\n    }\n  }\n\n  /**\n   * Pauses the execution of the promises in the queue.\n   */\n  public pause(): void {\n    this._isPaused = true;\n  }\n\n  /**\n   * Resumes the execution of the promises in the queue.\n   */\n  public resume(): void {\n    if (this._isPaused) {\n      this._isPaused = false;\n      void this._next();\n    }\n  }\n\n  /**\n   * Cancels the execution of the promises in the queue.\n   */\n  public cancel(): void {\n    this._isCanceled = true;\n    this._promises = [];\n  }\n\n  /**\n   * Executes the next promise in the queue.\n   * @private\n   * @returns {Promise<void>} A promise that resolves when the next promise in the queue has been executed.\n   */\n  private async _next(): Promise<void> {\n    if (this._isPaused || this._isCanceled || this._currentIndex >= this._promises.length) {\n      return;\n    }\n\n    const currentFunction = this._promises[this._currentIndex];\n\n    try {\n      const result = typeof currentFunction === 'function' ? await currentFunction() : await currentFunction;\n      this._results.push(result);\n      this._currentIndex++;\n      void this._next();\n    } catch (error) {\n      Logger.error(\"Queue didn't complete due to an error:\", error, 'Cancelling Queue');\n      this._isCanceled = true;\n    }\n  }\n}\n","import {isPromise} from './promise';\nimport {Constructor, ImportListItem, ImportListItemModule} from './types';\n\n/**\n * Checks if the given value is a class.\n * @param {any} value The value to check.\n * @returns {boolean} True if the value is a class, false otherwise.\n */\nfunction isClass(value: any): boolean {\n  return typeof value === 'function' && /^class\\s/.test(Function.prototype.toString.call(value));\n}\n\n/**\n * Retrieves the constructor of the module from the given import list item.\n * If the module is a promise, it waits for it to resolve.\n * If the module is a class, it returns it directly.\n * If the module has a named export specified in the item, it returns that.\n * Otherwise, it returns the default export of the module.\n * @param {ImportListItem<T>} item The import list item to get the module from.\n * @returns {Promise<Constructor<T>>} A promise that resolves to the constructor of the module.\n */\nexport async function getDynamicModuleFromImportListItem<T = any>(\n  item: ImportListItem<T>,\n): Promise<ImportListItemModule<T>> {\n  let module;\n  let ctor: ImportListItemModule<T>;\n\n  if (isPromise(item.module)) {\n    module = await item.module;\n    ctor = item?.namedExport ? module[item.namedExport] : module.default;\n  } else if (typeof item.module === 'function') {\n    if (isClass(item.module)) {\n      module = item.module;\n      ctor = module as Constructor<T>;\n    } else {\n      module = await (item.module as () => Promise<any>)();\n      ctor = item?.namedExport ? module[item.namedExport] : module.default;\n    }\n  } else {\n    module = item.module;\n    ctor = module;\n  }\n\n  return ctor;\n}\n","import { Point } from 'pixi.js';\nimport type { PointLike, Size, SizeLike, SpriteSheetLike, TextureLike } from './types';\n\nexport type PointLikeResult = { x: number; y: number } | Point;\n\nexport function resolvePointLike(\n  position?: PointLike,\n  asPoint?: false,\n  x?: number,\n  y?: number,\n): { x: number; y: number };\nexport function resolvePointLike(position?: PointLike, asPoint?: true, x?: number, y?: number): Point;\nexport function resolvePointLike(\n  position?: PointLike,\n  asPoint: boolean = false,\n  x: number = 0,\n  y: number = 0,\n): PointLikeResult {\n  if (position instanceof Point) {\n    x = position.x;\n    y = position.y;\n  } else if (Array.isArray(position)) {\n    x = position[0];\n    y = position[1] === undefined ? position[0] : position[1];\n  } else if (typeof position === 'object') {\n    // cast as an object\n    const obj = position as { x: number; y: number };\n    x = obj.x || 0;\n    y = obj.y || 0;\n  } else {\n    x = position ?? x;\n    y = position ?? y;\n  }\n\n  return asPoint ? new Point(x, y) : { x, y };\n}\n\nexport function resolveSizeLike(size?: SizeLike): Size {\n  if (size === undefined) {\n    return { width: 0, height: 0 };\n  }\n  if (Array.isArray(size)) {\n    return { width: size[0], height: size[1] === undefined ? size[0] : size[1] };\n  } else if (size instanceof Point) {\n    return { width: size.x, height: size.y };\n  } else if (typeof size === 'object') {\n    // cast as an object\n    const obj = size as { width: number; height: number };\n    return { width: obj.width || 0, height: obj.height || 0 };\n  } else {\n    return { width: size ?? 0, height: size ?? 0 };\n  }\n}\n\nexport function getSheetLikeString(sheet: SpriteSheetLike) {\n  if (Array.isArray(sheet)) {\n    return sheet.join('/');\n  } else {\n    return sheet;\n  }\n}\n\nexport function setObjectName(object: any, texture: TextureLike, sheet: SpriteSheetLike) {\n  if (sheet && texture) {\n    object.name = `${getSheetLikeString(sheet)}/${texture}`;\n  } else if (typeof texture === 'string') {\n    object.name = `${texture}`;\n  }\n  if (typeof texture === 'string') {\n    object.__textureString = texture;\n  }\n  if (Array.isArray(sheet)) {\n    object.__textureSheetArray = sheet;\n  } else if (sheet) {\n    object.__textureSheet = sheet;\n  }\n}\n\ntype DebouncedFunction<T extends (...args: any[]) => any> = (...args: Parameters<T>) => void;\n\n/**\n * Debounce a function\n * @param func - function to debounce\n * @param wait - time in milliseconds\n * @example const debounced = debounce(() => console.log('debounced'), 1000);\n * @example window.addEventListener('resize', debounced);\n */\nexport function debounce<T extends (...args: any[]) => any>(func: T, wait: number): DebouncedFunction<T> {\n  let timeoutId: any;\n  return function (...args: Parameters<T>) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n}\n","/**\n * Returns the map entry that comes before the entry with the provided key.\n * If the provided key is the first entry in the map or doesn't exist in the map, the function returns undefined.\n * @param {Map<K, V>} map The map to search in.\n * @param {any} currentKey The key of the map entry that comes after the desired entry.\n * @returns {[K, V] | undefined} The map entry that comes before the entry with the provided key, or undefined if such an entry doesn't exist.\n */\nexport function getPreviousMapEntry<K = any, V = any>(map: Map<K, V>, currentKey: any): [K, V] | undefined {\n  let previous: [any, any] | undefined;\n\n  for (const entry of map) {\n    if (entry[0] === currentKey) {\n      return previous;\n    }\n    previous = entry;\n  }\n  return undefined;\n}\n\n/**\n * Returns the last entry in the provided map.\n * If the map is empty, the function returns undefined.\n * @param {Map<K, V>} map The map to get the last entry from.\n * @returns {[K, V] | undefined} The last entry in the map, or undefined if the map is empty.\n */\nexport function getLastMapEntry<K = any, V = any>(map: Map<K, V>): [K, V] | undefined {\n  return Array.from(map.entries()).pop() as [K, V];\n}\n","/**\n * Clamp a number\n * @param pValue\n * @param pMin\n * @param pMax\n */\nexport function clamp(pValue: number, pMin: number, pMax: number): number {\n  return Math.max(pMin, Math.min(pMax, pValue));\n}\n\n/**\n * lerp\n * @param pMin\n * @param pMax\n * @param pPerc\n */\nexport function lerp(pMin: number, pMax: number, pPerc: number): number {\n  return pMin + (pMax - pMin) * pPerc;\n}\n","/**\n * Plucks the specified keys from an object and returns a new object with only those keys.\n * @template T The type of the original object.\n * @template K The keys to pluck from the original object.\n * @param {T} obj The original object.\n * @param {K[]} keys The keys to pluck from the original object.\n * @returns {Pick<T, K>} A new object with only the plucked keys.\n */\nexport function pluck<T extends object, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((acc, key) => (key in obj ? { ...acc, [key]: obj[key] } : acc), {} as Pick<T, K>);\n}\n\n/**\n * Omits the specified keys from an object and returns a new object without those keys.\n * @template T The type of the original object.\n * @template K The keys to omit from the original object.\n * @param {K[]} keysToOmit The keys to omit from the original object.\n * @param {Partial<T>} obj The original object.\n * @returns {Omit<T, K>} A new object without the omitted keys.\n */\nexport function omitKeys<T extends object, K extends keyof T>(keysToOmit: K[], obj: Partial<T>): Omit<T, K> {\n  return Object.entries(obj)\n    .filter(([key]) => !keysToOmit.includes(key as K))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {} as Omit<T, K>);\n}\n","type MethodNames = {\n  [key: string]: any;\n};\n\n/**\n * Binds the provided methods to the provided instance.\n * @param instance - The instance to which the methods should be bound.\n * @param methodNames - The names of the methods to bind.\n */\nexport function bindMethods(instance: unknown, ...methodNames: string[]) {\n  methodNames.forEach((methodName) => {\n    const method = (instance as MethodNames)[methodName];\n    if (typeof method === 'function') {\n      (instance as MethodNames)[methodName] = method.bind(instance);\n    }\n  });\n}\n\n/**\n * Retrieves the names of all methods in an instance's prototype chain.\n * @param instance - The instance from which to retrieve method names.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n * @returns An array of method names.\n */\nfunction getInstanceMethodNames(\n  instance: any,\n  excludePrefixes: string[] = [],\n  excludeMethodNames: string[] = [],\n): string[] {\n  let prototype = Object.getPrototypeOf(instance);\n  const methodNames: string[] = [];\n\n  while (prototype) {\n    const filteredMethodNames = Object.getOwnPropertyNames(prototype).filter((propertyName) => {\n      const ownDescriptor = Object.getOwnPropertyDescriptor(prototype, propertyName);\n      return (\n        typeof ownDescriptor?.value === 'function' &&\n        propertyName !== 'constructor' &&\n        !excludePrefixes.some((prefix) => propertyName.startsWith(prefix)) &&\n        !excludeMethodNames.includes(propertyName)\n      );\n    });\n\n    methodNames.push(...filteredMethodNames);\n\n    if (prototype === Object.prototype || Object.prototype.hasOwnProperty.call(prototype.constructor, '__dill_pixel_method_binding_root')) {\n      break;\n    }\n\n    prototype = Object.getPrototypeOf(prototype);\n  }\n\n  return methodNames;\n}\n\n/**\n * Binds all methods of an instance to the instance.\n * @param instance - The instance to which the methods should be bound.\n * @param excludePrefixes - An array of prefixes to exclude from the method names.\n * @param excludeMethodNames - An array of method names to exclude.\n */\nexport function bindAllMethods(instance: any, excludePrefixes: string[] = [], excludeMethodNames: string[] = []) {\n  getInstanceMethodNames(instance, excludePrefixes, excludeMethodNames).forEach((methodName) => {\n    instance[methodName] = instance[methodName].bind(instance);\n  });\n}\n\n/**\n * Checks if a method exists on an object and, if it does, invokes it with the provided arguments.\n * @param obj - The object on which to check for the method.\n * @param methodName - The name of the method to check for and invoke.\n * @param methodArgs - The arguments to pass to the method.\n */\nexport function checkAndInvokeMethod(obj: any, methodName: string, ...methodArgs: any[]): void {\n  if (typeof obj[methodName] === 'function') {\n    obj[methodName](...methodArgs);\n  }\n}\n","import type { Padding, PointLike } from './types';\n\nexport function resolvePadding(paddingNum: number, size: number) {\n  // check of the paddingNum is a decimal between 0 and 1\n  // if it is, return a number that is the percentage of the size\n  if (paddingNum >= 0 && paddingNum <= 1) {\n    return paddingNum * size;\n  }\n  return paddingNum;\n}\n\nexport function ensurePadding(padding: Partial<Padding> | PointLike): Padding {\n  if (Array.isArray(padding)) {\n    return {\n      top: padding[0],\n      right: padding?.[1] ?? padding[0],\n      bottom: padding?.[2] ?? padding[0],\n      left: padding?.[3] ?? padding?.[1] ?? padding[0] ?? 0,\n    };\n  }\n  if (typeof padding === 'number') {\n    return { top: padding, right: padding, bottom: padding, left: padding };\n  } else if (typeof padding === 'object') {\n    const paddingAsPointLike = padding as { x?: number; y?: number };\n    if (paddingAsPointLike.x !== undefined && paddingAsPointLike.y !== undefined) {\n      return {\n        top: paddingAsPointLike.y,\n        right: paddingAsPointLike.x,\n        bottom: paddingAsPointLike.y,\n        left: paddingAsPointLike.x,\n      };\n    } else {\n      return {\n        top: (padding as Padding).top ?? 0,\n        right: (padding as Padding).right ?? 0,\n        bottom: (padding as Padding).bottom ?? 0,\n        left: (padding as Padding).left ?? 0,\n      };\n    }\n  } else {\n    return { top: 0, right: 0, bottom: 0, left: 0 };\n  }\n}\n","import { isMobile as PIXIUtilsIsMobile } from 'pixi.js';\n\n/**\n * Checks if the device has a retina display.\n * A device is considered to have a retina display if its device pixel ratio is greater than 1,\n * or if it matches the media query for high resolution displays.\n * @type {boolean}\n */\nexport const isRetina =\n  window.devicePixelRatio > 1 ||\n  (window.matchMedia &&\n    window.matchMedia(\n      '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)',\n    ).matches);\n\n/**\n * Checks if the device is a mobile device.\n * This uses the `isMobile` function from the `@pixi/utils` package.\n * @type {boolean}\n */\nexport const isMobile = PIXIUtilsIsMobile.any;\n","import type {IApplication} from '../core';\nimport {Logger} from '../utils';\nimport type {IStorageAdapter} from './adapters';\n\n/**\n * Configuration for saving data with an adapter.\n */\ntype AdapterSaveConfig = {\n  adapterId: string;\n  awaitSave: boolean;\n};\n\n/**\n * Interface for the Store class.\n */\nexport interface IStore {\n  initialize(app: IApplication): IStore;\n\n  destroy(): void;\n\n  registerAdapter(adapter: IStorageAdapter, adapterOptions: any): void;\n\n  getAdapter<T extends IStorageAdapter>(adapterId: string): T;\n\n  hasAdapter(adapterId: string): boolean;\n\n  save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave?: boolean,\n  ): Promise<any>;\n\n  load(adapterId: string, key: string): Promise<any>;\n}\n\n/**\n * A class representing a store of data, with multiple storage adapters.\n */\nexport class Store implements IStore {\n  private _app: IApplication;\n  private _adapters: Map<string, IStorageAdapter> = new Map<string, IStorageAdapter>();\n\n  /**\n   * Registers a new storage adapter with the store.\n   * @param {IStorageAdapter} adapter The adapter to register.\n   * @param {any} adapterOptions The options to initialize the adapter with.\n   * @returns {Promise<void>} A promise that resolves when the adapter has been registered and initialized.\n   */\n  async registerAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<void> {\n    if (this._adapters.has(adapter.id)) {\n      Logger.error(`Storage Adapter with id \"${adapter.id}\" already registered. Not registering.`);\n      return Promise.resolve();\n    }\n    this._adapters.set(adapter.id, adapter);\n    await adapter.initialize(this._app, adapterOptions);\n  }\n\n  /**\n   * Retrieves a registered storage adapter.\n   * @template T The type of the adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {T} The adapter.\n   */\n  getAdapter<T extends IStorageAdapter>(adapterId: string): T {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return adapter as T;\n  }\n\n  /**\n   * Checks if a storage adapter is registered.\n   * @param {string} adapterId The ID of the adapter.\n   * @returns {boolean} True if the adapter is registered, false otherwise.\n   */\n  hasAdapter(adapterId: string): boolean {\n    return this._adapters.has(adapterId);\n  }\n\n  /**\n   * Destroys the store and all its adapters.\n   */\n  destroy(): void {\n    this._adapters.forEach((adapter) => {\n      adapter.destroy();\n    });\n    this._adapters.clear();\n  }\n\n  /**\n   * Saves data with a storage adapter.\n   * @param {string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[]} adapterId The ID of the adapter, or an array of IDs, or an array of save configurations.\n   * @param {string} key The key to save the data under.\n   * @param {any} data The data to save.\n   * @param {boolean} [awaitSave] Whether to wait for the save operation to complete before returning.\n   * @returns {Promise<any>} A promise that resolves with the result of the save operation.\n   */\n  async save(\n    adapterId: string | string[] | Partial<AdapterSaveConfig> | Partial<AdapterSaveConfig>[],\n    key: string,\n    data: any,\n    awaitSave = true,\n  ): Promise<any> {\n    let keys: string[] | Partial<AdapterSaveConfig>[] = [];\n    const result = [];\n\n    if (!Array.isArray(adapterId)) {\n      if (typeof adapterId === 'object') {\n        keys = [adapterId];\n      } else {\n        keys = [adapterId as string];\n      }\n    }\n\n    if ((keys[0] as string) === '*' || (keys[0] as Partial<AdapterSaveConfig>)?.adapterId === '*') {\n      // use all adapter\n      keys = Array.from(this._adapters.keys());\n    }\n    for (let i = 0; i < keys.length; i++) {\n      let aKey: string;\n      let shouldAwait: boolean = false;\n      if (typeof keys[i] === 'object') {\n        const obj = keys[i] as Partial<AdapterSaveConfig>;\n        aKey = obj.adapterId as string;\n        shouldAwait = obj.awaitSave ?? false;\n      } else {\n        aKey = keys[i] as unknown as string;\n        shouldAwait = awaitSave;\n      }\n      const adapter = this._adapters.get(aKey);\n      if (!adapter) {\n        throw new Error(`Adapter ${keys[i]} not found`);\n      }\n\n      if (shouldAwait) {\n        result.push(await adapter.save(key, data));\n      } else {\n        result.push(void adapter.save(key, data));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Loads data from a storage adapter.\n   * @param {string} adapterId The ID of the adapter.\n   * @param {string} key The key to load the data from.\n   * @returns {Promise<any>} A promise that resolves with the loaded data.\n   */\n  public async load(adapterId: string, key: string): Promise<any> {\n    const adapter = this._adapters.get(adapterId);\n    if (!adapter) {\n      throw new Error(`Adapter ${adapterId} not found`);\n    }\n    return await adapter.load(key);\n  }\n\n  public initialize(app: IApplication): IStore {\n    this._app = app;\n    return this;\n  }\n}\n","import type { ICoreFunctions, ICoreSignals } from './interfaces';\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreSignalRegistry: { [K in keyof ICoreSignals]: ICoreSignals[K] } = {};\n\n// @ts-expect-error - we don't know what the keys are, so we can't type them\nexport const coreFunctionRegistry: { [K in keyof ICoreFunctions]: ICoreFunctions[K] } = {};\n","// This file is auto-generated during the build process.\nexport const version: string = '8.7.0';\nexport const pixiVersion: string = '8.1.5';\n","import { pixiVersion, version } from './version';\n\nexport function sayHello() {\n  const hello = `%c Dill Pixel Game Framework v${version} | %cPixi.js v${pixiVersion} %c| %chttps://dillpixel.io `;\n  console.log(\n    hello,\n    'background: rgba(31, 41, 55, 1);color: #74b64c',\n    'background: rgba(31, 41, 55, 1);color: #e91e63',\n    'background: rgba(31, 41, 55, 1);color: #74b64c',\n    'background: rgba(31, 41, 55, 1);color: #74b64c; font-weight: bold',\n  );\n}\n","import { sayHello } from '../hello';\nimport { delay } from '../utils';\nimport { IApplication } from './interfaces';\nimport { AppConfig } from './types';\nimport { Application } from '../Application';\n\nexport const DEFAULT_GAME_CONTAINER_ID = 'dill-pixel-game-container';\n\nexport function createContainer(id: string) {\n  const container = document.createElement('div');\n  container.setAttribute('id', id);\n  document.body.appendChild(container);\n  return container;\n}\n\nexport async function create(\n  config: AppConfig = { id: 'DillPixelApplication' },\n  ApplicationClass: new () => IApplication = Application,\n  domElement: string | Window | HTMLElement = DEFAULT_GAME_CONTAINER_ID,\n  speak: boolean = true,\n): Promise<IApplication> {\n  if (speak) {\n    sayHello();\n  }\n  let el: HTMLElement | null = null;\n  if (typeof domElement === 'string') {\n    el = document.getElementById(domElement);\n    if (!el) {\n      el = createContainer(domElement);\n    }\n  } else if (domElement instanceof HTMLElement) {\n    el = domElement;\n  } else if (domElement === window) {\n    el = document.body;\n  }\n  if (!el) {\n    // no element to use\n    throw new Error(\n      'You passed in a DOM Element, but none was found. If you instead pass in a string, a container will be created for you, using the string for its id.',\n    );\n  }\n  if (config.resizeToContainer) {\n    config.resizeTo = el;\n  }\n  config.container = el;\n  const instance = new ApplicationClass();\n  await instance.initialize(config);\n  if (el) {\n    el.appendChild(instance.canvas as HTMLCanvasElement);\n    instance.setContainer(el);\n  } else {\n    throw new Error('No element found to append the view to.');\n  }\n  // ensure all plugins are initialized\n  await delay(0.01);\n\n  // call postInitialize on the instance\n  await instance.postInitialize();\n\n  // return th app instance\n  return instance as unknown as IApplication;\n}\n","import type { IApplication, ICoreFunctions, ICoreSignals } from '../core';\nimport { coreFunctionRegistry, coreSignalRegistry } from '../core';\nimport { SignalConnection, SignalConnections } from '../signals';\nimport { bindAllMethods } from '../utils';\nimport { Application } from '../Application';\n\nexport interface IPlugin {\n  id: string;\n\n  app: IApplication;\n\n  initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  postInitialize(_app: IApplication): Promise<void> | void;\n\n  destroy(): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n\n  clearSignalConnections(): void;\n\n  registerCoreFunctions(): void;\n\n  registerCoreSignals(): void;\n}\n\nexport class Plugin<T extends Application = Application> implements IPlugin {\n  // A collection of signal connections.\n  __dill_pixel_method_binding_root: boolean;\n  protected _signalConnections: SignalConnections = new SignalConnections();\n\n  constructor(public id: string = 'Plugin') {\n    bindAllMethods(this);\n    this.__dill_pixel_method_binding_root = true;\n  }\n\n  public get app(): T {\n    return Application.getInstance<T>();\n  }\n\n  public destroy(): void {\n    this._signalConnections.disconnectAll();\n  }\n\n  public initialize(_app: IApplication, options?: any): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async initialize(_app: IApplication, _options?: any): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  public postInitialize(_app: IApplication): Promise<void> | void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async postInitialize(_app: IApplication): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * Add signal connections to the container.\n   * @param args - The signal connections to add.\n   */\n  public addSignalConnection(...args: SignalConnection[]) {\n    for (const connection of args) {\n      this._signalConnections.add(connection);\n    }\n  }\n\n  public clearSignalConnections() {\n    this._signalConnections.disconnectAll();\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreFunctions(): void {\n    const functions = this.getCoreFunctions();\n    functions.forEach((f) => {\n      const fName = f as keyof ICoreFunctions;\n      // @ts-expect-error implicit any\n      coreFunctionRegistry[fName] = this[f];\n    });\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  public registerCoreSignals(): void {\n    const signals = this.getCoreSignals();\n    signals.forEach((s) => {\n      const sName = s as keyof ICoreSignals;\n      // @ts-expect-error implicit any\n      coreSignalRegistry[sName] = this[s];\n    });\n  }\n\n  protected getCoreFunctions(): string[] {\n    return [];\n  }\n\n  protected getCoreSignals(): string[] {\n    return [];\n  }\n}\n","import type {Application} from '../../Application';\nimport {IPlugin, Plugin} from '../../plugins/Plugin';\n\n/**\n * Interface for a storage adapter module.\n */\nexport interface IStorageAdapter extends IPlugin {\n  /**\n   * Saves data under a specified key.\n   * @param _key\n   * @param _data\n   * @param _rest\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   */\n  save(_key: string, _data: any, ..._rest: any[]): Promise<void> | void;\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   * @param _key\n   */\n  load<T = any>(_key: string): Promise<T> | T | null;\n}\n\n/**\n * A class representing a storage adapter module.\n * @template T The type of the application that the module belongs to.\n */\nexport class StorageAdapter<T extends Application = Application> extends Plugin<T> implements IStorageAdapter {\n  /**\n   * Creates a new StorageAdapter.\n   * @param {string} id The ID of the adapter. Default is 'StorageAdapter'.\n   */\n  constructor(public readonly id: string = 'StorageAdapter') {\n    super(id);\n  }\n\n  /**\n   * Loads data from a specified key.\n   * @template T The type of the data to load.\n   * @param {string} _key The key from which to load the data.\n   * @returns {Promise<T> | T | null} A promise that resolves with the loaded data, or the loaded data if the load operation is synchronous, or null if no data was found.\n   */\n  load<T = any>(_key: string): Promise<T> | T | null;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async load<T = any>(_key: string): Promise<T | null> {\n    return null;\n  }\n\n  /**\n   * Saves data under a specified key.\n   * @returns {Promise<void> | void} A promise that resolves when the data has been saved, or void if the save operation is synchronous.\n   * @param _key\n   * @param _data\n   * @param _rest\n   */\n\n  save(_key: string, _data: any, ..._rest: any[]): Promise<void> | void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async save(_key: string, _data: any, ..._rest: any[]): Promise<void> {\n    return;\n  }\n}\n","import type {IApplication} from '../../core';\nimport {Logger} from '../../utils';\nimport {StorageAdapter} from './StorageAdapter';\n\n/**\n * Interface for the options of the LocalStorageAdapter.\n */\nexport interface ILocalStorageAdapterOptions {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  namespace?: string;\n}\n\n/**\n * A class representing a storage adapter that uses the local storage.\n */\nexport class LocalStorageAdapter extends StorageAdapter {\n  /**\n   * The namespace to use for the keys in the local storage.\n   */\n  public namespace: string = '';\n\n  constructor(public readonly id: string = 'localStorage') {\n    super(id);\n  }\n\n  /**\n   * Gets the prefix to use for the keys in the local storage.\n   * @returns {string} The prefix.\n   */\n  get prefix(): string {\n    return this.namespace ? `${this.namespace}_` : '';\n  }\n\n  /**\n   * Destroys the adapter.\n   */\n  destroy() {}\n\n  /**\n   * Initializes the adapter.\n   * @param {IApplication} _app The application that the adapter belongs to.\n   * @param {Partial<ILocalStorageAdapterOptions>} options The options to initialize the adapter with.\n   */\n  public initialize(_app: IApplication, options?: Partial<ILocalStorageAdapterOptions>): void {\n    Logger.log('LocalStorageAdapter initialized');\n    this.namespace = options?.namespace || '';\n  }\n\n  /**\n   * Saves data under a specified key in the local storage.\n   * @param {string} key The key under which to save the data.\n   * @param {any} data The data to save.\n   * @returns {any} The saved data.\n   */\n  save(key: string, data: any): any {\n    localStorage.setItem(`${this.prefix}${key}`, JSON.stringify(data));\n    return JSON.stringify(data);\n  }\n\n  /**\n   * Loads data from a specified key in the local storage.\n   * @template T The type of the data to load.\n   * @param {string} key The key from which to load the data.\n   * @returns {T} The loaded data.\n   */\n  load<T = any>(key: string): T {\n    const data = localStorage.getItem(`${this.prefix}${key}`);\n    return (data ? JSON.parse(data) : null) as T;\n  }\n\n  /**\n   * Deletes data from a specified key in the local storage.\n   * @param {string} key The key from which to delete the data.\n   */\n  clear(key: string) {\n    localStorage.deleteItem(`${this.prefix}${key}`);\n  }\n}\n","import type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\nimport type { AssetsPreferences, ResolvedAsset, UnresolvedAsset } from 'pixi.js';\nimport { Assets } from 'pixi.js';\nimport type { IScene } from '../display';\nimport { Signal } from '../signals';\nimport { IApplication } from '../core';\nimport { AssetLike, AssetLoadingOptions, AssetTypes, BundleTypes, isDev, Logger, SceneImportListItem } from '../utils';\n\nexport interface IAssetsPlugin extends IPlugin {\n  onLoadStart: Signal<() => void>;\n  onLoadProgress: Signal<(progress: number) => void>;\n  onLoadComplete: Signal<() => void>;\n\n  loadAssets(assets: string | string[] | UnresolvedAsset | UnresolvedAsset[] | AssetLike | AssetLike[]): Promise<void>;\n\n  loadBundles(bundle: string | string[]): Promise<void>;\n\n  loadSceneAssets(scene: IScene | SceneImportListItem<any>, background?: boolean): Promise<void>;\n\n  unloadSceneAssets(scene: IScene | SceneImportListItem<any>): Promise<void>;\n\n  loadRequired(): Promise<void>;\n\n  loadBackground(): void;\n}\n\nconst detaultAssetPreferences: Partial<AssetsPreferences> = {\n  preferWorkers: !isDev,\n  crossOrigin: 'anonymous',\n};\n\nconst imageExtensions = ['png', 'jpg', 'jpeg', 'webp', 'gif', 'avif', 'svg'];\n\nfunction getAssetList(assets: AssetTypes): UnresolvedAsset[] | string[] {\n  if (!Array.isArray(assets)) {\n    assets = [assets];\n  }\n  return assets.map((asset: string | UnresolvedAsset | AssetLike) => {\n    if (typeof asset === 'string') {\n      return asset;\n    } else if (typeof asset === 'object') {\n      let alias: string | string[] = (asset?.src as string | string[]) || [];\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      if (asset.ext) {\n        if (asset.src && !Array.isArray(asset.src)) {\n          alias.push(asset.src as string);\n          if (\n            imageExtensions.includes(asset.ext) &&\n            asset?.src?.indexOf('@1x') === -1 &&\n            asset?.src?.indexOf('0.5x') === -1\n          ) {\n            asset.src = [`${asset.src}@0.5x`, `${asset.src}@1x`, asset.src];\n          } else {\n            asset.src = [asset.src];\n          }\n        }\n        asset.src = (asset.src as string[]).map((src: string) => {\n          return `${src}.${asset.ext}`;\n        });\n        asset.alias = [...alias, ...(asset.src as string[])].filter(Boolean);\n      }\n      return asset;\n    }\n  });\n}\n\nexport class AssetsPlugin extends Plugin implements IAssetsPlugin {\n  public readonly id: string = 'assets';\n  public onLoadStart: Signal<() => void> = new Signal();\n  public onLoadProgress: Signal<(progress: number) => void> = new Signal();\n  public onLoadComplete: Signal<() => void> = new Signal();\n\n  private _loadedBundles: Set<string> = new Set();\n  private _loadedAssets: Set<string | UnresolvedAsset> = new Set();\n\n  private _required: { assets?: AssetTypes; bundles?: BundleTypes } = {};\n  private _background: { assets?: AssetTypes; bundles?: BundleTypes } = {};\n\n  public initialize(_app: IApplication, options?: AssetLoadingOptions): Promise<void> | void {\n    if (options?.preload) {\n      this._required = options.preload;\n    }\n    if (options?.background) {\n      this._background = options.background;\n    }\n    Assets.setPreferences({ ...detaultAssetPreferences, ...options?.assetPreferences });\n    Logger.log('AssetsPlugin initialized', _app, options, this._required);\n  }\n\n  public async loadRequired() {\n    this._handleLoadStart();\n    this._handleLoadProgress(0);\n    if (this._required) {\n      if (this._required.assets) {\n        await Assets.load(getAssetList(this._required.assets), this._handleLoadProgress);\n      }\n      if (this._required.bundles) {\n        await Assets.loadBundle(this._required.bundles, this._handleLoadProgress);\n      }\n    }\n    this._handleLoadComplete();\n    return Promise.resolve();\n  }\n\n  public loadBackground() {\n    if (this._background) {\n      if (this._background.assets) {\n        getAssetList(this._background.assets).forEach((asset) => {\n          if ((asset as UnresolvedAsset)?.src) {\n            const src = (asset as UnresolvedAsset).src as string[];\n            if (src) {\n              return Assets.backgroundLoad(src);\n            }\n          }\n          return Assets.backgroundLoad(asset as string);\n        });\n      }\n      if (this._background.bundles) {\n        void Assets.backgroundLoadBundle(this._background.bundles);\n      }\n    }\n  }\n\n  public async loadAssets(assets: AssetTypes) {\n    assets = getAssetList(assets);\n    await Assets.load(assets, this._handleLoadProgress);\n    this._markAssetsLoaded(assets as UnresolvedAsset[] | string[]);\n    return Promise.resolve();\n  }\n\n  public async loadBundles(bundles: string | string[]) {\n    await Assets.loadBundle(bundles, this._handleLoadProgress);\n    this._markBundlesLoaded(bundles);\n    return Promise.resolve();\n  }\n\n  public async unloadSceneAssets(scene: IScene | SceneImportListItem<any>) {\n    if (scene.assets?.preload?.assets) {\n      const assets = getAssetList(scene.assets.preload.assets);\n      void Assets.unload(assets as ResolvedAsset[] | string[]).then(() => {\n        this._markAssetsUnloaded(assets);\n      });\n    }\n    if (scene.assets?.preload?.bundles) {\n      const bundles = scene.assets.preload.bundles;\n      void Assets.unloadBundle(bundles).then(() => {\n        this._markBundlesUnloaded(bundles);\n      });\n    }\n    return Promise.resolve();\n  }\n\n  public async loadSceneAssets(scene: IScene | SceneImportListItem<any>, background = false) {\n    if (background) {\n      if (scene.assets?.background) {\n        if (scene.assets.background.assets) {\n          const assets = getAssetList(scene.assets.background.assets);\n          const filteredAssets = assets.filter((asset: string | UnresolvedAsset) => !this._isAssetLoaded(asset));\n          if (filteredAssets.length) {\n            filteredAssets.forEach((asset) => {\n              if ((asset as UnresolvedAsset)?.src) {\n                const src = (asset as UnresolvedAsset).src as string[];\n                if (src) {\n                  return Assets.backgroundLoad(src);\n                }\n              }\n              return Assets.backgroundLoad(asset as string);\n            });\n          }\n        }\n        if (scene.assets.background.bundles) {\n          let bundles = Array.isArray(scene.assets.background.bundles)\n            ? scene.assets.background.bundles\n            : [scene.assets.background.bundles];\n          bundles = bundles.filter((bundle) => !this._isBundleLoaded(bundle));\n          if (bundles.length) {\n            void Assets.backgroundLoadBundle(bundles);\n          }\n        }\n      }\n    } else {\n      this._handleLoadStart();\n      this._handleLoadProgress(0);\n      if (scene.assets?.preload?.assets) {\n        const assets = getAssetList(scene.assets.preload.assets);\n        const filteredAssets = assets.filter((asset) => !this._isAssetLoaded(asset));\n        Logger.log('filteredAssets', filteredAssets);\n        if (filteredAssets.length) {\n          await Assets.load(filteredAssets, this._handleLoadProgress);\n          this._markAssetsLoaded(assets);\n        }\n      }\n      if (scene.assets?.preload?.bundles) {\n        let bundles: string[] = Array.isArray(scene.assets.preload.bundles)\n          ? scene.assets.preload.bundles\n          : [scene.assets.preload.bundles];\n        bundles = bundles.filter((bundle) => !this._isBundleLoaded(bundle));\n        if (bundles.length) {\n          await Assets.loadBundle(bundles, this._handleLoadProgress);\n          this._markBundlesLoaded(bundles);\n        }\n      }\n      this._handleLoadComplete();\n    }\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['loadSceneAssets', 'unloadSceneAssets', 'loadAssets', 'loadBundles', 'loadRequired'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onLoadStart', 'onLoadProgress', 'onLoadComplete'];\n  }\n\n  private _isAssetLoaded(alias: string | UnresolvedAsset) {\n    return this._loadedAssets.has(alias);\n  }\n\n  private _isBundleLoaded(alias: string) {\n    return this._loadedBundles.has(alias);\n  }\n\n  private _markAssetsLoaded(urls: UnresolvedAsset[] | string[]) {\n    urls.forEach((url) => {\n      this._loadedAssets.add(url);\n    });\n  }\n\n  private _markBundlesLoaded(aliases: string[] | string) {\n    if (!Array.isArray(aliases)) {\n      aliases = [aliases];\n    }\n    aliases.forEach((alias) => {\n      this._loadedBundles.add(alias);\n    });\n  }\n\n  private _markAssetsUnloaded(urls: string[] | string | UnresolvedAsset | UnresolvedAsset[]) {\n    if (!Array.isArray(urls)) {\n      urls = [urls];\n    }\n    urls.forEach((url: string | UnresolvedAsset) => {\n      this._loadedAssets.delete(url);\n    });\n  }\n\n  private _markBundlesUnloaded(aliases: string[] | string) {\n    if (!Array.isArray(aliases)) {\n      aliases = [aliases];\n    }\n    aliases.forEach((alias) => {\n      this._loadedBundles.delete(alias);\n    });\n  }\n\n  private _handleLoadStart() {\n    Logger.log('AssetsPlugin:: onLoadStart');\n    this.onLoadStart.emit();\n  }\n\n  private _handleLoadProgress(progress: number) {\n    Logger.log('AssetsPlugin:: onLoadProgress', progress);\n    this.onLoadProgress.emit(progress);\n  }\n\n  private _handleLoadComplete() {\n    this._handleLoadProgress(1);\n    Logger.log('AssetsPlugin:: onLoadComplete');\n    this.onLoadComplete.emit();\n  }\n}\n","import { Application } from '../Application';\nimport { Signal } from '../signals';\nimport type { Size } from '../utils';\nimport { bindAllMethods } from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\nexport interface IWebEventsPlugin extends IPlugin {\n  onResize: Signal<(size: { width: number; height: number }) => void>;\n  onVisibilityChanged: Signal<(visible: boolean) => void>;\n}\n\n/**\n * Maintains a list of callbacks for specific web events and invokes callbacks when event occurs.\n */\nexport class WebEventsPlugin extends Plugin implements IWebEventsPlugin {\n  public readonly id = 'webEvents';\n\n  // signals\n  public onResize: Signal<(size: Size) => void> = new Signal<(size: Size) => void>();\n  public onVisibilityChanged: Signal<(visible: boolean) => void> = new Signal<(visible: boolean) => void>();\n\n  /**\n   * Creates callback arrays and registers to web events.\n   */\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  get app(): Application {\n    return Application.getInstance();\n  }\n\n  public initialize(): void {\n    document.addEventListener('visibilitychange', this._onVisibilityChanged, false);\n    window.addEventListener('pagehide', this._onPageHide, false);\n    window.addEventListener('pageshow', this._onPageShow, false);\n    window.addEventListener('resize', this._onResize);\n    document.addEventListener('fullscreenchange', this._onResize);\n  }\n\n  public destroy() {\n    document.removeEventListener('visibilitychange', this._onVisibilityChanged, false);\n    window.removeEventListener('resize', this._onResize);\n    document.removeEventListener('fullscreenchange', this._onResize);\n    window.removeEventListener('pagehide', this._onPageHide, false);\n    window.removeEventListener('pageshow', this._onPageShow, false);\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onResize', 'onVisibilityChanged'];\n  }\n\n  /**\n   * Called when the browser visibility changes. Passes the `hidden` flag of the document to all callbacks.\n   */\n  private _onVisibilityChanged(): void {\n    this.onVisibilityChanged.emit(!document.hidden);\n  }\n\n  /**\n   * Called when the browser resizes.\n   */\n  private _onResize(): void {\n    const el = this.app.renderer.canvas?.parentElement;\n    let screenWidth = window.innerWidth;\n    let screenHeight = window.innerHeight;\n    if (el && el?.getBoundingClientRect()) {\n      screenWidth = el.offsetWidth;\n      screenHeight = el.offsetHeight;\n    }\n    this.onResize.emit({ width: screenWidth, height: screenHeight });\n  }\n\n  /**\n   * Called when the page is hidden.\n   * Some browsers (like Safari) don't support the `visibilitychange` event, so we also listen for `pagehide`.\n   * We're just mimicking the `visibilitychange` event here.\n   */\n  private _onPageHide() {\n    this.onVisibilityChanged.emit(false);\n  }\n\n  /**\n   * Called when the page is shown.\n   * Some browsers (like Safari) don't support the `visibilitychange` event, so we also listen for `pageshow`.\n   * We're just mimicking the `visibilitychange` event here.\n   * @private\n   */\n  private _onPageShow() {\n    this.onVisibilityChanged.emit(true);\n  }\n}\n","import { Container } from 'pixi.js';\nimport type { IApplication } from '../core';\nimport { Application } from '../Application';\nimport type { IScene } from '../display';\nimport { Signal } from '../signals';\nimport type { Constructor, SceneImportList } from '../utils';\nimport { bindAllMethods, createQueue, getDynamicModuleFromImportListItem, isDev, Logger, Queue } from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\nexport interface ISceneManagerPlugin extends IPlugin {\n  isFirstScene: boolean;\n  onSceneChangeStart: Signal<(detail: { exiting: string | null; entering: string }) => void>;\n  onSceneChangeComplete: Signal<(detail: { current: string }) => void>;\n  loadScreen?: IScene;\n  view: Container;\n  scenes: SceneImportList<IScene>;\n  currentScene: IScene;\n\n  setDefaultLoadMethod(method: LoadSceneMethod): void;\n\n  loadDefaultScene(): Promise<void>;\n\n  loadScene(sceneIdOrLoadSceneConfig: LoadSceneConfig | string): Promise<void>;\n}\n\nexport type LoadSceneMethod =\n  | 'immediate'\n  | 'exitEnter'\n  | 'enterExit'\n  | 'enterBehind'\n  | 'interStitialExitEnter'\n  | 'exitInterstitialEnter';\n\nexport type LoadSceneConfig = {\n  id: string;\n  method?: LoadSceneMethod;\n};\n\nexport class SceneManagerPlugin extends Plugin implements ISceneManagerPlugin {\n  public readonly id: string = 'scenes';\n  public onSceneChangeStart: Signal<(detail: { exiting: string | null; entering: string }) => void> = new Signal<\n    (detail: { exiting: string | null; entering: string }) => void\n  >();\n  public onSceneChangeComplete: Signal<(detail: { current: string }) => void> = new Signal<\n    (detail: { current: string }) => void\n  >();\n  // TODO: loadScreen is a special scene that can be used right after the application starts\n  public loadScreen?: IScene;\n  // view container - gets added to the stage\n  public view: Container = new Container();\n  // maybe the user wants the enter animation to be different for the first scene\n  public isFirstScene: boolean = true;\n\n  // scene management\n  public scenes: SceneImportList<IScene> = [];\n  public currentScene: IScene;\n  public defaultScene: string;\n  private _sceneModules: Map<string, Constructor<IScene>> = new Map();\n  //\n  private _lastScene: IScene | null = null;\n  private _queue: Queue<any> | null;\n  private _defaultLoadMethod: LoadSceneMethod = 'immediate';\n  private _currentSceneId: string;\n  // debug\n  private _debugVisible: boolean = false;\n  private _debugMenu: HTMLDivElement;\n\n  // debug\n  private _sceneSelect: HTMLSelectElement;\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  public setDefaultLoadMethod(method: LoadSceneMethod) {\n    this._defaultLoadMethod = method;\n  }\n\n  public destroy(): void {}\n\n  public initialize(app: IApplication): Promise<void> {\n    this._debugVisible =\n      this.app.config?.showSceneDebugMenu === true || (isDev && this.app.config?.showSceneDebugMenu !== false);\n    this.view.sortableChildren = true;\n    this.scenes = app.config?.scenes || [];\n    if (this._debugVisible) {\n      this.defaultScene = this._getSceneFromHash() || '';\n    }\n    this.defaultScene = this.defaultScene || app.config?.defaultScene || this.scenes?.[0]?.id;\n    this._defaultLoadMethod = app.config.defaultSceneLoadMethod || 'immediate';\n    Logger.log('SceneManager initialize::', this.scenes);\n\n    if (this._debugVisible) {\n      this._createDebugMenu();\n    }\n    return Promise.resolve(undefined);\n  }\n\n  public async loadDefaultScene(): Promise<void> {\n    await this.app.assets.loadRequired();\n    return this.loadScene(this.defaultScene);\n  }\n\n  public async loadScene(sceneIdOrLoadSceneConfig: string): Promise<void>;\n\n  public async loadScene(sceneIdOrLoadSceneConfig: LoadSceneConfig | string): Promise<void> {\n    if (this._queue) {\n      // TODO: maybe allow halting the queue and starting a fresh scene load\n      // for now, just ignore the request until the queue finishes\n      return;\n    }\n\n    this._lastScene = null;\n    const newSceneId =\n      typeof sceneIdOrLoadSceneConfig === 'string' ? sceneIdOrLoadSceneConfig : sceneIdOrLoadSceneConfig.id;\n\n    const method =\n      typeof sceneIdOrLoadSceneConfig === 'string'\n        ? this._defaultLoadMethod\n        : sceneIdOrLoadSceneConfig?.method || this._defaultLoadMethod;\n\n    if (this.currentScene) {\n      this._lastScene = this.currentScene;\n    }\n\n    // check if the scene item exists\n    const sceneItem = this.scenes.find((scene) => scene.id === newSceneId);\n    if (!sceneItem) {\n      throw new Error(`Scene item not found  for id ${newSceneId}`);\n    }\n\n    if (sceneItem?.plugins?.length) {\n      for (const plugin of sceneItem.plugins) {\n        const pluginListItem = this.app.getUnloadedPlugin(plugin);\n        if (pluginListItem) {\n          await this.app.loadPlugin(pluginListItem);\n        }\n      }\n    }\n\n    this._currentSceneId = newSceneId;\n\n    // found a scene item\n    this._queue = createQueue(this._createCurrentScene);\n\n    // TODO: finish adding scene changing behaviours\n    // TODO: add loading assets into this queue\n    // TODO: add progress updates\n    switch (method) {\n      case 'exitEnter':\n        this._queue.add(\n          this._exitLastScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'enterExit':\n        this._queue.add(\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n        );\n        break;\n      case 'enterBehind':\n        this._queue.add(\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentSceneBehind,\n          this._enterCurrentScene,\n          this._exitLastScene,\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._startCurrentScene,\n        );\n        break;\n      case 'immediate':\n      default:\n        this._queue.add(\n          this._destroyLastScene,\n          this._unloadLastScene,\n          this._loadCurrentScene,\n          this._initializeCurrentScene,\n          this._addCurrentScene,\n          this._enterCurrentScene,\n          this._startCurrentScene,\n        );\n        break;\n    }\n\n    this._queue.add(this._queueComplete);\n    this._queue.start();\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onSceneChangeStart', 'onSceneChangeComplete'];\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['loadScene'];\n  }\n\n  private async _createCurrentScene() {\n    const sceneItem = this.scenes.find((scene) => scene.id === this._currentSceneId)!;\n    let SceneClass: Constructor<IScene> | undefined = undefined;\n\n    if (this._sceneModules.has(this._currentSceneId)) {\n      SceneClass = this._sceneModules.get(this._currentSceneId);\n    } else {\n      const module = await getDynamicModuleFromImportListItem(sceneItem);\n      if (!module) {\n        throw new Error(`Couldn't load ${this._currentSceneId}\"`);\n      }\n\n      if ((module as any)[this._currentSceneId]) {\n        SceneClass = (module as any)[this._currentSceneId];\n      } else {\n        SceneClass = module;\n      }\n\n      if (SceneClass) {\n        this._sceneModules.set(this._currentSceneId, SceneClass);\n      }\n    }\n\n    if (!SceneClass) {\n      throw new Error(`Couldn't load ${this._currentSceneId}\"`);\n    }\n\n    this.currentScene = new SceneClass();\n    this.currentScene.id = this._currentSceneId;\n    if (sceneItem?.assets) {\n      this.currentScene.assets = sceneItem.assets;\n    }\n    if (sceneItem.autoUnloadAssets !== undefined) {\n      this.currentScene.autoUnloadAssets = sceneItem.autoUnloadAssets;\n    }\n\n    this.onSceneChangeStart.emit({ exiting: this._lastScene?.id || null, entering: this.currentScene.id });\n  }\n\n  private _queueComplete() {\n    if (this.isFirstScene) {\n      // background required assets\n      this.app.assets.loadBackground();\n    }\n    this.isFirstScene = false;\n\n    // load any background assets for the current scene\n    void this.app.assets.loadSceneAssets(this.currentScene, true);\n\n    this._lastScene = null;\n    this.onSceneChangeComplete.emit({ current: this.currentScene.id });\n    this._queue = null;\n    return Promise.resolve();\n  }\n\n  private async _destroyLastScene(): Promise<void> {\n    if (!this._lastScene) {\n      return Promise.resolve();\n    }\n    this.view.removeChild(this._lastScene as any);\n    this._lastScene.destroy();\n    return Promise.resolve();\n  }\n\n  private async _exitLastScene(): Promise<void> {\n    if (!this._lastScene) {\n      return Promise.resolve();\n    }\n    await this._lastScene.exit();\n    return Promise.resolve();\n  }\n\n  private async _loadCurrentScene(): Promise<any> {\n    await this.app.assets.loadSceneAssets(this.currentScene);\n  }\n\n  private async _unloadLastScene(): Promise<any> {\n    if (this._lastScene && this._lastScene.autoUnloadAssets) {\n      return this.app.assets.unloadSceneAssets(this._lastScene);\n    }\n    return Promise.resolve();\n  }\n\n  private async _initializeCurrentScene(): Promise<void> {\n    await this.currentScene.initialize();\n\n    // wait one tick so everything in the scene has had a chance to render before triggering the resize\n    this.app.ticker.addOnce(() => {\n      this.currentScene.resize(this.app.size);\n    });\n\n    return Promise.resolve();\n  }\n\n  private _addCurrentScene(): Promise<void> {\n    this.view.addChild(this.currentScene as any);\n    return Promise.resolve();\n  }\n\n  private _addCurrentSceneBehind(): Promise<void> {\n    this.view.addChildAt(this.currentScene as any, 0);\n    return Promise.resolve();\n  }\n\n  private async _enterCurrentScene(): Promise<void> {\n    await this.currentScene.enter();\n    return Promise.resolve();\n  }\n\n  private async _startCurrentScene(): Promise<void> {\n    void this.currentScene.start();\n    return Promise.resolve();\n  }\n\n  private _createDebugMenu() {\n    this._debugMenu = document.createElement('div');\n    this._debugMenu.style.cssText =\n      'position: absolute; bottom: 0; left:0; width:48px; height:48px; z-index: 1000; background-color:rgba(0,0,0,0.8); color:white; border-top-right-radius:8px;';\n    const icon = document.createElement('i');\n    icon.style.cssText =\n      'cursor:pointer; position:absolute;width:100%; font-style:normal; font-size:20px; top:50%; left:50%; transform:translate(-50%, -50%); text-align:center; pointer-events:none';\n    icon.innerHTML = '🎬';\n    this._debugMenu.appendChild(icon);\n\n    (Application.containerElement || document.body).appendChild(this._debugMenu);\n\n    this._sceneSelect = document.createElement('select');\n    this._sceneSelect.style.cssText =\n      'padding:0; border-radius:5px; opacity:0; width:48px; height:48px; cursor:pointer';\n    this._sceneSelect.value = this.defaultScene || '';\n\n    const defaultOption = document.createElement('option');\n    defaultOption.value = '';\n    defaultOption.innerHTML = 'Select a scene';\n\n    this._sceneSelect.appendChild(defaultOption);\n\n    this.scenes.forEach((value) => {\n      const option = document.createElement('option');\n      option.value = value.id;\n      option.innerHTML = value?.debugLabel || value.id;\n      if (value.id === this.defaultScene) {\n        option.selected = true;\n      }\n      this._sceneSelect.appendChild(option);\n    });\n\n    this._debugMenu.appendChild(this._sceneSelect);\n\n    this._debugMenu.addEventListener('change', (e: Event) => {\n      if (this._queue) {\n        e.preventDefault();\n        return;\n      }\n      const target = e.target as HTMLSelectElement;\n      const sceneId = target.value;\n      if (sceneId) {\n        window.location.hash = sceneId.toLowerCase();\n      }\n    });\n\n    window.addEventListener('hashchange', () => {\n      const sceneId = this._getSceneFromHash();\n      if (sceneId) {\n        this.loadScene(sceneId);\n      }\n    });\n\n    this.onSceneChangeStart.connect(this._disableDebugMenu);\n    this.onSceneChangeComplete.connect(this._enableDebugMenu);\n  }\n\n  private _enableDebugMenu() {\n    this._debugMenu?.querySelector('select')?.removeAttribute('disabled');\n  }\n\n  private _disableDebugMenu() {\n    this._debugMenu?.querySelector('select')?.setAttribute('disabled', 'disabled');\n  }\n\n  private _getSceneFromHash(): string | null {\n    let hash = window?.location?.hash;\n    if (hash) {\n      hash = hash.replace('#', '');\n      if (hash.length > 0) {\n        for (let i = 0; i < this.scenes.length; i++) {\n          if (this.scenes[i]?.id?.toLowerCase() === hash.toLowerCase()) {\n            return this.scenes[i].id;\n          }\n        }\n      }\n    }\n    return null;\n  }\n}\n","export enum InputController {\n  Keyboard = 'keyboard',\n  Gamepad = 'gamepad',\n  Mouse = 'mouse',\n  Touch = 'touch',\n}\n","export enum ActionContext {\n  General = 'general',\n  Menu = 'menu',\n  Game = 'game',\n}\n\nexport enum Action {\n  Up = 'up',\n  Down = 'down',\n  Left = 'left',\n  Right = 'right',\n  Action = 'action',\n  Next = 'next',\n  Back = 'back',\n  Pause = 'pause',\n  Unpause = 'unpause',\n  Start = 'start',\n  Menu = 'menu',\n}\n","import { IApplication } from '../../core';\nimport { Signal } from '../../signals';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\nimport { Action, ActionContext } from './actions';\nimport type { ActionDetail, ActionSignal, ActionsList } from './types';\nimport { InputController } from './constants';\n\nexport type InputManagerOptions = {\n  actions?: ActionsList;\n};\n\nexport interface IInputPlugin extends IPlugin {\n  activeGamepads: Map<string, Gamepad>;\n  activeControllers: Set<string>;\n  options: InputManagerOptions;\n  onGamepadConnected: Signal<(gamepad: Gamepad) => void>;\n  onGamepadDisconnected: Signal<(gamepad: Gamepad) => void>;\n  onControllerActivated: Signal<(controller: string) => void>;\n  onControllerDeactivated: Signal<(controller: string) => void>;\n  onContextChanged: Signal<(context: string | ActionContext) => void>;\n  context: string | ActionContext;\n\n  actions(action: string): ActionSignal;\n\n  sendAction(action: string, data?: any): void;\n\n  isControllerActive(controller: InputController): boolean;\n\n  isGamepadActive(gamepad: Gamepad): boolean;\n}\n\nconst defaultActions = [\n  Action.Up,\n  Action.Down,\n  Action.Left,\n  Action.Right,\n  Action.Action,\n  Action.Pause,\n  Action.Unpause,\n  Action.Start,\n  Action.Menu,\n  Action.Back,\n  Action.Next,\n];\n\nconst defaultOptions = {\n  actions: defaultActions,\n};\n\nexport class InputPlugin extends Plugin implements IInputPlugin {\n  public readonly id = 'input';\n  // properties\n  public activeGamepads = new Map<string, Gamepad>();\n  public activeControllers = new Set<string>([]);\n  public options: InputManagerOptions;\n  // signals\n  public onGamepadConnected: Signal<(gamepad: Gamepad) => void> = new Signal<(gamepad: Gamepad) => void>();\n  public onGamepadDisconnected: Signal<(gamepad: Gamepad) => void> = new Signal<(gamepad: Gamepad) => void>();\n  public onControllerActivated: Signal<(controller: string) => void> = new Signal<(controller: string) => void>();\n  public onControllerDeactivated: Signal<(controller: string) => void> = new Signal<(controller: string) => void>();\n  public onContextChanged: Signal<(context: string | ActionContext) => void> = new Signal<\n    (context: string | ActionContext) => void\n  >();\n  private _actionSignals: Map<string | number, ActionSignal> = new Map();\n\n  // private properties\n  private _context: string | ActionContext = ActionContext.General;\n\n  get context(): string | ActionContext {\n    return this._context;\n  }\n\n  set context(context: string | ActionContext) {\n    if (this._context === context) {\n      return;\n    }\n    this._context = context;\n    this.onContextChanged.emit(context);\n  }\n\n  async initialize(app: IApplication, options: InputManagerOptions = defaultOptions): Promise<void> {\n    this.options = { ...defaultOptions, ...options };\n    app.stage.eventMode = 'static';\n    app.stage.on('touchstart', this._onTouchStart);\n    app.stage.on('globalmousemove', this._onMouseMove);\n    window.addEventListener('keydown', this._onKeyDown);\n    window.addEventListener('gamepadconnected', this._onGamepadConnected);\n    window.addEventListener('gamepaddisconnected', this._onGamepadDisconnected);\n  }\n\n  destroy(): void {\n    // unregister all event listeners\n    this.app.stage.off('touchstart', this._onTouchStart);\n    this.app.stage.off('globalmousemove', this._onMouseMove);\n    window.removeEventListener('keydown', this._onKeyDown);\n    window.removeEventListener('gamepadconnected', this._onGamepadConnected);\n    window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnected);\n\n    super.destroy();\n  }\n\n  isControllerActive(controller: InputController): boolean {\n    return this.activeControllers.has(controller);\n  }\n\n  isGamepadActive(gamepad: Gamepad): boolean {\n    return this.activeGamepads.has(gamepad.id);\n  }\n\n  actions<T = any>(action: string | number): ActionSignal<T> {\n    if (!this._actionSignals.has(action)) {\n      this._actionSignals.set(action, new Signal<(actionDetail: ActionDetail<T>) => void>());\n    }\n    return this._actionSignals.get(action)!;\n  }\n\n  sendAction<T = any>(actionId: string | number, data?: T): void {\n    return this.actions<T>(actionId).emit({ id: actionId, context: this.context, data });\n  }\n\n  setActionContext(context: string | ActionContext): string {\n    this.context = context;\n    return context;\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['setActionContext', 'sendAction', 'actions'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return [\n      'onGamepadConnected',\n      'onGamepadDisconnected',\n      'onControllerActivated',\n      'onControllerDeactivated',\n      'onContextChanged',\n    ];\n  }\n\n  private _activateController(inputController: string): void {\n    if (this.activeControllers.has(inputController)) {\n      return;\n    }\n    this.activeControllers.add(inputController);\n    // emit the controller activated signal\n    this.onControllerActivated.emit(inputController);\n  }\n\n  private _deactivateController(inputController: InputController): void {\n    const wasControllerActive = this.activeControllers.has(inputController);\n    if (!wasControllerActive) {\n      return;\n    }\n    this.activeControllers.delete(inputController);\n    // emit the controller deactivated signal\n    this.onControllerDeactivated.emit(inputController);\n  }\n\n  private _activateGamepad(gamepad: Gamepad): void {\n    this.activeGamepads.set(gamepad.id, gamepad);\n  }\n\n  private _deactivateGamepad(gamepadId: string): void {\n    this.activeGamepads.delete(gamepadId);\n  }\n\n  private _onTouchStart(): void {\n    this._activateController(InputController.Touch);\n  }\n\n  private _onMouseMove(): void {\n    this._activateController(InputController.Mouse);\n  }\n\n  private _onKeyDown(): void {\n    this._activateController(InputController.Keyboard);\n  }\n\n  private _onGamepadConnected(event: GamepadEvent): void {\n    this._activateController(InputController.Gamepad);\n    // add the gamepad id just in case we need it (?)\n    this._activateController(event.gamepad.id);\n    this._activateGamepad(event.gamepad);\n    // emit the gamepad connected signal\n    this.onGamepadConnected.emit(event.gamepad);\n  }\n\n  private _onGamepadDisconnected(event: GamepadEvent): void {\n    // remove the gamepad\n    this._deactivateGamepad(event.gamepad.id);\n\n    // pause the game any time there is a controller disconnect\n    this.sendAction(Action.Pause);\n\n    // emit the gamepad disconnected signal\n    this.onGamepadDisconnected.emit(event.gamepad);\n\n    // check if all gamepads are disconnected\n    if (this.activeGamepads.size === 0) {\n      this._deactivateController(InputController.Gamepad);\n    }\n  }\n}\n","import { IApplication } from '../core';\nimport { Signal } from '../signals';\nimport type { IPlugin } from './Plugin';\nimport { Plugin } from './Plugin';\n\nexport type KeyboardEventType = 'keydown' | 'keyup';\nexport type KeyboardEventDetail = { event: KeyboardEvent; key: string };\nexport type KeySignal = Signal<(detail: KeyboardEventDetail) => void>;\n\nexport interface IKeyboardPlugin extends IPlugin {\n  enabled: boolean;\n\n  onKeyDown(key?: string): KeySignal;\n\n  onKeyUp(key?: string): KeySignal;\n\n  isKeyDown(key: string): boolean;\n}\n\nexport class KeyboardPlugin extends Plugin implements IKeyboardPlugin {\n  public readonly id: string = 'keyboard';\n  // global signals\n  public onGlobalKeyDown: Signal<(detail: KeyboardEventDetail) => void> = new Signal();\n  public onGlobalKeyUp: Signal<(detail: KeyboardEventDetail) => void> = new Signal();\n\n  private _keysDown: Set<string> = new Set();\n  private _keyDownSignals: Map<string | undefined, KeySignal> = new Map();\n  private _keyUpSignals: Map<string | undefined, KeySignal> = new Map();\n\n  private _enabled: boolean = true;\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public set enabled(value: boolean) {\n    this._enabled = value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public initialize(_app: IApplication): void {\n    // track which keys are down\n    document.addEventListener('keydown', this._handleKeyDown);\n    document.addEventListener('keyup', this._handleKeyUp);\n  }\n\n  public destroy() {\n    document.removeEventListener('keydown', this._handleEvent);\n    document.removeEventListener('keyup', this._handleEvent);\n\n    document.addEventListener('keydown', this._handleKeyDown);\n    document.addEventListener('keyup', this._handleKeyUp);\n  }\n\n  public onKeyDown(key?: string): KeySignal {\n    return this._checkAndAddSignal(key?.toLowerCase() || undefined, 'keydown');\n  }\n\n  public onKeyUp(key?: string): KeySignal {\n    return this._checkAndAddSignal(key?.toLowerCase() || undefined, 'keyup');\n  }\n\n  public isKeyDown(key: string): boolean {\n    return this._keysDown.has(key);\n  }\n\n  _update() {\n    //\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onGlobalKeyDown', 'onGlobalKeyUp'];\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['onKeyDown', 'onKeyUp', 'isKeyDown'];\n  }\n\n  private _handleKeyDown(e: KeyboardEvent): void {\n    this._keysDown.add(e.key);\n    this.onGlobalKeyDown.emit({ event: e, key: e.key });\n  }\n\n  private _handleKeyUp(e: KeyboardEvent): void {\n    this._keysDown.delete(e.key);\n    this.onGlobalKeyUp.emit({ event: e, key: e.key });\n  }\n\n  /**\n   * Check if the signal exists and add it if it doesn't\n   * Also, if this is the first signal, start listening for the event\n   * @param {string} key\n   * @param {KeyboardEventType} eventType\n   * @returns {KeySignal}\n   * @private\n   */\n  private _checkAndAddSignal(key: string | undefined, eventType: KeyboardEventType): KeySignal {\n    const signalMap = eventType === 'keydown' ? this._keyDownSignals : this._keyUpSignals;\n\n    if (!signalMap.size) {\n      this._listen(eventType);\n    }\n\n    if (key === undefined) {\n      key = '*undefined*';\n    }\n\n    if (!signalMap.has(key)) {\n      signalMap.set(key, new Signal<(detail: KeyboardEventDetail) => void>());\n    }\n\n    return signalMap.get(key) as KeySignal;\n  }\n\n  private _listen(eventType: KeyboardEventType): void {\n    document.addEventListener(eventType, this._handleEvent);\n  }\n\n  private _handleEvent(event: KeyboardEvent): void {\n    if (!this._enabled) {\n      return;\n    }\n    const signalMap = event.type === 'keydown' ? this._keyDownSignals : this._keyUpSignals;\n    signalMap.get('*undefined*')?.emit({ event, key: event.key.toLowerCase() });\n    signalMap.get(event.key.toLowerCase())?.emit({ event, key: event.key });\n  }\n}\n","import { Bounds, Container, DestroyOptions, Graphics, PointLike } from 'pixi.js';\nimport { Application } from '../../Application';\nimport { bindAllMethods, resolvePointLike } from '../../utils';\nimport type { IFocusable } from './FocusManagerPlugin';\n\nexport type FocusOutlinerConfig = {\n  color: number;\n  shape: 'rectangle' | 'rounded rectangle';\n  lineWidth?: number;\n  radius?: number;\n};\n\nexport interface IFocusOutliner {\n  position: PointLike;\n  focusBounds: Bounds;\n\n  draw(focusTarget: IFocusable): void;\n\n  clear(): void;\n\n  destroy(args?: DestroyOptions): void;\n\n  setFocusTarget(focusTarget: IFocusable): void;\n\n  clearFocusTarget(): void;\n\n  updatePosition(): void;\n}\n\nexport class FocusOutliner extends Container implements IFocusOutliner {\n  focusBounds: Bounds;\n  focusTarget: IFocusable | null;\n  protected _config: FocusOutlinerConfig;\n  protected _graphics: Graphics;\n\n  constructor(config?: Partial<FocusOutlinerConfig>) {\n    super();\n    bindAllMethods(this);\n    this._config = {\n      color: 0x00ffff,\n      shape: 'rounded rectangle',\n      radius: 8,\n      lineWidth: 2,\n      ...config,\n    };\n    this._graphics = new Graphics();\n    this.addChild(this._graphics);\n  }\n\n  public draw(focusTarget: IFocusable): void {\n    this.clear();\n    this.setFocusTarget(focusTarget);\n    if (!this.focusTarget) {\n      return;\n    }\n    this._graphics.strokeStyle = { width: this._config.lineWidth, color: this._config.color, alpha: 1 };\n    if (this._config.shape === 'rectangle') {\n      this._graphics.rect(0, 0, this.focusBounds.width, this.focusBounds.height);\n    } else {\n      this._graphics.roundRect(0, 0, this.focusBounds.width, this.focusBounds.height, this._config.radius);\n    }\n    this._graphics.stroke();\n  }\n\n  public clear(): void {\n    this.clearFocusTarget();\n  }\n\n  public destroy(options?: DestroyOptions) {\n    this.clear();\n    this._graphics.destroy();\n    super.destroy(options);\n  }\n\n  public setFocusTarget(focusTarget: IFocusable) {\n    if (focusTarget) {\n      this.focusTarget = focusTarget;\n      this.focusBounds = this.focusTarget.getFocusArea().clone();\n      Application.getInstance().ticker.add(this.updatePosition);\n    }\n  }\n\n  public clearFocusTarget() {\n    this.focusTarget = null;\n    Application.getInstance().ticker.remove(this.updatePosition);\n  }\n\n  public updatePosition() {\n    if (!this.focusTarget) {\n      return;\n    }\n    const pos = this.focusTarget.getGlobalPosition();\n    const focusPos = this.focusTarget.getFocusPosition();\n    if (focusPos) {\n      const fp = resolvePointLike(focusPos);\n      pos.x += fp.x;\n      pos.y += fp.y;\n    }\n\n    this.position.set(pos.x, pos.y);\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { Bounds, Container, PointerEvents, PointLike } from 'pixi.js';\nimport { IApplication } from '../../core';\nimport { Signal } from '../../signals';\nimport type { Constructor, PointLike as DillPixelPointLike } from '../../utils';\nimport { bindMethods, getLastMapEntry, getPreviousMapEntry, Logger } from '../../utils';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\nimport type { IFocusOutliner } from './FocusOutliner';\nimport { FocusOutliner, FocusOutlinerConfig } from './FocusOutliner';\n\nexport type FocusManagerPluginOptions = {\n  outliner: IFocusOutliner | Partial<FocusOutlinerConfig> | typeof FocusOutliner;\n  usePixiAccessibility: boolean;\n};\n\nexport interface IFocusable extends EventEmitter {\n  isFocused: boolean;\n  isKeyDown: boolean;\n  focusEnabled: boolean;\n  tabIndex: number;\n  _accessibleDiv?: HTMLElement;\n\n  // pixi accessibility features\n  accessible: boolean;\n  accessibleType: string;\n  accessibleTitle: string;\n  accessibleHint: string;\n  accessiblePointerEvents?: PointerEvents;\n  accessibleChildren: boolean;\n\n  // signals\n  onFocusIn: Signal<(focusable: IFocusable) => void>;\n  onFocusOut: Signal<(focusable: IFocusable) => void>;\n  onFocus: Signal<(focusable: IFocusable) => void>;\n  onBlur: Signal<(focusable: IFocusable) => void>;\n  position: PointLike;\n\n  focusIn(): void;\n\n  focusOut(): void;\n\n  click(): void;\n\n  blur(): void;\n\n  getGlobalPosition(): PointLike;\n\n  getFocusArea(): Bounds;\n\n  getFocusPosition(): DillPixelPointLike | null;\n\n  getFocusSize(): DillPixelPointLike | null;\n}\n\nexport interface IFocusLayer {\n  currentFocusable: IFocusable | null;\n  defaultFocusable: IFocusable | null;\n  lastFocusable: IFocusable | null;\n  current: boolean;\n  availableFocusables: IFocusable[];\n\n  setCurrentFocusable(focusable: IFocusable | null): IFocusable | null;\n\n  hasFocusable(focusable: IFocusable | null): boolean;\n\n  setCurrent(): void;\n\n  addFocusable(focusable: IFocusable, isDefault?: boolean): void;\n\n  removeFocusable(focusable: IFocusable): void;\n\n  sortFocusables(): void;\n\n  next(): IFocusable | null;\n\n  prev(): IFocusable | null;\n}\n\nclass FocusLayer implements IFocusLayer {\n  public currentFocusable: IFocusable | null = null;\n  public lastFocusable: IFocusable | null = null;\n  public defaultFocusable: IFocusable | null = null;\n\n  private _focusables: IFocusable[] = [];\n  private _currentIndex: number = 0;\n\n  constructor(public id: string | number) {}\n\n  private _current: boolean = false;\n\n  set current(value: boolean) {\n    this._current = value;\n    this.setCurrent();\n  }\n\n  public get availableFocusables(): IFocusable[] {\n    return this._focusables.filter((f) => f.focusEnabled);\n  }\n\n  public setCurrent() {\n    if (this._current) {\n      if (!this.defaultFocusable) {\n        this.defaultFocusable = this._focusables[0];\n      }\n      this.sortFocusables();\n    } else {\n      for (let i = 0; i < this._focusables.length; i++) {\n        this._focusables[i].accessible = false;\n      }\n    }\n  }\n\n  public hasFocusable(focusable: IFocusable | null) {\n    if (!focusable) {\n      return false;\n    }\n    return this._focusables.indexOf(focusable) > -1;\n  }\n\n  public addFocusable(focusable: IFocusable, isDefault: boolean = false): void {\n    this._focusables.push(focusable);\n    if (isDefault) {\n      this.defaultFocusable = focusable;\n    }\n    if (this._current) {\n      this.sortFocusables();\n    }\n  }\n\n  public removeFocusable(focusable: IFocusable) {\n    const index = this._focusables.indexOf(focusable);\n    if (index !== -1) {\n      this._focusables.splice(index, 1);\n\n      if (this.currentFocusable === focusable) {\n        this.currentFocusable = null;\n      }\n\n      if (this.lastFocusable === focusable) {\n        this.lastFocusable = null;\n      }\n\n      if (this.defaultFocusable === focusable) {\n        this.defaultFocusable = null;\n      }\n    }\n    if (this._current) {\n      this.sortFocusables();\n    }\n  }\n\n  public sortFocusables() {\n    for (let i = 0; i < this._focusables.length; i++) {\n      this._focusables[i].accessible = this._current;\n      this._focusables[i].tabIndex = this._current ? Math.max(i, 1) + 1 : -1;\n      if (this._focusables[i] === this.defaultFocusable) {\n        this._focusables[i].tabIndex = this._current ? 1 : -1;\n      }\n    }\n    if (this._current) {\n      this._focusables.sort((a, b) => a.tabIndex - b.tabIndex);\n    }\n  }\n\n  setCurrentFocusable(focusable: IFocusable | null) {\n    if (focusable) {\n      this._currentIndex = this._focusables.indexOf(focusable);\n      this.currentFocusable = focusable;\n    } else {\n      this._currentIndex = -1;\n      this.currentFocusable = null;\n    }\n    return this.currentFocusable;\n  }\n\n  public next() {\n    this._currentIndex = this._currentIndex + 1;\n    if (this._currentIndex >= this._focusables.length) {\n      this._currentIndex = 0;\n    }\n    this.currentFocusable = this._focusables[this._currentIndex];\n    return this.currentFocusable;\n  }\n\n  public prev() {\n    this._currentIndex = this._currentIndex - 1;\n    if (this._currentIndex < 0) {\n      this._currentIndex = this._focusables.length - 1;\n    }\n    this.currentFocusable = this._focusables[this._currentIndex];\n    return this.currentFocusable;\n  }\n}\n\nexport type FocusChangeDetail = { layer: string | number | null; focusable: IFocusable | null };\n\nexport interface IFocusManagerPlugin extends IPlugin {\n  readonly view: Container;\n  readonly layerCount: number;\n  readonly currentLayerId: string | number | null;\n  readonly active: boolean;\n  readonly layers: Map<string | number, IFocusLayer>;\n\n  onFocusManagerActivated: Signal<() => void>;\n  onFocusManagerDeactivated: Signal<() => void>;\n  onFocusLayerChange: Signal<(currentLayerId: string | number) => void>;\n  onFocusChange: Signal<(detail: FocusChangeDetail) => void>;\n\n  enabled: boolean;\n\n  restart(): void;\n\n  focus(focusable: IFocusable): void;\n\n  forceFocus(focusable: IFocusable): void;\n\n  setFocus(focusable: IFocusable): void;\n\n  addFocusLayer(layerId?: string | number, setAsCurrent?: boolean, focusables?: IFocusable | IFocusable[]): IFocusLayer;\n\n  removeFocusLayer(layerId?: string | number): void;\n\n  setFocusLayer(layerId: string | number): void;\n\n  setLayerOrder(layerIds: (string | number)[]): void;\n\n  add(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault?: boolean): void;\n\n  addFocusable(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault?: boolean): void;\n\n  remove(focusable: IFocusable | IFocusable[]): void;\n\n  removeFocusable(focusable: IFocusable | IFocusable[]): void;\n\n  deactivate(): void;\n\n  clearFocus(): void;\n\n  removeAllFocusLayers(): void;\n}\n\nexport class FocusManagerPlugin extends Plugin implements IFocusManagerPlugin {\n  public override readonly id: string = 'focus';\n  public readonly view = new Container();\n  // signals\n  public onFocusManagerActivated: Signal<() => void> = new Signal<() => void>();\n  public onFocusManagerDeactivated: Signal<() => void> = new Signal<() => void>();\n  public onFocusLayerChange: Signal<(currentLayerId: string | number) => void> = new Signal<\n    (currentLayerId: string | number) => void\n  >();\n  public onFocusChange: Signal<(detail: FocusChangeDetail) => void> = new Signal<(detail: FocusChangeDetail) => void>();\n  //\n  private _focusOutliner: IFocusOutliner;\n  private _focusTarget: IFocusable | null = null;\n  private _keyboardActive: boolean = false;\n  private _options: FocusManagerPluginOptions;\n\n  private _layers: Map<string | number, IFocusLayer> = new Map();\n\n  public get layers(): Map<string | number, IFocusLayer> {\n    return this._layers;\n  }\n\n  private _currentLayerId: string | number | null = null;\n\n  get currentLayerId(): string | number | null {\n    return this._currentLayerId;\n  }\n\n  private _active: boolean = false;\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  private _enabled: boolean = true;\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  set enabled(value: boolean) {\n    this._enabled = value;\n  }\n\n  public get layerCount(): number {\n    return this._layers.size;\n  }\n\n  public initialize(app: IApplication): void {\n    bindMethods(this, 'removeAllFocusLayers', '_handleGlobalMouseMove', '_handleGlobalPointerDown');\n    const options: Partial<FocusManagerPluginOptions> = app.config?.focusOptions || {};\n    options.usePixiAccessibility = options.usePixiAccessibility ?? false;\n    this._focusOutliner =\n      typeof options?.outliner === 'function'\n        ? new (options.outliner as Constructor<IFocusOutliner>)()\n        : new FocusOutliner(options.outliner as Partial<FocusOutlinerConfig>);\n\n    this._options = options as FocusManagerPluginOptions;\n\n    this.view.addChild(this._focusOutliner as unknown as Container);\n\n    this._updatePixiAccessibility();\n\n    this._setupKeyboardListeners();\n    this._setupAppListeners();\n  }\n\n  public destroy(): void {\n    this._removeGlobalListeners();\n    this.deactivate();\n    this._focusOutliner.destroy();\n    this._layers.clear();\n    super.destroy();\n  }\n\n  public deactivate(): void {\n    this._setTarget(null);\n    this._updateOutliner();\n    this._active = false;\n  }\n\n  public add(focusable: IFocusable | IFocusable[], layerId?: string | number, isDefault: boolean = false): void {\n    this.addFocusable(focusable, layerId, isDefault);\n  }\n\n  public addFocusable(\n    focusable: IFocusable | IFocusable[],\n    layerId?: string | number | null | undefined,\n    isDefault: boolean = false,\n  ): void {\n    if (layerId === undefined || layerId == null) {\n      layerId = this._currentLayerId ?? null;\n    }\n    const layer = this._layers.get(layerId!);\n    if (!layer) {\n      Logger.error(`Layer with ID ${layerId} does not exist.`);\n      return;\n    }\n    if (!Array.isArray(focusable)) {\n      focusable = [focusable];\n    }\n    (focusable as IFocusable[]).forEach((f, idx) => {\n      layer.addFocusable(f, idx === 0 && isDefault);\n    });\n\n    if (this._active && isDefault) {\n      this._setTarget(layer.currentFocusable || layer.defaultFocusable || null, !this._active);\n    }\n  }\n\n  public remove(focusable: IFocusable | IFocusable[]) {\n    this.removeFocusable(focusable);\n  }\n\n  public removeFocusable(focusable: IFocusable | IFocusable[]) {\n    if (!Array.isArray(focusable)) {\n      focusable = [focusable];\n    }\n    this._layers.forEach((layer) => {\n      (focusable as IFocusable[]).forEach((f) => {\n        layer.removeFocusable(f);\n      });\n    });\n  }\n\n  public setLayerOrder(layerIds: (string | number)[]): void {\n    const newLayers: Map<string | number, IFocusLayer> = new Map();\n    layerIds.forEach((layerId) => {\n      if (!this._layers.has(layerId)) {\n        throw new Error(`Layer with ID ${layerId} does not exist.`);\n      }\n      newLayers.set(layerId, this._layers.get(layerId)!);\n    });\n    this._layers = newLayers;\n  }\n\n  public addFocusLayer(\n    layerId?: string | number,\n    setAsCurrent: boolean = true,\n    focusables?: IFocusable | IFocusable[],\n  ): IFocusLayer {\n    if (layerId === undefined) {\n      layerId = this._layers.size;\n    }\n    let newLayer;\n    if (this._layers.has(layerId)) {\n      Logger.error(`Layer with ID ${layerId} already exists.`);\n      newLayer = this._layers.get(layerId)!;\n    } else {\n      newLayer = new FocusLayer(layerId);\n      this._layers.set(layerId, newLayer);\n    }\n\n    if (setAsCurrent || this._currentLayerId === null) {\n      this.setFocusLayer(layerId);\n    }\n    if (focusables) {\n      this.addFocusable(focusables, layerId);\n    }\n    return newLayer;\n  }\n\n  public removeFocusLayer(layerId?: string | number, removeTopLayerIfUndefined = true): void {\n    if (layerId === undefined && removeTopLayerIfUndefined) {\n      return this._removeTopLayer();\n    }\n    if (!this._layers.has(layerId!)) {\n      throw new Error(`Layer with ID ${layerId} does not exist.`);\n    }\n    const nextLayerId = getPreviousMapEntry(this._layers, layerId)?.[0];\n    this._layers.delete(layerId!);\n    this._postDelete(nextLayerId);\n  }\n\n  public restart(reverse: boolean = false) {\n    const layer = this._getCurrentLayer();\n    this._setTarget(\n      reverse\n        ? layer?.availableFocusables?.[layer?.availableFocusables?.length - 1] || null\n        : layer?.availableFocusables?.[0] || null,\n    );\n  }\n\n  public forceFocus(focusable: IFocusable) {\n    this.focus(focusable);\n  }\n\n  public setFocus(focusable: IFocusable) {\n    this.focus(focusable);\n  }\n\n  public focus(focusable: IFocusable) {\n    this._setTarget(focusable);\n  }\n\n  public setFocusLayer(layerId: string | number): void {\n    if (!this._layers.has(layerId)) {\n      throw new Error(`Layer with ID ${layerId} does not exist.`);\n    }\n    this._currentLayerId = layerId;\n    const currentLayer = this._getCurrentLayer();\n    if (currentLayer) {\n      currentLayer.current = true;\n      this._layers.forEach((layer, key) => {\n        layer.current = key === layerId;\n      });\n      currentLayer.sortFocusables();\n      this._setTarget(currentLayer.currentFocusable || currentLayer.defaultFocusable || null, !this._active);\n    }\n    this.onFocusLayerChange.emit(this._currentLayerId);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public postInitialize(_app: IApplication): Promise<void> | void {}\n\n  public clearFocus() {\n    this._setTarget(null);\n  }\n\n  public removeAllFocusLayers(): void {\n    this._layers.clear();\n    this._setTarget(null);\n  }\n\n  _onKeyDown(e: KeyboardEvent) {\n    if (!this._enabled || (e.key !== 'Tab' && e.key !== 'Enter' && e.key !== ' ' && e.key !== 'Space')) {\n      return;\n    }\n    if (!this._options.usePixiAccessibility) {\n      e.preventDefault();\n      if (e.key === 'Tab') {\n        const layer = this._getCurrentLayer();\n        const focusables = layer?.availableFocusables;\n        if (!focusables) {\n          return;\n        }\n        if (!this._keyboardActive) {\n          this._activate();\n          this._setTarget(layer.currentFocusable || layer.defaultFocusable || null);\n        } else {\n          // check if we're on the last focusable\n          if (e.shiftKey) {\n            this._prev();\n          } else {\n            this._next();\n          }\n        }\n      } else if (e.key === 'Enter' || e.key === ' ' || e.key === 'Space') {\n        if (this._focusTarget && this._focusTarget.isFocused) {\n          this._focusTarget.emit('pointerdown', { type: 'pointerdown' });\n        }\n      }\n    }\n  }\n\n  _onKeyUp(e: KeyboardEvent) {\n    if (!this._enabled || (e.key !== 'Enter' && e.key !== ' ' && e.key !== 'Space')) {\n      return;\n    }\n    if (!this._options.usePixiAccessibility) {\n      e.preventDefault();\n      if (this._focusTarget && this._focusTarget.isFocused) {\n        this._focusTarget.emit('click', { type: 'click' });\n        this._focusTarget.emit('pointerup', { type: 'pointerup' });\n      }\n    }\n  }\n\n  _onMouseMove(e: MouseEvent) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n\n  protected getCoreFunctions(): string[] {\n    return [\n      'addFocusable',\n      'removeFocusable',\n      'setLayerOrder',\n      'addFocusLayer',\n      'removeFocusLayer',\n      'setFocusLayer',\n      'setFocus',\n      'focus',\n      'clearFocus',\n      'removeAllFocusLayers',\n    ];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onFocusManagerActivated', 'onFocusManagerDeactivated', 'onFocusLayerChange', 'onFocusChange'];\n  }\n\n  private _next() {\n    const nextTarget = this._getCurrentLayer()?.next();\n    if (!nextTarget) {\n      Logger.error('FocusManager:: _next():: No focusable found in the current layer.');\n      return;\n    }\n    this._setTarget(nextTarget);\n  }\n\n  private _prev() {\n    const nextTarget = this._getCurrentLayer()?.prev();\n    if (!nextTarget) {\n      Logger.error('FocusManager:: _prev():: No focusable found in the current layer.');\n      return;\n    }\n    this._setTarget(nextTarget);\n  }\n\n  private _deactivate() {\n    if (!this._keyboardActive) {\n      return;\n    }\n    this._keyboardActive = false;\n  }\n\n  private _activate() {\n    if (this._keyboardActive) {\n      return;\n    }\n    this._keyboardActive = true;\n    globalThis.document.addEventListener('mousemove', this._onMouseMove, true);\n  }\n\n  private _updatePixiAccessibility() {\n    // @ts-expect-error _div is protected\n    this.app.renderer.accessibility._div.setAttribute('id', 'pixi-accessibility');\n    if (!this._options.usePixiAccessibility) {\n      // @ts-expect-error _div is protected\n      this.app.renderer.accessibility._div.setAttribute('disabled', 'disabled');\n      this.app.renderer.accessibility.destroy();\n      globalThis.addEventListener('keydown', this._onKeyDown, false);\n      globalThis.addEventListener('keyup', this._onKeyUp, false);\n    }\n  }\n\n  private _getCurrentLayer(): IFocusLayer | null {\n    return this._currentLayerId != null ? this._layers.get(this._currentLayerId) || null : null;\n  }\n\n  private _removeTopLayer() {\n    const layerId = getLastMapEntry(this._layers)?.[0];\n    const nextLayerId = getPreviousMapEntry(this._layers, layerId)?.[0];\n    if (layerId === undefined) {\n      return;\n    }\n    this._layers.delete(layerId);\n    this._postDelete(nextLayerId);\n  }\n\n  private _postDelete(nextLayerId: string | number | undefined) {\n    if (this._layers.size === 0) {\n      this._currentLayerId = null;\n    } else if (nextLayerId !== undefined) {\n      this.setFocusLayer(nextLayerId);\n    }\n  }\n\n  private _setTarget(focusTarget: IFocusable | null, setInactiveOnNull: boolean = true) {\n    const layer = this._getCurrentLayer();\n    const oldFocusTarget = this._focusTarget;\n    this._focusTarget = focusTarget;\n    // call the focus out methods on the current focusable, which is changing\n    if (oldFocusTarget && this._active) {\n      this._clearFocusTarget(oldFocusTarget);\n    }\n    if (this.app.renderer.accessibility.isActive || this._keyboardActive) {\n      if (this._focusTarget) {\n        if (!this._active) {\n          this._active = true;\n        }\n        if (this._options.usePixiAccessibility && !this._focusTarget._accessibleDiv) {\n          this.app.renderer.accessibility.postrender();\n        }\n\n        if (this._options.usePixiAccessibility) {\n          this.app.ticker.addOnce(() => {\n            this._focusTarget?._accessibleDiv?.focus();\n          });\n        }\n\n        if (layer?.hasFocusable(focusTarget)) {\n          // call focusIn on the focusable\n          if (this._focusTarget) {\n            this._focusTarget.focusIn();\n            this._focusTarget.isFocused = true;\n            this._focusTarget.onFocusIn.emit(this._focusTarget);\n            layer.setCurrentFocusable(this._focusTarget);\n            this._updateOutliner();\n          }\n        } else {\n          Logger.warn(\n            `The focusable`,\n            focusTarget,\n            `does not exist on the current focus layer: ${this._currentLayerId}`,\n          );\n        }\n      } else {\n        this._focusOutliner.clear();\n      }\n    } else {\n      this._focusOutliner.clear();\n      if (this._active && setInactiveOnNull) {\n        this._active = false;\n        this.onFocusManagerDeactivated.emit();\n        return;\n      }\n    }\n\n    if (oldFocusTarget !== focusTarget && this._active) {\n      this.onFocusChange.emit({ focusable: this._focusTarget, layer: this._currentLayerId });\n    }\n  }\n\n  private _clearFocusTarget(focusTarget: IFocusable | null) {\n    if (!focusTarget) {\n      return;\n    }\n    focusTarget.focusOut();\n    focusTarget.isFocused = false;\n    focusTarget.onFocusOut.emit(focusTarget);\n    focusTarget.blur();\n    focusTarget.onBlur.emit(focusTarget);\n  }\n\n  private _setupKeyboardListeners(): void {\n    window.addEventListener('keydown', this._onKeyDown, false);\n\n    this._addGlobalListeners();\n  }\n\n  private _addGlobalListeners() {\n    globalThis.document.addEventListener('mousemove', this._handleGlobalMouseMove);\n    globalThis.document.addEventListener('pointerdown', this._handleGlobalPointerDown);\n  }\n\n  private _removeGlobalListeners() {\n    globalThis.document.removeEventListener('mousemove', this._handleGlobalMouseMove);\n    globalThis.document.removeEventListener('pointerdown', this._handleGlobalPointerDown);\n  }\n\n  private _handleGlobalMouseMove() {\n    if (!this._enabled) {\n      return;\n    }\n    if (this._active) {\n      this.deactivate();\n    }\n  }\n\n  private _handleGlobalPointerDown() {\n    if (!this._enabled) {\n      return;\n    }\n    if (this._active) {\n      this.deactivate();\n    }\n    if (this.app.renderer.accessibility.isActive || this._keyboardActive) {\n      // @ts-expect-error _deactivate is protected\n      this.app.renderer.accessibility._deactivate();\n      this._deactivate();\n    }\n  }\n\n  private _setupAppListeners(): void {\n    this.app.scenes.onSceneChangeStart.connect(this.removeAllFocusLayers);\n  }\n\n  private _updateOutliner() {\n    if (this._focusTarget) {\n      this._focusOutliner.position.set(this._focusTarget.position.x, this._focusTarget.position.y);\n      this._focusOutliner.draw(this._focusTarget);\n    } else {\n      this._focusOutliner.clear();\n    }\n  }\n}\n","import {gsap} from 'gsap';\nimport {Signal} from '../signals';\nimport type {Constructor} from '../utils';\n\n/**\n * Extended GSAP animation configuration interface.\n */\nexport interface GSAPAnimationConfigExtended extends gsap.TweenVars {}\n\n/**\n * Type for GSAP entity.\n */\ntype GSAPEntity = gsap.core.Tween | gsap.core.Timeline;\n\n/**\n * Interface for animated entities.\n */\nexport interface IAnimated {\n  onAnimationStart: Signal<(entity: GSAPEntity) => void>;\n  onAnimationUpdate: Signal<(entity: GSAPEntity) => void>;\n  onAnimationComplete: Signal<(entity: GSAPEntity) => void>;\n\n  animate(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFrom(animationProps: GSAPAnimationConfigExtended, instance?: any): gsap.core.Tween;\n\n  animateFromTo(\n    fromProps: GSAPAnimationConfigExtended,\n    toProps: GSAPAnimationConfigExtended,\n    instance?: any,\n  ): gsap.core.Tween;\n\n  animateSequence(sequences: GSAPAnimationConfigExtended[], instance?: any): gsap.core.Timeline;\n\n  pauseAnimations(): void;\n\n  resumeAnimations(): void;\n\n  clearAnimations(): void;\n\n  reverseAnimation(): void;\n\n  isAnimationPlaying(): boolean;\n\n  //utility\n  shake(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  pulse(config?: { duration?: number; intensity?: number; times?: number }, instance?: any): gsap.core.Tween;\n\n  bob(config?: { duration?: number; intensity?: number }, instance?: any): gsap.core.Tween;\n}\n\n/**\n * Animated mixin function.\n * @param Base - Base class to extend.\n * @returns Class that extends the base class and implements IAnimated.\n */\nexport function Animated<TBase extends Constructor>(Base: TBase): TBase & Constructor<IAnimated> {\n  return class extends Base implements IAnimated {\n    // signals for animation events\n    onAnimationStart = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationUpdate = new Signal<(entity: GSAPEntity) => void>();\n    onAnimationComplete = new Signal<(entity: GSAPEntity) => void>();\n\n    // store active tweens / timelines\n    _activeTweens: gsap.core.Tween[] = [];\n    _activeTimeline?: gsap.core.Timeline;\n\n    /**\n     * Animate method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animate(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.to(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate from method.\n     * @param animationProps - Animation properties.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFrom(animationProps: GSAPAnimationConfigExtended, instance: any = this) {\n      const tween = gsap.from(instance, {\n        ...animationProps,\n        onStart: () => {\n          this._onAnimationStart(tween);\n        },\n        onUpdate: () => {\n          this._onAnimationUpdate(tween);\n        },\n        onComplete: () => {\n          this._onAnimationComplete(tween);\n          this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n        },\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Animate sequence method.\n     * @param sequences - Array of animation sequences.\n     * @param instance - Instance to animate.\n     * @returns GSAP Timeline instance.\n     */\n    public animateSequence(sequences: GSAPAnimationConfigExtended[], instance: any = this): gsap.core.Timeline {\n      if (!this._activeTimeline) {\n        this._activeTimeline = gsap.timeline({\n          onStart: () => this._onAnimationStart(this._activeTimeline),\n          onUpdate: () => this._onAnimationUpdate(this._activeTimeline),\n          onComplete: () => {\n            this._onAnimationComplete(this._activeTimeline);\n            this._activeTimeline = undefined;\n          },\n        });\n      }\n\n      sequences.forEach((sequence) => {\n        this._activeTimeline?.to(instance, sequence);\n      });\n\n      return this._activeTimeline;\n    }\n\n    /**\n     * Clear animations method.\n     */\n    public clearAnimations() {\n      this._activeTweens.forEach((tween) => tween.kill());\n      this._activeTweens = [];\n      this._activeTimeline?.clear();\n      this._activeTimeline = undefined;\n    }\n\n    /**\n     * Pause animations method.\n     */\n    public pauseAnimations() {\n      this._activeTweens.forEach((tween) => tween.pause());\n      this._activeTimeline?.pause();\n    }\n\n    /**\n     * Resume animations method.\n     */\n    public resumeAnimations() {\n      this._activeTweens.forEach((tween) => tween.play());\n      this._activeTimeline?.play();\n    }\n\n    /**\n     * Animate from-to method.\n     * @param fromProps - Animation properties for the start state.\n     * @param toProps - Animation properties for the end state.\n     * @param instance - Instance to animate.\n     * @returns GSAP Tween instance.\n     */\n    public animateFromTo(\n      fromProps: GSAPAnimationConfigExtended,\n      toProps: GSAPAnimationConfigExtended,\n      instance: any = this,\n    ) {\n      const tween = gsap.fromTo(\n        instance,\n        {\n          ...fromProps,\n        },\n        {\n          ...toProps,\n        },\n      );\n      tween.eventCallback('onStart', () => {\n        this._onAnimationStart(tween);\n      });\n      tween.eventCallback('onUpdate', () => {\n        this._onAnimationUpdate(tween);\n      });\n      tween.eventCallback('onComplete', () => {\n        this._onAnimationComplete(tween);\n        this._activeTweens = this._activeTweens.filter((t) => t !== tween);\n      });\n\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Reverses animations.\n     */\n    public reverseAnimation(): void {\n      this._activeTweens.forEach((tween) => tween.reverse());\n      this._activeTimeline?.reverse();\n    }\n\n    public isAnimationPlaying(): boolean {\n      return (\n        this._activeTweens?.some((tween) => !tween.paused()) ||\n        (this._activeTimeline && !this._activeTimeline.paused()) ||\n        false\n      );\n    }\n\n    // utility animations\n    /**\n     * Shake animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public shake(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.05, intensity = 12, times = 41 } = config;\n      const obj = { x: instance.x, y: instance.y };\n      const origX = obj.x;\n\n      const repeat = times % 2 === 0 ? times + 1 : times;\n\n      const tween = gsap.to(instance, {\n        x: origX + gsap.utils.random(-Math.max(intensity, 2), Math.max(intensity, 2)),\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Pulse animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public pulse(\n      config: {\n        duration?: number;\n        intensity?: number;\n        times?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 1.2, times = 1 } = config;\n      const repeat = times * 2 - 1;\n      const tween = gsap.to(instance?.scale, {\n        x: intensity,\n        y: intensity,\n        repeat,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Bob animation.\n     * @param config - Configuration object.\n     * @param instance\n     * @returns GSAP Tween instance.\n     */\n    public bob(\n      config: {\n        duration?: number;\n        intensity?: number;\n      } = {},\n      instance: any = this,\n    ): gsap.core.Tween {\n      const { duration = 0.5, intensity = 10 } = config;\n      const tween = gsap.to(instance, {\n        y: `-=${intensity}`,\n        repeat: -1,\n        yoyo: true,\n        duration: duration,\n      });\n      this._activeTweens.push(tween);\n      return tween;\n    }\n\n    /**\n     * Private method for handling animation start event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationStart(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationStart.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation update event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationUpdate(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationUpdate.emit(animationEntity as GSAPEntity);\n    }\n\n    /**\n     * Private method for handling animation complete event.\n     * @param animationEntity - Animation entity.\n     */\n    private _onAnimationComplete(animationEntity: GSAPEntity | undefined) {\n      this.onAnimationComplete.emit(animationEntity as GSAPEntity);\n    }\n  } as unknown as TBase & Constructor<IAnimated>;\n}\n","import type { PointerEvents } from 'pixi.js';\nimport { Container, FederatedEvent } from 'pixi.js';\nimport { Application } from '../Application';\nimport type { IFocusable } from '../plugins';\nimport { Signal } from '../signals';\nimport type { Constructor, PointLike } from '../utils';\n\nexport function Focusable<TBase extends Constructor<Container>>(Base: TBase): TBase & Constructor<IFocusable> {\n  return class extends Base implements IFocusable {\n    _accessibleDiv: HTMLElement;\n    isFocused = false;\n    isKeyDown = false;\n    focusEnabled = true;\n    tabIndex = 0;\n    // pixi accessibility options\n    accessible = false;\n    accessibleType: 'button' | 'div' | 'heading' = 'button';\n    accessibleTitle = 'Focusable';\n    accessibleHint = 'Press enter to focus';\n    accessiblePointerEvents: PointerEvents = 'auto';\n    accessibleChildren = true;\n    // signals\n    onFocus = new Signal<(focusable: IFocusable) => void>();\n    onFocusIn = new Signal<(focusable: IFocusable) => void>();\n    onFocusOut = new Signal<(focusable: IFocusable) => void>();\n    onBlur = new Signal<(focusable: IFocusable) => void>();\n\n    private _eventsDisabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this.eventMode = 'static';\n      this.on('mouseover', this._onMouseOver);\n      this.on('mousedown', this._onMouseDown);\n      this.on('click', this._handleClick);\n      this.on('tap', this._handleClick);\n    }\n\n    get app() {\n      return Application.getInstance();\n    }\n\n    public focusIn() {\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerover', { type: 'pointerover' });\n      }\n    }\n\n    public blur() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n    }\n\n    public focusOut() {\n      if (!this.isKeyDown) {\n        window.removeEventListener('keyup', this._handleKeyUp.bind(this));\n      }\n      if (this.app.focus.active) {\n        // @ts-expect-error Argument of type { type: string; } is not assignable to parameter of type FederatedPointerEvent\n        this.emit('pointerout', { type: 'pointerout' });\n      }\n    }\n\n    public click() {}\n\n    public getFocusPosition() {\n      return null;\n    }\n\n    public getFocusArea() {\n      return this.getBounds();\n    }\n\n    public getFocusSize(): PointLike | null {\n      return [this.getFocusArea().width, this.getFocusArea().height];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _onMouseOver(_e: MouseEvent) {\n      this.app.focus.setFocus(this);\n    }\n\n    protected _onMouseDown(e: FederatedEvent) {\n      this._maybeEmit('pointerdown', e);\n    }\n\n    protected _handleClick(e: FederatedEvent) {\n      this._maybeEmit('click', e);\n      this.click();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected _handleKeyUp(_e: KeyboardEvent) {}\n\n    private _maybeEmit(type: string, e: FederatedEvent) {\n      if (this._eventsDisabled || e.type) {\n        return;\n      }\n      this._eventsDisabled = true;\n      this.emit(type, { type });\n      this._eventsDisabled = false;\n    }\n  } as unknown as TBase & Constructor<IFocusable>;\n}\n\nFocusable.INITTED = false;\n","import type { AllFederatedEventMap, DestroyOptions } from 'pixi.js';\nimport { Container, FederatedEvent } from 'pixi.js';\nimport { Signal } from '../signals';\n\nimport type { Constructor } from '../utils';\n\n// gets all the event names from the PIXI event map\ntype InteractionEventName = keyof AllFederatedEventMap;\n\ntype InteractionSignal = Signal<(event: FederatedEvent) => void>;\n\nexport interface IInteractive {\n  onInteraction: (eventName: InteractionEventName) => InteractionSignal;\n}\n\nexport function Interactive<TBase extends Constructor<Container>>(Base: TBase): TBase & Constructor<IInteractive> {\n  return class extends Base implements IInteractive {\n    private _signals: Map<InteractionEventName, InteractionSignal> = new Map();\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._emitSignal = this._emitSignal.bind(this);\n      this.eventMode = 'static';\n    }\n\n    public onInteraction(eventName: InteractionEventName) {\n      if (!this._signals.has(eventName)) {\n        const signal = new Signal<(event: FederatedEvent) => void>();\n        this._signals.set(eventName, signal);\n        this.on(eventName, this._emitSignal);\n      }\n      return this._signals.get(eventName) as InteractionSignal;\n    }\n\n    public destroy(options: DestroyOptions): void {\n      for (const eventName of this._signals.keys()) {\n        this.off(eventName, this._emitSignal);\n      }\n      this._signals.clear();\n      super.destroy(options);\n    }\n\n    private _emitSignal(event: FederatedEvent) {\n      const signalName = event.type as InteractionEventName;\n      const signal = this._signals.get(signalName);\n\n      if (signal) {\n        signal.emit(event);\n      }\n    }\n  } as unknown as TBase & Constructor<IInteractive>;\n}\n","import type { Constructor } from '../utils';\nimport type { IAnimated } from './animated';\n\nexport function mixin<TBase extends Constructor<any>>(\n  base: <TBase extends Constructor>(Base: TBase) => TBase & Constructor<IAnimated>,\n  ...mixins: ((base: TBase) => Constructor)[]\n) {\n  // @ts-expect-error Argument of type 'TBase' is not assignable to parameter of type 'Constructor<{}>'.\n  return mixins.reduce((accumulator, current) => current(accumulator), base);\n}\n","import {DestroyOptions} from 'pixi.js';\nimport {SignalConnection, SignalConnections} from '../signals';\nimport type {Constructor} from '../utils';\n\n/**\n * Interface for animated entities.\n */\nexport interface ISignalContainer {\n  signalConnections: SignalConnections;\n\n  destroy(options?: DestroyOptions): void;\n\n  addSignalConnection(...args: SignalConnection[]): void;\n}\n\nexport function WithSignals<TBase extends Constructor<any>>(Base: TBase): TBase & Constructor<ISignalContainer> {\n  return class extends Base implements ISignalContainer {\n    signalConnections: SignalConnections = new SignalConnections();\n\n    /**\n     * Add signal connections to the container.\n     * @param args - The signal connections to add.\n     */\n    public addSignalConnection(...args: SignalConnection[]) {\n      for (const connection of args) {\n        this.signalConnections.add(connection);\n      }\n    }\n\n    destroy(options?: DestroyOptions): void {\n      this.signalConnections.disconnectAll();\n      super.destroy(options);\n    }\n  } as unknown as TBase & Constructor<ISignalContainer>;\n}\n","import { TextStyleOptions } from 'pixi.js';\nimport { ButtonConfig } from '../../display/Button';\nimport { FlexContainerConfig } from '../../display/FlexContainer';\nimport { UICanvasProps } from '../../display/UICanvas';\nimport { PointLike, SpriteSheetLike, TextureLike, WithRequiredProps } from '../../utils/types';\n\nexport interface AbstractProps {\n  [key: string]: any;\n}\n\nexport interface TextureProps {\n  asset: TextureLike;\n  sheet: SpriteSheetLike;\n}\n\nexport interface PositionProps {\n  x: number;\n  y: number;\n  position: PointLike;\n}\n\nexport interface ScaleProps {\n  scaleX: number;\n  scaleY: number;\n  scale: PointLike;\n}\n\nexport interface PivotProps {\n  pivot: PointLike;\n}\n\nexport interface VisibilityProps {\n  alpha: number;\n  visible: boolean;\n}\n\nexport interface ExistingProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport interface GraphicsProps extends AbstractProps, PositionProps, ScaleProps, PivotProps, VisibilityProps {}\n\nexport interface SpriteProps extends AbstractProps, TextureProps, ScaleProps, PositionProps, VisibilityProps {\n  anchor: PointLike;\n}\n\nexport interface TextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {\n  text: string;\n  anchor: PointLike;\n  resolution: number;\n  roundPixels: boolean;\n  style: Partial<TextStyleOptions>;\n}\n\nexport interface OmittedTextProps extends AbstractProps, PositionProps, ScaleProps, VisibilityProps {}\n\nexport const TextPropsKeys: (keyof TextProps)[] = ['text', 'anchor', 'resolution', 'roundPixels', 'style'];\n\nexport interface ContainerProps extends AbstractProps, PositionProps, ScaleProps, PivotProps, VisibilityProps {}\n\nexport interface FlexContainerProps extends ContainerProps, FlexContainerConfig {}\n\nexport interface UICanvasFactoryProps extends ContainerProps, UICanvasProps {}\n\n// spine\ntype SpineData = {\n  skeleton: string;\n  atlas: string;\n};\n\nexport interface SpineProps extends AbstractProps, ScaleProps, PositionProps, VisibilityProps {\n  data: string | SpineData;\n  autoUpdate: boolean;\n  animationName: string;\n  trackIndex: number;\n  loop: boolean;\n}\n\ninterface _ButtonProps extends AbstractProps, ScaleProps, PositionProps, PivotProps, VisibilityProps, ButtonConfig {}\n\nexport type ButtonProps = WithRequiredProps<_ButtonProps, 'textures'>;\n","import { Assets, Sprite, Spritesheet, Texture } from 'pixi.js';\nimport { Logger } from '../../utils/console/Logger';\nimport { resolvePointLike } from '../../utils/functions';\nimport { PointLike } from '../../utils/types';\n\nimport { PositionProps, ScaleProps, TextureProps } from './props';\n\nexport function resolveUnknownKeys(props: any, entity: any) {\n  for (const key in props) {\n    try {\n      (entity as any)[key] = props[key];\n    } catch (e) {\n      Logger.error(`Error setting property ${key}`, e);\n    }\n  }\n}\n\nexport function resolveTexture(props?: Partial<TextureProps>): Texture {\n  let texture: Texture | undefined;\n  const asset = props?.asset;\n  const assetAsString = asset as string;\n  const sheet = props?.sheet;\n  if (asset instanceof Texture) {\n    texture = asset;\n  } else if (!sheet || sheet?.length === 0) {\n    if (Assets.cache.has(assetAsString)) {\n      texture = Assets.get(assetAsString)!;\n    } else if (Assets.get(assetAsString)) {\n      texture = Assets.get(assetAsString).texture!;\n    } else {\n      throw new Error('Asset \"' + asset + '\" not loaded into Pixi cache');\n    }\n  } else {\n    if (!Assets.get(sheet)) {\n      throw new Error('Spritesheet \"' + sheet + '\" not loaded into Pixi cache');\n    } else {\n      const spriteSheet: Spritesheet = Assets.get(sheet) as Spritesheet;\n      const textures = spriteSheet.textures;\n      if (textures !== undefined) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (textures.hasOwnProperty(assetAsString)) {\n          texture = textures[assetAsString];\n        } else if (spriteSheet.linkedSheets !== undefined && spriteSheet.linkedSheets.length > 0) {\n          for (const linkedSheet of spriteSheet.linkedSheets) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (linkedSheet.textures !== undefined && linkedSheet.textures.hasOwnProperty(assetAsString)) {\n              texture = linkedSheet.textures[assetAsString];\n              break;\n            }\n          }\n          if (texture === undefined) {\n            throw new Error(\n              'Asset \"' + asset + '\" not found inside spritesheet \"' + asset + \"' or any of its linked sheets\",\n            );\n          }\n        } else {\n          throw new Error('Asset \"' + asset + '\" not found inside spritesheet \"' + sheet + \"'\");\n        }\n      } else {\n        throw new Error('Spritesheet \"' + sheet + '\" loaded but textures arent?!');\n      }\n    }\n  }\n  return texture || new Sprite().texture;\n}\n\nexport function resolvePosition(props: Partial<PositionProps>, entity: any) {\n  const pos = resolvePointLike(props.position, false, props.x, props.y);\n  entity.x = pos.x;\n  entity.y = pos.y;\n}\n\nexport function resolveScale(props: Partial<ScaleProps>, entity: any) {\n  if (!props) {\n    return;\n  }\n  if (props.scale === undefined) {\n    if (props.scaleX === undefined && props.scaleY === undefined) {\n      return;\n    }\n    if (props.scaleX === undefined) {\n      props.scaleX = 1;\n    }\n    if (props.scaleY === undefined) {\n      props.scaleY = 1;\n    }\n  }\n  const scale = resolvePointLike(props.scale, false, props.scaleX, props.scaleY);\n  entity.scale.set(scale.x, scale.y);\n}\n\nexport function resolveAnchor(anchor: PointLike | undefined, entity: any) {\n  if (anchor !== undefined) {\n    const anchorPoint = resolvePointLike(anchor);\n    entity.anchor.set(anchorPoint.x, anchorPoint.y);\n  }\n}\n\nexport function resolvePivot(pivot: PointLike | undefined, entity: any) {\n  if (pivot !== undefined) {\n    const pivotPoint = resolvePointLike(pivot);\n    entity.pivot.set(pivotPoint.x, pivotPoint.y);\n  }\n}\n","import { BitmapText, Container as PIXIContainer, Graphics, Sprite, Text } from 'pixi.js';\nimport type { ButtonConfig, FlexContainerConfig, ISpineAnimation, UICanvasConfig } from '../../display';\nimport {\n  Button,\n  ButtonConfigKeys,\n  Container,\n  FlexContainer,\n  FlexContainerConfigKeys,\n  SpineAnimation,\n  UICanvas,\n  UICanvasConfigKeys,\n} from '../../display';\nimport { omitKeys, pluck, resolvePointLike } from '../../utils';\nimport {\n  ButtonProps,\n  ContainerProps,\n  ExistingProps,\n  FlexContainerProps,\n  GraphicsProps,\n  SpineProps,\n  SpriteProps,\n  TextProps,\n  TextPropsKeys,\n  UICanvasFactoryProps,\n} from './props';\nimport {\n  resolveAnchor,\n  resolvePivot,\n  resolvePosition,\n  resolveScale,\n  resolveTexture,\n  resolveUnknownKeys,\n} from './utils';\n\nexport const defaultFactoryMethods = {\n  existing: <TEntity>(entity: TEntity, props?: Partial<ExistingProps>): TEntity => {\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  texture: resolveTexture,\n  container: (props?: Partial<ContainerProps>) => {\n    const entity = new Container();\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  sprite: (props?: Partial<SpriteProps>) => {\n    const entity = new Sprite(props ? resolveTexture(props) : undefined);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  graphics: (props?: Partial<GraphicsProps>) => {\n    const entity = new Graphics();\n    if (!props) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  text: (props?: Partial<TextProps>) => {\n    const options = props\n      ? {\n          text: props.text,\n          roundPixels: props.roundPixels,\n          resolution: props.resolution,\n          style: props.style,\n          anchor: props.anchor ? resolvePointLike(props.anchor, true) : undefined,\n        }\n      : {};\n    const entity = new Text(options);\n    if (!props) return entity;\n    const { position, x, y, scale, scaleX, scaleY, pivot } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props,\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  bitmapText: (props?: Partial<TextProps>) => {\n    const options = pluck(props ?? {}, TextPropsKeys);\n    const entity = new BitmapText(options);\n    if (props?.position) {\n      resolvePosition({ position: props.position, x: props.x, y: props.y }, entity);\n    }\n    if (props?.scale) {\n      resolveScale({ scale: props.scale ?? 1, scaleX: props.scaleX, scaleY: props.scaleY }, entity);\n    }\n    if (props?.pivot) {\n      resolvePivot(props.pivot, entity);\n    }\n    const unknowns = omitKeys(\n      ['x', 'y', 'position', 'text', 'roundPixels', 'resolution', 'style', 'anchor', 'pivot'],\n      props ?? {},\n    );\n    resolveUnknownKeys(unknowns, entity);\n    return entity;\n  },\n  // dill pixel specific stuff\n  button: (props?: Partial<ButtonProps>) => {\n    const config = pluck(props ?? {}, ButtonConfigKeys);\n    const otherProps = omitKeys<ButtonProps, keyof ButtonConfig>(ButtonConfigKeys, props ?? {});\n    const entity = new Button(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  flexContainer: (props?: Partial<FlexContainerProps>): FlexContainer => {\n    const config = pluck(props ?? {}, FlexContainerConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof FlexContainerConfig>(FlexContainerConfigKeys, props ?? {});\n    const entity = new FlexContainer(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  uiCanvas: (props?: Partial<UICanvasFactoryProps>): UICanvas => {\n    const config = pluck(props ?? {}, UICanvasConfigKeys);\n    const otherProps = omitKeys<FlexContainerProps, keyof UICanvasConfig>(UICanvasConfigKeys, props ?? {});\n    const entity = new UICanvas(config);\n    if (!otherProps) return entity;\n    const { position, x, y, pivot, scale, scaleX, scaleY, ...rest } = otherProps;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spine: (props?: Partial<SpineProps>): import('../../plugins/spine/pixi-spine').Spine => {\n    let data = props?.data;\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      if (data.slice(-5) !== '.json') {\n        data = { skeleton: data + '.json', atlas: data + '.atlas' };\n      }\n    }\n    const entity: import('../../plugins/spine/pixi-spine/Spine').Spine = (window as any).Spine.from(data);\n    if (!props) return entity;\n    if (props.autoUpdate !== undefined) entity.autoUpdate = props.autoUpdate;\n    if (props.animationName) entity.state.setAnimation(props.trackIndex ?? 0, props.animationName, props.loop);\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n  spineAnimation: (props?: Partial<SpineProps>): ISpineAnimation => {\n    const entity = new SpineAnimation(props);\n    if (!props) return entity;\n    const { position, x, y, anchor, pivot, scale, scaleX, scaleY, ...rest } = props;\n    resolvePosition({ position, x, y }, entity);\n    resolveScale({ scale, scaleX, scaleY }, entity);\n    resolveAnchor(anchor, entity);\n    resolvePivot(pivot, entity);\n    resolveUnknownKeys(rest, entity);\n    return entity;\n  },\n};\n\nexport interface IFactoryContainer<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>\n  extends PIXIContainer {\n  add: T;\n  make: T;\n}\n\nfunction createFactoryMethods<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  methods: Partial<T>,\n  instance: any,\n  addToStage: boolean,\n): T {\n  const factoryMethods: any = {};\n  for (const key in methods) {\n    factoryMethods[key] = (...args: any[]) => {\n      // @ts-expect-error - this is fine\n      const obj = methods[key](...args);\n      if (addToStage) {\n        instance.addChild(obj);\n        // instance.addChild(obj);\n      }\n      return obj;\n    };\n  }\n  return factoryMethods as T;\n}\n\nexport function FactoryContainer<T extends typeof defaultFactoryMethods = typeof defaultFactoryMethods>(\n  extensions?: Partial<T>,\n): new () => IFactoryContainer<T> {\n  return class ExtendedContainer extends PIXIContainer implements IFactoryContainer<T> {\n    add: T;\n    make: T;\n\n    constructor() {\n      super();\n      extensions = Object.assign(defaultFactoryMethods, extensions);\n      this.make = createFactoryMethods(extensions, this, false);\n      this.add = createFactoryMethods(extensions, this, true);\n    }\n  };\n}\n\nexport class Factory {\n  static get = Object.assign(defaultFactoryMethods, {});\n}\n","import { DestroyOptions, Ticker } from 'pixi.js';\nimport type { IApplication } from '../core';\nimport { Application } from '../Application';\nimport { Animated, WithSignals } from '../mixins';\nimport { FactoryContainer } from '../mixins/factory';\nimport type { Size } from '../utils';\nimport { bindAllMethods } from '../utils';\n\n// Create a new class that extends PIXI.Container and includes the Animated and Factory mixins.\nconst _Container = Animated(WithSignals(FactoryContainer()));\n\n/**\n * Interface for the Container class.\n */\nexport interface IContainer {\n  app: IApplication;\n\n  destroy(options?: DestroyOptions): void;\n\n  added(): Promise<void> | void;\n\n  resize(size?: Size): void;\n\n  update(ticker?: Ticker | number): void;\n}\n\n/**\n * Configuration for the Container class.\n */\ntype ContainerConfig = {\n  autoResize: boolean;\n  autoUpdate: boolean;\n  priority: number;\n};\n\n/**\n * The Container class extends the _Container class (which includes the Animated and Factory mixins) and implements the IContainer interface.\n * It represents a container for PIXI.js display objects.\n */\nexport class Container<A extends Application = Application> extends _Container implements IContainer {\n  __dill_pixel_method_binding_root = true;\n\n  /**\n   * The constructor for the Container class.\n   * @param __config - The configuration for the container.\n   */\n  constructor(private __config: ContainerConfig = { autoResize: true, autoUpdate: false, priority: 0 }) {\n    super();\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('removed', this._removed);\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): A {\n    return Application.getInstance() as A;\n  }\n\n  /**\n   * Update the container. This method is meant to be overridden by subclasses.\n   * @param ticker\n   */\n  public update(ticker?: Ticker | number) {\n    void ticker;\n  }\n\n  /**\n   * Resize the container. This method is meant to be overridden by subclasses.\n   * @param size\n   */\n  public resize(size?: Size) {\n    void size;\n  }\n\n  /**\n   * This method is called when the container is added to the stage. It is meant to be overridden by subclasses.\n   */\n  public added() {}\n\n  destroy(options?: DestroyOptions): void {\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n    super.destroy(options);\n  }\n\n  public removed() {}\n\n  /**\n   * This method is called when the container is added to the stage. It sets up auto-resizing and auto-updating if enabled.\n   */\n  private _added() {\n    if (this.__config.autoResize) {\n      this.addSignalConnection(this.app.onResize.connect(this.resize, this.__config.priority));\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.add(this.update, this, this.__config.priority);\n    }\n    this.added();\n  }\n\n  private _removed() {\n    if (this.__config.autoResize) {\n      this.app.onResize.disconnect(this.resize);\n    }\n\n    if (this.__config.autoUpdate) {\n      this.app.ticker.remove(this.update, this);\n    }\n\n    this.removed();\n  }\n}\n","import { Ticker } from 'pixi.js';\nimport { Application } from '../Application';\nimport type { AssetLoadingOptions, Size } from '../utils';\nimport type { IContainer } from './Container';\nimport { Container } from './Container';\n\nexport type SceneAssets = Omit<AssetLoadingOptions, 'manifest' | 'initOptions' | 'assetPreferences'>;\n\nexport interface IScene extends IContainer {\n  id: string;\n  enter: () => Promise<any>;\n  exit: () => Promise<any>;\n  initialize: () => Promise<void> | void;\n  start: () => Promise<void> | void;\n  assets?: SceneAssets;\n  autoUnloadAssets?: boolean;\n}\n\nexport class Scene<T extends Application = Application> extends Container<T> implements IScene {\n  public readonly id: string;\n  autoUnloadAssets: boolean = false;\n\n  constructor() {\n    super({ autoResize: true, autoUpdate: true, priority: -9999 });\n  }\n\n  /**\n   * The assets to load for the scene\n   * @private\n   * @type {AssetLoadingOptions}\n   * @example\n   * ```ts\n   * assets: {\n   *  preload: {\n   *  assets: ['path/to/asset.png'],\n   *  bundles: ['bundle1', 'bundle2'],\n   *  },\n   *  background: {\n   *   assets: ['path/to/asset.png'],\n   *   bundles: ['bundle1', 'bundle2'],\n   *   },\n   * }\n   * ```\n   */\n  private _assets: AssetLoadingOptions;\n\n  get assets(): AssetLoadingOptions {\n    return this._assets;\n  }\n\n  set assets(value: AssetLoadingOptions) {\n    this._assets = value;\n  }\n\n  /**\n   * Called to initialize the scene\n   * Called before the scene is added to the stage\n   * and before the scene is animated in\n   * @returns {Promise<void> | void}\n   */\n  public initialize(): Promise<void> | void;\n  public async initialize(): Promise<void> {}\n\n  /**\n   * Called to animate the scene in\n   * @returns {Promise<void>}\n   */\n  public enter(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called to animate the scene out\n   * @returns {Promise<void>}\n   */\n  public exit(): Promise<any> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after the enter resolves\n   * If enter doesn't return a promise, this is called immediately after enter\n   * @returns {Promise<void> | void}\n   */\n  public start(): Promise<void> | void;\n\n  public async start(): Promise<void> {}\n\n  /**\n   * Called every frame\n   * @param {Ticker} ticker\n   */\n  public update(ticker?: Ticker) {\n    void ticker;\n  }\n\n  /**\n   * Called when the window is resized\n   * @param {Size} size\n   * @override\n   */\n  public resize(size?: Size): void {\n    void size;\n  }\n}\n","import { Cursor, Sprite } from 'pixi.js';\n\nimport { FactoryContainer } from '../mixins/factory';\nimport { Focusable, Interactive, WithSignals } from '../mixins';\nimport { Signal } from '../signals';\nimport type { SpriteSheetLike, TextureLike } from '../utils';\nimport { bindAllMethods } from '../utils';\nimport type { IApplication } from '../core';\nimport { Application } from '../Application';\n\nexport type ButtonCallback = (() => void) | (() => Promise<void>);\nexport type ButtonAction = { id: string | number; data?: any };\n\nexport type ButtonActionOrCallback = ButtonAction | ButtonCallback;\n\ntype ButtonTextureId = 'default' | 'hover' | 'active' | 'disabled';\n\nexport type ButtonConfig = {\n  textures: {\n    default: TextureLike;\n    hover?: TextureLike;\n    active?: TextureLike;\n    disabled?: TextureLike;\n  };\n  sounds?: {\n    hover?: string;\n    out?: string;\n    up?: string;\n    down?: string;\n    click?: string;\n  };\n  actions?: {\n    hover?: ButtonActionOrCallback;\n    out?: ButtonActionOrCallback;\n    up?: ButtonActionOrCallback;\n    down?: ButtonActionOrCallback;\n    click?: ButtonActionOrCallback;\n  };\n  cursor: Cursor;\n  disabledCursor: Cursor;\n  sheet: SpriteSheetLike;\n  enabled: boolean;\n};\n\nexport const ButtonConfigKeys: (keyof ButtonConfig)[] = [\n  'textures',\n  'sounds',\n  'actions',\n  'cursor',\n  'disabledCursor',\n  'sheet',\n  'enabled',\n];\n\n// Create a new class that extends Container and includes the Interactive and Focusable mixins.\nconst _Button = Focusable(Interactive(WithSignals(FactoryContainer())));\n\n/**\n * @class\n * @extends {Container}\n * @implements {IFocusable}\n * @description A class representing a button.\n */\nexport class Button extends _Button {\n  // signals\n  public onDown = new Signal<() => void>();\n  public onUp = new Signal<() => void>();\n  public onUpOutside = new Signal<() => void>();\n  public onOut = new Signal<() => void>();\n  public onOver = new Signal<() => void>();\n  public onClick = new Signal<() => void>();\n  public onEnabled = new Signal<() => void>();\n  public onDisabled = new Signal<() => void>();\n  public onKeyboardEvent = new Signal<(key: string) => void>();\n  // visual\n  public view: Sprite;\n  // whether the button is down\n  public isDown: boolean;\n  public isOver: boolean;\n  // config\n  protected config: ButtonConfig;\n  // a set of unique callbacks for when the button is down\n  protected _isDownCallbacks: Map<string, () => void> = new Map();\n  private _isDownListenerAdded: boolean = false;\n\n  /**\n   * @constructor\n   * @param {Partial<ButtonConfig>} config - The configuration for the button.\n   */\n  constructor(config: Partial<ButtonConfig>) {\n    super();\n\n    bindAllMethods(this);\n\n    this.config = Object.assign(\n      {\n        textures: { default: '' },\n        sheet: undefined,\n        enabled: true,\n        cursor: 'default',\n        disabledCursor: 'not-allowed',\n      },\n      config,\n    );\n\n    // Create a sprite with the default texture and add it to the container.\n    this.view = this.add.sprite({ asset: this.config.textures.default, sheet: this.config.sheet, anchor: 0.5 });\n\n    this.cursor = this.config.cursor;\n    this.enabled = config.enabled !== false;\n\n    // Set up interaction handlers.\n    // make them high priority so they run before any other interaction handlers\n    this.addSignalConnection(\n      this.onInteraction('pointerover').connect(this.handlePointerOver, -1),\n      this.onInteraction('pointerout').connect(this.handlePointerOut, -1),\n      this.onInteraction('pointerup').connect(this.handlePointerUp, -1),\n      this.onInteraction('click').connect(this.handleClick, -1),\n      this.onInteraction('tap').connect(this.handleClick, -1),\n      this.onInteraction('pointerdown').connect(this.handlePointerDown, -1),\n    );\n  }\n\n  // enabled state\n  protected _enabled: boolean;\n\n  /**\n   * @description Sets the enabled state of the button.\n   * @param {boolean} enabled - Whether the button is enabled.\n   */\n  public set enabled(enabled: boolean) {\n    if (this._enabled === enabled) {\n      return;\n    }\n    this._enabled = enabled;\n    this.cursor = this._enabled ? this.config.cursor : this.config.disabledCursor;\n    this.focusEnabled = enabled;\n    if (this._enabled) {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onEnabled.emit();\n    } else {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.disabled || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDisabled.emit();\n    }\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  focusOut() {\n    super.focusOut();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  blur() {\n    super.blur();\n    this.isDown = false;\n    this.isOver = false;\n  }\n\n  public getFocusArea() {\n    return this.view.getBounds().clone();\n  }\n\n  public getFocusPosition() {\n    return [-this.width * 0.5, -this.height * 0.5];\n  }\n\n  addIsDownCallback(callbackId: string, callback: () => void) {\n    this._isDownCallbacks.set(callbackId, callback);\n    this._checkIsDownCallbacks();\n  }\n\n  removeIsDownCallback(callbackId: string) {\n    this._isDownCallbacks.delete(callbackId);\n  }\n\n  setTexture(textureId: ButtonTextureId, texture: TextureLike) {\n    this.config.textures[textureId] = texture;\n    if (textureId === 'default') {\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n    }\n  }\n\n  /**\n   * @description Handles the pointer over event.\n   * Sets the texture of the button to the hover texture and emits the onOver event.\n   */\n  protected handlePointerOver() {\n    if (!this._enabled) {\n      return;\n    }\n    if (!this.isOver) {\n      this.isOver = true;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({\n      asset: this.config.textures.hover || this.config.textures.default,\n      sheet: this.config.sheet,\n    });\n    this.onOver.emit();\n    if (this.config.sounds?.hover) {\n      void this.app.audio.play(this.config.sounds.hover, 'sfx');\n    }\n    if (this.config.actions?.hover) {\n      this._doAction(this.config.actions.hover);\n    }\n  }\n\n  /**\n   * @description Handles the pointer out event.\n   * Sets the texture of the button to the default texture and emits the onOut event.\n   */\n  protected handlePointerOut() {\n    this.isOver = false;\n    if (!this._enabled) {\n      return;\n    }\n    if (this.isDown) {\n      return;\n    }\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onOut.emit();\n  }\n\n  /**\n   * @description Handles the pointer down event.\n   * Sets the isDown property to true and changes the texture of the button.\n   */\n  protected handlePointerDown() {\n    if (!this._enabled && !this.isKeyDown) {\n      return;\n    }\n    if (!this.isDown) {\n      window.removeEventListener('pointerup', this.handlePointerUpOutside);\n      this.off('pointerupoutside', this.handlePointerUpOutside);\n      window.addEventListener('pointerup', this.handlePointerUpOutside);\n      this.on('pointerupoutside', this.handlePointerUpOutside);\n      this.isDown = true;\n      this.view.texture = this.make.texture({\n        asset: this.config.textures.active || this.config.textures.hover || this.config.textures.default,\n        sheet: this.config.sheet,\n      });\n      this.onDown.emit();\n      if (this.config.sounds?.down) {\n        void this.app.audio.play(this.config.sounds.down, 'sfx');\n      }\n      if (this.config.actions?.down) {\n        if (this.config.actions?.down) {\n          this._doAction(this.config.actions.down);\n        }\n      }\n    }\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   * Removes the keyup event listener and emits the onPress and onUp events.\n   */\n  protected handlePointerUp() {\n    if (!this._enabled || !this.isOver) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.onUp.emit();\n    if (this.config.sounds?.up) {\n      void this.app.audio.play(this.config.sounds.up, 'sfx');\n    }\n    if (this.config.actions?.up) {\n      this._doAction(this.config.actions.up);\n    }\n  }\n\n  protected handleClick() {\n    this.isDown = false;\n    this.onClick.emit();\n    if (this.config.sounds?.click) {\n      void this.app.audio.play(this.config.sounds.click, 'sfx');\n    }\n    if (this.config.actions?.click) {\n      this._doAction(this.config.actions.click);\n    }\n  }\n\n  /**\n   * @description Handles the pointer up event.\n   */\n  protected handlePointerUpOutside() {\n    if (!this._enabled) {\n      return;\n    }\n    window.removeEventListener('pointerup', this.handlePointerUpOutside);\n    this.off('pointerupoutside', this.handlePointerUpOutside);\n    this.view.texture = this.make.texture({ asset: this.config.textures.default, sheet: this.config.sheet });\n    this.isDown = false;\n    this.isOver = false;\n    this.onUpOutside.emit();\n\n    if (this.config.sounds?.up) {\n      void this.app.audio.play(this.config.sounds.up, 'sfx');\n    }\n    if (this.config.actions?.up) {\n      this._doAction(this.config.actions.up);\n    }\n  }\n\n  private _doAction(action: ButtonActionOrCallback) {\n    if (typeof action === 'function') {\n      void action();\n    } else {\n      if (!action.data.button) {\n        action.data.button = this;\n      }\n      this.app.exec.sendAction(action.id, action.data);\n    }\n  }\n\n  private _checkIsDownCallbacks() {\n    // check if there are any callbacks, if there are, add the ticker listener\n    if (!this._isDownListenerAdded && this._isDownCallbacks.size > 0) {\n      this._isDownListenerAdded = true;\n      this.app.ticker.add(this._handleIsDownCallbacks);\n    } else {\n      this.app.ticker.remove(this._handleIsDownCallbacks);\n      this._isDownListenerAdded = false;\n    }\n  }\n\n  private _handleIsDownCallbacks() {\n    if (this.isDown) {\n      this._isDownCallbacks.forEach((callback) => {\n        callback();\n      });\n    }\n  }\n}\n","import { Container, Point } from 'pixi.js';\nimport type { ContainerLike, PointLike } from '../utils';\nimport { bindAllMethods, Logger, resolvePointLike } from '../utils';\nimport { Signal } from '../signals';\nimport { IApplication } from '../core';\nimport type { KeyboardEventDetail } from '../plugins';\nimport { Application } from '../Application';\n\ntype CameraConfig = {\n  container: Container;\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  target: ContainerLike | null;\n  targetPivot: Point;\n  lerp: number;\n};\n\n// require container to be set\ntype OptionalCameraConfig = Partial<CameraConfig>;\ntype RequiredCameraConfig = Required<Pick<CameraConfig, 'container'>>;\ntype CustomCameraConfig = OptionalCameraConfig & RequiredCameraConfig;\n\nexport interface ICamera {\n  onZoom: Signal<(camera?: ICamera) => void>;\n  onZoomComplete: Signal<(camera?: ICamera) => void>;\n  container: Container;\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  viewportWidth: number;\n  viewportHeight: number;\n  worldWidth: number;\n  worldHeight: number;\n  readonly targetPivot: Point;\n  readonly targetScale: Point;\n  readonly zooming: boolean;\n  readonly zoomLerp: number;\n  readonly lerp: number;\n  readonly target: ContainerLike | null;\n  readonly followOffset: Point;\n  app: IApplication;\n\n  follow(target: ContainerLike, offset: PointLike): void;\n\n  pan(deltaX: number, deltaY: number): void;\n\n  zoom(scale: number, lerp?: number): void;\n\n  update(): void;\n}\n\nexport class Camera extends Container implements ICamera {\n  public onZoom = new Signal<(camera?: ICamera) => void>();\n  public onZoomComplete = new Signal<(camera?: ICamera) => void>();\n  public container: Container;\n  public minX: number = 0;\n  public minY: number = 0;\n  public maxX: number;\n  public maxY: number;\n  public viewportWidth: number;\n  public viewportHeight: number;\n  public worldWidth: number;\n  public worldHeight: number;\n\n  constructor(public config: CustomCameraConfig) {\n    super({ isRenderGroup: true });\n    bindAllMethods(this);\n    if (config) {\n      this.container = config.container;\n      this.addChild(this.container);\n      if (config.minX) {\n        this.minX = config.minX;\n      }\n      if (config.maxX) {\n        this.maxX = config.maxX;\n      }\n      if (config.minY) {\n        this.minY = config.minY;\n      }\n      this.viewportWidth = config.viewportWidth ?? this.app.size.width;\n      this.viewportHeight = config.viewportHeight ?? this.app.size.width;\n      this.worldWidth = config.worldWidth ?? this.viewportWidth;\n      this.worldHeight = config.worldHeight ?? this.viewportHeight;\n      this.maxX = config.maxX ?? this.worldWidth - this.viewportWidth;\n      this.maxY = config.maxY ?? this.worldHeight - this.viewportHeight;\n    }\n\n    this._targetPivot.set(this.viewportWidth * 0.5, this.viewportHeight * 0.5);\n    if (config.target) {\n      this.target = config.target;\n    }\n    this._lerp = 1;\n    this.update();\n    if (config.lerp) {\n      this.lerp = config.lerp;\n    }\n    return this;\n  }\n\n  protected _zooming: boolean = false;\n\n  get zooming(): boolean {\n    return this._zooming;\n  }\n\n  protected _zoomLerp: number = 0.1;\n\n  get zoomLerp(): number {\n    return this._zoomLerp;\n  }\n\n  protected _targetPivot: Point = new Point(0, 0);\n\n  get targetPivot(): Point {\n    return this._targetPivot;\n  }\n\n  protected _targetScale: Point = new Point(1, 1);\n\n  get targetScale(): Point {\n    return this._targetPivot;\n  }\n\n  private _lerp: number = 0;\n\n  get lerp(): number {\n    return this._lerp;\n  }\n\n  set lerp(value: number) {\n    // if the value is less than 0 or greater than 1, clamp it to the range [0, 1], and log an error\n    if (value < 0 || value > 1) {\n      Logger.error('Camera lerp value must be in the range [0, 1]');\n    }\n    this._lerp = Math.max(0, Math.min(value, 1));\n  }\n\n  protected _target: ContainerLike | null = null;\n\n  get target(): ContainerLike | null {\n    return this._target;\n  }\n\n  set target(value: ContainerLike | null) {\n    this._target = value;\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n  }\n\n  protected _followOffset: Point = new Point(0, 0);\n  get followOffset(): Point {\n    return this._followOffset;\n  }\n\n  set followOffset(value: PointLike) {\n    this._followOffset = resolvePointLike(value, true);\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  follow(target: ContainerLike, offset?: PointLike) {\n    if (!offset) {\n      offset = { x: 0, y: 0 };\n    }\n    this.followOffset = offset;\n    this.target = target;\n  }\n\n  pan(deltaX: number, deltaY: number) {\n    let newPivotX = this.pivot.x + deltaX;\n    let newPivotY = this.pivot.y + deltaY;\n\n    // Clamp pivot to min and max values\n    newPivotX = Math.max(this.minX, Math.min(newPivotX, this.maxX));\n    newPivotY = Math.max(this.minY, Math.min(newPivotY, this.maxY));\n\n    this._targetPivot.set(newPivotX, newPivotY);\n  }\n\n  zoom(scale: number, lerp: number = 0.1) {\n    this._zoomLerp = lerp;\n    this._zooming = true;\n    this._targetScale.set(scale, scale);\n  }\n\n  update() {\n    this.updateZoom();\n    if (this._target) {\n      this.focusOn(this._target);\n    }\n    this.updatePosition(this._zooming);\n    if (\n      this._zooming &&\n      Math.abs(this.scale.x - this._targetScale.x) < 0.001 &&\n      Math.abs(this.scale.y - this._targetScale.y) < 0.001\n    ) {\n      this.onZoom.emit(this);\n      this._zooming = false;\n      this.scale.set(this._targetScale.x, this._targetScale.y);\n      this.onZoomComplete.emit(this);\n    } else if (this._zooming) {\n      this.onZoom.emit(this);\n    }\n  }\n\n  private focusOn(entity: ContainerLike) {\n    // Get the global position of the entity and convert it to the local position within the container.\n    const globalPosition = entity.getGlobalPosition();\n    const spritePosition = this.toLocal(globalPosition);\n\n    const posXModifier = this.position.x / this.scale.x - this.viewportWidth / 2;\n    const posYModifier = this.position.y / this.scale.y - this.viewportHeight / 2;\n\n    const offsetX = this.followOffset.x / this.scale.x;\n    const offsetY = this.followOffset.y / this.scale.y;\n\n    this._targetPivot.x = (spritePosition.x * this.scale.x + this.viewportWidth / 2) * (1 / this.scale.x) + offsetX;\n\n    const tMinX = this.viewportWidth / this.scale.x / 2 + posXModifier + this.minX - offsetX;\n    const tMaxX = this.worldWidth - this.viewportWidth / this.scale.x / 2 + posXModifier + this.maxX + offsetX;\n\n    if (this._targetPivot.x < tMinX) {\n      this._targetPivot.x = tMinX;\n    } else if (this._targetPivot.x > tMaxX) {\n      this._targetPivot.x = tMaxX;\n    }\n\n    this._targetPivot.y = (spritePosition.y * this.scale.y + this.viewportHeight / 2) * (1 / this.scale.y) + offsetY;\n\n    const tMinY = this.viewportHeight / this.scale.y / 2 + posYModifier + this.minY - offsetY;\n    const tMaxY = this.worldHeight - this.viewportHeight / this.scale.y / 2 + posYModifier + this.maxY - offsetY;\n\n    if (this._targetPivot.y < tMinY) {\n      this._targetPivot.y = tMinY;\n    } else if (this._targetPivot.y > tMaxY) {\n      this._targetPivot.y = tMaxY;\n    }\n  }\n\n  private updateZoom() {\n    const currentScaleX = this.scale.x;\n    const currentScaleY = this.scale.y;\n\n    const interpolatedScaleX = currentScaleX + this._zoomLerp * (this._targetScale.x - currentScaleX);\n    const interpolatedScaleY = currentScaleY + this._zoomLerp * (this._targetScale.y - currentScaleY);\n\n    this.scale.set(Math.max(0, interpolatedScaleX), Math.max(0, interpolatedScaleY));\n  }\n\n  private updatePosition(skipLerp: boolean = false) {\n    if (this.lerp > 0 && !skipLerp) {\n      // Current pivot positions\n      const currentPivotX = this.pivot.x;\n      const currentPivotY = this.pivot.y;\n\n      // Calculate interpolated pivot positions\n      const interpolatedPivotX = currentPivotX + this.lerp * (this._targetPivot.x - currentPivotX);\n      const interpolatedPivotY = currentPivotY + this.lerp * (this._targetPivot.y - currentPivotY);\n\n      // Set the pivot to the interpolated position to smooth out the camera movement\n      this.pivot.set(interpolatedPivotX, interpolatedPivotY);\n    } else {\n      this.pivot.set(this._targetPivot.x, this._targetPivot.y);\n    }\n\n    this.position.set(this.viewportWidth / 2, this.viewportHeight / 2);\n  }\n}\n\nexport class CameraController {\n  private dragging: boolean = false;\n  private previousPointerPosition: Point | null = null;\n\n  constructor(\n    public camera: Camera,\n    public interactiveArea: Container,\n  ) {\n    bindAllMethods(this);\n    this.camera = camera;\n    this.interactiveArea = interactiveArea;\n    this.app.keyboard.onKeyDown().connect(this.handleKeyDown);\n    // Keyboard events\n\n    // Mouse and touch events\n    this.interactiveArea.on('pointerdown', this.onPointerDown.bind(this));\n    this.interactiveArea.on('pointermove', this.onPointerMove.bind(this));\n    this.app.stage.on('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.on('pointerupoutside', this.onPointerUp.bind(this));\n\n    // Touch events equivalent\n    this.interactiveArea.on('touchstart', this.onPointerDown.bind(this));\n    this.interactiveArea.on('touchmove', this.onPointerMove.bind(this));\n    this.interactiveArea.on('touchend', this.onPointerUp.bind(this));\n  }\n\n  get app(): IApplication {\n    return Application.getInstance();\n  }\n\n  destroy() {\n    // Mouse and touch events\n    this.interactiveArea.removeAllListeners();\n    this.app.stage.off('pointerup', this.onPointerUp.bind(this));\n    this.app.stage.off('pointerupoutside', this.onPointerUp.bind(this));\n  }\n\n  private handleKeyDown(detail: KeyboardEventDetail) {\n    const panSpeed = 10; // Adjust pan speed as necessary\n    const zoomFactor = 1.1; // Adjust zoom factor as necessary\n\n    switch (detail.event.key) {\n      case 'ArrowUp':\n        this.camera.pan(0, -panSpeed);\n        break;\n      case 'ArrowDown':\n        this.camera.pan(0, panSpeed);\n        break;\n      case 'ArrowLeft':\n        this.camera.pan(-panSpeed, 0);\n        break;\n      case 'ArrowRight':\n        this.camera.pan(panSpeed, 0);\n        break;\n      case '+':\n        this.camera.zoom(zoomFactor);\n        break;\n      case '-':\n        this.camera.zoom(1 / zoomFactor);\n        break;\n    }\n  }\n\n  private onPointerDown(event: MouseEvent | TouchEvent) {\n    this.dragging = true;\n    this.previousPointerPosition = this.getEventPosition(event);\n  }\n\n  private onPointerMove(event: MouseEvent | TouchEvent) {\n    if (!this.dragging || !this.previousPointerPosition) return;\n\n    const currentPosition = this.getEventPosition(event);\n    const deltaX = currentPosition.x - this.previousPointerPosition.x;\n    const deltaY = currentPosition.y - this.previousPointerPosition.y;\n\n    this.camera.pan(deltaX, deltaY);\n    this.previousPointerPosition = currentPosition;\n  }\n\n  private onPointerUp() {\n    this.dragging = false;\n    this.previousPointerPosition = null;\n  }\n\n  private getEventPosition(event: MouseEvent | TouchEvent): Point {\n    if (event instanceof TouchEvent) {\n      return new Point(event.touches[0].clientX, event.touches[0].clientY);\n    } else {\n      return new Point(event.clientX, event.clientY);\n    }\n  }\n}\n","import type { DestroyOptions } from 'pixi.js';\nimport { Container as PIXIContainer } from 'pixi.js';\nimport { Application } from '../Application';\nimport { FactoryContainer } from '../mixins/factory';\nimport { WithSignals } from '../mixins';\nimport { Signal } from '../signals';\nimport type { ContainerLike, PointLike } from '../utils';\nimport { bindAllMethods, Logger, resolvePointLike } from '../utils';\nimport type { Container } from './Container';\n\nconst _FlexContainer = WithSignals(FactoryContainer());\n\nexport interface FlexContainerConfig {\n  width: number;\n  height: number;\n  bindTo: ContainerLike;\n  bindToAppSize: boolean;\n  gap: number;\n  flexWrap: 'wrap' | 'nowrap';\n  flexDirection: 'row' | 'column';\n  alignItems: 'center' | 'flex-start' | 'flex-end';\n  justifyContent: 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n}\n\nexport const FlexContainerConfigKeys: (keyof FlexContainerConfig)[] = [\n  'width',\n  'height',\n  'bindTo',\n  'bindToAppSize',\n  'gap',\n  'flexWrap',\n  'flexDirection',\n  'alignItems',\n  'justifyContent',\n];\n\nconst defaultConfig = {\n  bindTo: null,\n  width: 0,\n  height: 0,\n  gap: 0,\n  flexWrap: 'nowrap',\n  flexDirection: 'row',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  padding: 0,\n};\n\nexport interface IFlexContainer extends Container {\n  onLayoutComplete: Signal<() => void>;\n  debug: boolean;\n  config: FlexContainerConfig;\n\n  containerWidth: number;\n  containerHeight: number;\n\n  removeChildren<U extends PIXIContainer>(): U[];\n\n  removeChildAt<U extends PIXIContainer>(index: number): U;\n\n  addChildAt<U extends PIXIContainer>(child: U, index: number): U;\n\n  setChildIndex<U extends PIXIContainer>(child: U, index: number): void;\n\n  getChildIndex<U extends PIXIContainer>(child: U): number;\n\n  getChildAt<U extends PIXIContainer>(index: number): U;\n\n  setFlexChildren(): void;\n\n  cleanup(): void;\n\n  handleChildAdded(child: any): void;\n\n  deleteChild(child: PIXIContainer): boolean;\n\n  layout(): void;\n\n  added(): void;\n}\n\nexport type FlexWrap = 'wrap' | 'nowrap';\nexport type FlexDirection = 'row' | 'column';\nexport type AlignItems = 'center' | 'flex-start' | 'flex-end';\nexport type JustifyContent = 'center' | 'space-between' | 'space-around' | 'space-evenly' | 'flex-start' | 'flex-end';\n\nexport class FlexContainer<T extends Application = Application> extends _FlexContainer {\n  public onLayoutComplete: Signal<() => void> = new Signal<() => void>();\n  public debug: boolean = false;\n  public config: FlexContainerConfig;\n  protected paddingLeft: number = 0;\n  protected paddingRight: number = 0;\n  protected paddingTop: number = 0;\n  protected paddingBottom: number = 0;\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  private _reparentAddedChild: boolean = true;\n\n  constructor(config: Partial<FlexContainerConfig> = {}) {\n    super();\n\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = Object.assign({ ...defaultConfig }, config);\n\n    // Add an event listener for the 'added' event.\n    this.on('added', this._added);\n    this.on('childAdded', this.handleChildAdded);\n    this.on('childRemoved', this.handleChildRemoved);\n\n    this.layout();\n  }\n\n  protected _flexChildren: PIXIContainer[] = [];\n\n  get flexChildren() {\n    return this._flexChildren;\n  }\n\n  get gap(): number {\n    return this.config.gap!;\n  }\n\n  set gap(value: number) {\n    this.config.gap = value;\n    this.layout();\n  }\n\n  get flexWrap(): FlexWrap {\n    return this.config.flexWrap!;\n  }\n\n  set flexWrap(value: FlexWrap) {\n    this.config.flexWrap = value;\n    this.layout();\n  }\n\n  get flexDirection(): FlexDirection {\n    return this.config.flexDirection!;\n  }\n\n  set flexDirection(value: FlexDirection) {\n    this.config.flexDirection = value;\n    this.layout();\n  }\n\n  get alignItems(): AlignItems {\n    return this.config.alignItems!;\n  }\n\n  set alignItems(value: AlignItems) {\n    this.config.alignItems = value;\n    this.layout();\n  }\n\n  get justifyContent(): JustifyContent {\n    return this.config.justifyContent!;\n  }\n\n  set justifyContent(value: JustifyContent) {\n    this.config.justifyContent = value;\n    this.layout();\n  }\n\n  get containerHeight(): number {\n    return this.config.height;\n  }\n\n  set containerHeight(value: number) {\n    this.config.height = value;\n    this.layout();\n  }\n\n  get containerWidth(): number {\n    return this.config.width;\n  }\n\n  set containerWidth(value: number) {\n    this.config.width = value;\n    this.layout();\n  }\n\n  get size(): { width: number; height: number } {\n    return { width: this.config.width, height: this.config.height };\n  }\n\n  set size(size: PointLike) {\n    const { x, y } = resolvePointLike(size);\n    this.config.width = x;\n    this.config.height = y;\n\n    this.layout();\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = <U extends PIXIContainer>() => {\n    const children = this.flexChildren;\n    this.removeChild(...children);\n    return children as U[];\n  };\n\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this.removeChild(this.flexChildren[index]) as U;\n  };\n\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this.add.existing(child);\n    this.setChildIndex(newChild, index);\n    return newChild;\n  };\n\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    const actualChild = this._childMap.get(child as PIXIContainer);\n    if (actualChild) {\n      super.setChildIndex(actualChild, index);\n      this.setFlexChildren();\n      this.layout();\n    }\n  };\n\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   * @param {DisplayObject} child\n   * @param {number} index\n   * @returns {U}\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    if (this._childMap.has(child as PIXIContainer)) {\n      return super.getChildIndex(child.parent);\n    }\n    return super.getChildIndex(child);\n  };\n\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return super.getChildAt(index)?.getChildAt(0) as U;\n  };\n\n  destroy(_options?: DestroyOptions | boolean) {\n    this.off('childAdded', this.handleChildAdded);\n    this.off('childRemoved', this.handleChildRemoved);\n\n    super.destroy(_options);\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   * @param children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child);\n        if (actualChild) {\n          return super.removeChild(actualChild);\n        }\n        return;\n      });\n    } else {\n      return super.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  /**\n   * Public method to manually trigger a layout\n   */\n  public layout() {\n    this.app.ticker.addOnce(this._layout, this);\n  }\n\n  resize() {\n    this.layout();\n  }\n\n  update() {}\n\n  added() {}\n\n  /**\n   * Ensures we delete the child from the map when it's removed\n   * @protected\n   */\n  protected handleChildRemoved(child: PIXIContainer) {\n    if (this._reparentAddedChild) {\n      if (!this.deleteChild(child)) {\n        child = (child as Container).getChildAt(0);\n        this.deleteChild(child);\n      }\n    }\n  }\n\n  /**\n   * Deletes a child from the map\n   * @param {Container} child\n   * @returns {boolean}\n   * @protected\n   */\n  protected deleteChild(child: PIXIContainer): boolean {\n    const isInMap = this._childMap.has(child as Container);\n    if (isInMap) {\n      // disconnect signal\n      if (child instanceof FlexContainer) {\n        try {\n          child.onLayoutComplete.disconnect(this.layout);\n        } catch (e) {\n          Logger.warn(`FlexContainer:: Error disconnecting signal from removed child`);\n          console.warn(e);\n        }\n      }\n      this._childMap.delete(child as Container);\n      this.setFlexChildren();\n      this.layout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sorts the children in the container\n   * Needed because we need to ensure re-parented children are sorted by their actual index in the container\n   * @protected\n   */\n  protected setFlexChildren() {\n    this._flexChildren = Array.from(this._childMap.keys());\n    // order by the actual index in the container\n    this._flexChildren.sort((a, b) => this.getChildIndex(a) - this.getChildIndex(b));\n    this.cleanup();\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.flexChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (!(child as Container)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  /**\n   * Re-parent a child to account for e.g. sprite that are added with anchors\n   * @param child\n   * @protected\n   */\n  protected handleChildAdded(child: any) {\n    // avoid maximum call stack error b/c we're about to add a container\n    if (!this._reparentAddedChild) return;\n    this._reparentAddedChild = false;\n    // add an inner container so we can account for e.g. sprite that are added with anchors\n    // re-parent the added child to the inner container\n    const container = this.add.container();\n    container.add.existing(child);\n    // figure out the bounds of the inner container\n    // then, offset its pivot so that it's top-left corner is always at 0,0\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n\n    if (child instanceof FlexContainer) {\n      this.addSignalConnection(child.onLayoutComplete.connect(this.layout));\n    }\n\n    this._childMap.set(child, container);\n    this.setFlexChildren();\n    this._reparentAddedChild = true;\n    this.app.render();\n    this.layout();\n  }\n\n  /**\n   * Lay out the children according to the settings\n   * Tries to follow the CSS Flexbox model as closely as possible\n   * @private\n   */\n  private _layout() {\n    if (this.config.bindTo) {\n      this.config.width = this.config.bindTo?.width ?? 0;\n      this.config.height = this.config.bindTo?.height ?? 0;\n    }\n\n    if (this.config.bindToAppSize) {\n      this.config.width = this.app.size.width;\n      this.config.height = this.app.size.height;\n    }\n\n    const canHaveEndlessWidthOrHeight = ['flex-start'];\n\n    let { width, height } = this.config;\n    const { gap, flexDirection, flexWrap, alignItems, justifyContent } = this.config;\n\n    if (\n      this.config.flexDirection === 'row' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      width = Infinity;\n    } else if (\n      this.config.flexDirection === 'column' &&\n      this.config.flexWrap === 'nowrap' &&\n      canHaveEndlessWidthOrHeight.includes(this.config.justifyContent)\n    ) {\n      height = Infinity;\n    }\n\n    let layoutProps: { x: number; y: number }[] = [];\n\n    let x = 0;\n    let y = 0;\n    let rowHeight = 0;\n    let columnWidth = 0;\n    let nextRowY = 0; // y-coordinate of the next row\n    let nextColumnX = 0; // x-coordinate of the next column\n    const newLayoutProps: { x: number; y: number }[] = [];\n    const items = this.children.filter(Boolean);\n    let lineItems: { index: number; width: number; height: number }[] = [];\n    let lineStart = 0;\n\n    const shouldWrap = (childRef: PIXIContainer, x: number, y: number) =>\n      (flexDirection === 'row' && x + childRef.width + gap! > width!) ||\n      (flexDirection === 'column' && y + childRef.height + gap! > height!);\n\n    const handleWrap = () => {\n      if (flexDirection === 'row') {\n        nextRowY += rowHeight + gap!;\n      } else {\n        nextColumnX += columnWidth + gap!;\n      }\n      x = 0;\n      y = 0;\n      rowHeight = 0;\n      columnWidth = 0;\n    };\n\n    const updateLayoutVariables = (childRef: PIXIContainer) => {\n      if (flexDirection === 'row') {\n        x += childRef.width + gap!;\n        rowHeight = Math.max(rowHeight, childRef.height);\n      } else {\n        y += childRef.height + gap!;\n        columnWidth = Math.max(columnWidth, childRef.width);\n      }\n    };\n\n    const getNextX = (currentX: number) => (flexDirection === 'row' ? currentX : nextColumnX);\n    const getNextY = (currentY: number) => (flexDirection === 'column' ? currentY : nextRowY);\n\n    const handleJustification = (\n      lineItems: { index: number; width: number; height: number }[],\n      lineStart: number,\n      lineEnd: number,\n      direction: 'row' | 'column',\n    ) => {\n      const extraSpace = (direction === 'row' ? width! : height!) - (lineEnd - lineStart);\n      lineItems.forEach(({ index }, i) => {\n        let offset = 0;\n        switch (justifyContent) {\n          case 'flex-start':\n            break; // Do nothing\n          case 'flex-end':\n            offset = extraSpace;\n            break;\n          case 'center':\n            offset = extraSpace / 2;\n            break;\n          case 'space-between':\n            offset = lineItems.length > 1 ? i * (extraSpace / (lineItems.length - 1)) : 0;\n            break;\n          case 'space-around':\n            offset = (extraSpace / lineItems.length) * i + extraSpace / (2 * lineItems.length);\n            break;\n          case 'space-evenly':\n            offset = (extraSpace / (lineItems.length + 1)) * (i + 1);\n            break;\n        }\n        if (direction === 'row') {\n          newLayoutProps[index].x += offset;\n        } else {\n          newLayoutProps[index].y += offset;\n        }\n      });\n    };\n\n    const handleAlignment = (newLayoutProps: { x: number; y: number }[], items: (PIXIContainer | null)[]) => {\n      newLayoutProps.forEach((props, index) => {\n        const childRef = items[index] as Container;\n        if (!childRef) return;\n\n        if (flexDirection === 'row') {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.y += rowHeight - childRef.height;\n              break;\n            case 'center':\n              props.y += (rowHeight - childRef.height) / 2;\n              break;\n          }\n        } else {\n          switch (alignItems) {\n            case 'flex-start':\n              break;\n            case 'flex-end':\n              props.x = width ? width - childRef.width : -childRef.width;\n              break;\n            case 'center':\n              props.x += (width - childRef.width) / 2;\n              break;\n          }\n        }\n      });\n    };\n\n    items.forEach((childRef, index) => {\n      if (!childRef) return;\n\n      const item = childRef as Container;\n\n      // Check for wrapping\n      if (flexWrap === 'wrap' && shouldWrap(item, x, y)) {\n        handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n        handleWrap();\n        lineItems = [];\n        lineStart = x;\n      }\n\n      lineItems.push({ index, width: item.width, height: item.height });\n\n      // Position child\n      newLayoutProps[index] = { x: getNextX(x), y: getNextY(y) };\n\n      // Update layout variables\n      updateLayoutVariables(item);\n    });\n\n    // Justify the last line\n    handleJustification(lineItems, lineStart, flexDirection === 'column' ? y - gap : x - gap, flexDirection);\n    handleAlignment(newLayoutProps, items);\n\n    layoutProps = newLayoutProps;\n\n    items.forEach((childRef, index) => {\n      const item = childRef as Container;\n      const { x, y } = layoutProps[index] || { x: 0, y: 0 };\n      item.position.set(x, y);\n    });\n\n    // handle alignment within container bounds\n    const totalHeight = this.children.reduce((acc, child) => Math.max(acc, child.y + (child as Container).height), 0);\n    this.children.forEach((child) => {\n      if (this.config.flexDirection === 'row') {\n        switch (this.config.alignItems) {\n          case 'center':\n            child.y -= (totalHeight - height) * 0.5;\n            break;\n          case 'flex-end':\n            child.y += height - totalHeight;\n            break;\n        }\n      }\n    });\n    // force re-render\n\n    this.onLayoutComplete.emit();\n  }\n\n  private _added() {\n    this.addSignalConnection(this.app.onResize.connect(this.layout, 0));\n    this.added();\n  }\n}\n","import { Bounds, Container as PIXIContainer, Graphics, Rectangle } from 'pixi.js';\nimport { Application } from '../Application';\nimport { FactoryContainer } from '../mixins/factory';\nimport { WithSignals } from '../mixins';\nimport type { Padding, PointLike, Size, SizeLike } from '../utils';\nimport { bindAllMethods, ensurePadding, Logger, resolvePadding, resolveSizeLike } from '../utils';\nimport { Container } from './Container';\nimport type { IFlexContainer } from './FlexContainer';\n\nexport type UICanvasEdge =\n  | 'top right'\n  | 'top left'\n  | 'top center'\n  | 'top'\n  | 'bottom right'\n  | 'bottom left'\n  | 'bottom center'\n  | 'bottom'\n  | 'left top'\n  | 'left bottom'\n  | 'left center'\n  | 'left'\n  | 'right top'\n  | 'right bottom'\n  | 'right center'\n  | 'right'\n  | 'center';\n\nexport interface UICanvasChildSettings {\n  align: UICanvasEdge;\n  padding: Padding;\n}\n\nexport interface UICanvasChildProps {\n  align: UICanvasEdge;\n  padding: Partial<Padding> | PointLike;\n}\n\nexport type UICanvasConfig = {\n  debug: boolean;\n  padding: Padding;\n  size: Size;\n  useAppSize: boolean;\n};\n\nexport const UICanvasConfigKeys: (keyof UICanvasConfig)[] = ['debug', 'padding', 'size', 'useAppSize'];\n\nexport type UICanvasProps = {\n  debug: boolean;\n  padding: Partial<Padding> | PointLike;\n  size?: SizeLike;\n  useAppSize?: boolean;\n};\n\nconst _UICanvas = WithSignals(FactoryContainer());\n\nexport class UICanvas<T extends Application = Application> extends _UICanvas {\n  public config: UICanvasConfig;\n  protected _outerBounds: Rectangle;\n  protected _displayBounds: Rectangle;\n  protected settingsMap = new Map<PIXIContainer, UICanvasChildSettings>();\n  protected _childMap = new Map<PIXIContainer, PIXIContainer>();\n  protected _debugGraphics: Graphics;\n  protected _inner: Container;\n  private _reparentAddedChild: boolean = true;\n  private _disableAddChildError: boolean = false;\n\n  constructor(config: Partial<UICanvasProps>) {\n    super();\n    // Bind all methods of this class to the current instance.\n    bindAllMethods(this);\n    this.config = {\n      debug: config.debug === true,\n      padding: ensurePadding(config?.padding ?? 0),\n      size: config.size !== undefined ? resolveSizeLike(config.size) : { width: 0, height: 0 },\n      useAppSize: config.useAppSize === true,\n    };\n    this._disableAddChildError = true;\n    this._inner = this.add.container({ x: this.config.padding.left, y: this.config.padding.top });\n    this._disableAddChildError = false;\n\n    this.addSignalConnection(this.app.onResize.connect(this.resize));\n\n    this.on('childRemoved', this._childRemoved);\n    this.once('added', this._added);\n  }\n\n  protected _bounds: Bounds;\n\n  get bounds(): Bounds {\n    if (!this._bounds) {\n      this._bounds = this.getBounds();\n    }\n    return this._bounds;\n  }\n\n  protected _canvasChildren: PIXIContainer[] = [];\n\n  public get canvasChildren(): PIXIContainer[] {\n    return this._canvasChildren;\n  }\n\n  /**\n   * Get the application instance.\n   */\n  public get app(): T {\n    return Application.getInstance() as T;\n  }\n\n  set size(value: SizeLike) {\n    this.config.useAppSize = false;\n    this.config.size = value === undefined ? { width: 0, height: 0 } : resolveSizeLike(value);\n    this.resize();\n  }\n\n  set padding(value: Partial<Padding> | PointLike) {\n    this.config.padding = ensurePadding(value);\n    this._inner.position.set(this.config.padding.left, this.config.padding.top);\n    this.resize();\n  }\n\n  private static isFlexContainer(child: PIXIContainer): boolean {\n    return (child as any)?.flexChildren !== undefined;\n  }\n\n  /**\n   * Removes all the children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChildren = (beginIndex?: number, endIndex?: number) => {\n    return this._inner.removeChildren(beginIndex, endIndex);\n  };\n\n  /**\n   * Removes a child from the container at the specified index\n   * Override because we need to remove from the inner container\n   */\n  public removeChildAt = <U extends PIXIContainer>(index: number): U => {\n    return this._inner.removeChildAt(index) as U;\n  };\n\n  /**\n   * Adds a child to the container at the specified index\n   * Override because we need to ensure it sets the child index properly\n   */\n  public addChildAt = <U extends PIXIContainer>(child: U, index: number) => {\n    const newChild = this._inner.add.existing(child);\n    this._inner.setChildIndex(newChild, index);\n    return newChild;\n  };\n\n  /**\n   * Sets the index of the child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public setChildIndex = <U extends PIXIContainer>(child: U, index: number) => {\n    this._inner.setChildIndex(child, index);\n    this.layout();\n  };\n\n  /**\n   * Gets the index of a child in the container\n   * Override because we need to ensure it targets the parent container that we added\n   */\n  public getChildIndex = <U extends PIXIContainer>(child: U) => {\n    return this._inner.getChildIndex(child);\n  };\n\n  /**\n   * Gets the child at the specified index\n   * Override due to re-parenting\n   */\n  public getChildAt = <U extends PIXIContainer>(index: number) => {\n    return this._inner.getChildAt(index)?.getChildAt(0) as U;\n  };\n\n  public addChild<U extends PIXIContainer[]>(...children: PIXIContainer[]): U[0] {\n    if (this._disableAddChildError) {\n      return super.addChild(...children) as U[0];\n    }\n    Logger.warn(\n      `UICanvas:: You probably shouldn't add children directly to UICanvas. Use .addElement(child, settings) instead, so you can pass alignment settings.`,\n      children,\n      `will be added using the default 'top left' alignment'.`,\n    );\n    return this._inner.addChild(...children) as U[0];\n  }\n\n  /**\n   * Removes one or more children from the container\n   * Override because we need to ensure it returns the proper re-parented children\n   */\n  public removeChild(...children: PIXIContainer[]): PIXIContainer {\n    if (this._reparentAddedChild) {\n      children.forEach((child) => {\n        const actualChild = this._childMap.get(child as PIXIContainer) as PIXIContainer;\n        if (actualChild) {\n          return this._inner.removeChild(actualChild);\n        }\n        return undefined;\n      });\n    } else {\n      return this._inner.removeChild(...children);\n    }\n    return children[0];\n  }\n\n  public resize() {\n    const _size = this.config.useAppSize ? this.app.size : this.config.size;\n\n    this._displayBounds = this.__calculateBounds(_size);\n    this._outerBounds = this.__calculateOuterBounds(_size);\n\n    this.layout();\n\n    if (this.config.useAppSize) {\n      this.position.set(-_size.width * 0.5, -_size.height * 0.5);\n    }\n\n    if (this.config.debug) {\n      this.app.ticker.addOnce(this.drawDebug);\n    }\n  }\n\n  public layout() {\n    this._inner.children.forEach((child) => {\n      const childObj = child as PIXIContainer;\n      const settings = this.settingsMap.get(childObj);\n      if (settings) {\n        this.applySettings(childObj, settings);\n      }\n    });\n  }\n\n  public addElement<U extends PIXIContainer = PIXIContainer>(\n    child: PIXIContainer,\n    settings?: Partial<UICanvasChildProps>,\n  ): U {\n    const container = this._inner.add.container();\n    container.addChild(child);\n    const bounds = container.getLocalBounds();\n    if (bounds.x < 0) {\n      container.pivot.x = bounds.x;\n    }\n    if (bounds.y < 0) {\n      container.pivot.y = bounds.y;\n    }\n    if ((child as any)?.flexChildren) {\n      this.addSignalConnection((child as unknown as IFlexContainer).onLayoutComplete.connect(this.layout));\n    }\n\n    this.settingsMap.set(container, {\n      align: settings?.align ?? 'top left',\n      padding: settings?.padding ? ensurePadding(settings.padding) : { top: 0, left: 0, bottom: 0, right: 0 },\n    });\n\n    this._childMap.set(child, container);\n    this._canvasChildren = Array.from(this._childMap.keys());\n\n    this.resize();\n    return child as U;\n  }\n\n  /**\n   * Ensure we don't leave empty containers after setting child indices or adding / removing children\n   * @protected\n   */\n  protected cleanup() {\n    if (this.canvasChildren.length === this.children.length) return;\n    // remove any children that are not in the flex children list\n    this.children.forEach((child) => {\n      if (this.config.debug && child === this._debugGraphics) return;\n      if (!(child as PIXIContainer)?.children?.length) {\n        super.removeChild(child);\n      }\n    });\n  }\n\n  private __calculateBounds(_size: Size): Rectangle {\n    return new Rectangle(\n      0,\n      0,\n      _size.width - this.config.padding.left - this.config.padding.right,\n      _size.height - this.config.padding.top - this.config.padding.bottom,\n    );\n  }\n\n  private __calculateOuterBounds(_size: Size): Rectangle {\n    return new Rectangle(0, 0, _size.width, _size.height);\n  }\n\n  private _childRemoved(child: any) {\n    this.settingsMap.delete(child);\n    this._childMap.delete(child as PIXIContainer);\n    this._canvasChildren = Array.from(this._childMap.keys());\n  }\n\n  private _added() {\n    this.layout();\n  }\n\n  private applySettings(child: PIXIContainer, settings: UICanvasChildSettings) {\n    if (!settings) return;\n    const displayWidth = this._displayBounds.width;\n    const displayHeight = this._displayBounds.height;\n\n    const firstChild = (child as PIXIContainer).getChildAt(0);\n\n    const childWidth = UICanvas.isFlexContainer(firstChild)\n      ? (firstChild as unknown as IFlexContainer).containerWidth || child.width\n      : child.width;\n    const childHeight = UICanvas.isFlexContainer(firstChild)\n      ? (firstChild as unknown as IFlexContainer).containerHeight || child.height\n      : child.height;\n\n    switch (settings.align) {\n      case 'top right':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'top left':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'top center':\n      case 'top':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = 0;\n        break;\n      case 'bottom right':\n        child.x = displayWidth - childWidth;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom left':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'bottom center':\n      case 'bottom':\n        child.x = (displayWidth - child.width) / 2;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left top':\n        child.x = 0;\n        child.y = 0;\n        break;\n      case 'left bottom':\n        child.x = 0;\n        child.y = displayHeight - childHeight;\n        break;\n      case 'left center':\n      case 'left':\n        child.x = 0;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'right top':\n        child.x = displayWidth - childWidth;\n        child.y = 0;\n        break;\n      case 'right bottom':\n        child.x = displayWidth;\n        child.y = displayHeight;\n        break;\n      case 'right center':\n      case 'right':\n        child.x = displayWidth - childWidth;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n      case 'center':\n        child.x = (displayWidth - childWidth) / 2;\n        child.y = (displayHeight - childHeight) / 2;\n        break;\n    }\n    child.x +=\n      resolvePadding(settings.padding.left, displayWidth) - resolvePadding(settings.padding.right, displayWidth);\n\n    child.y +=\n      resolvePadding(settings.padding.top, displayHeight) - resolvePadding(settings.padding.bottom, displayHeight);\n  }\n\n  private drawDebug() {\n    if (!this._debugGraphics) {\n      this._disableAddChildError = true;\n      this._debugGraphics = this._inner.add.graphics();\n      this._disableAddChildError = false;\n    }\n    this._debugGraphics\n      .clear()\n      .rect(0, 0, this._displayBounds.width, this._displayBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .rect(-this.config.padding.left, -this.config.padding.top, this._outerBounds.width, this._outerBounds.height)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .moveTo(this._displayBounds.width / 2, this._displayBounds.height / 2 - 10)\n      .lineTo(this._displayBounds.width / 2, this._displayBounds.height / 2 + 10)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      })\n      .moveTo(this._displayBounds.width / 2 - 10, this._displayBounds.height / 2)\n      .lineTo(this._displayBounds.width / 2 + 10, this._displayBounds.height / 2)\n      .stroke({\n        width: 1,\n        color: 0xff0000,\n        alpha: 0.5,\n      });\n  }\n}\n","import {ColorSource, DestroyOptions, Graphics, Sprite, Texture} from 'pixi.js';\nimport {Application} from '../Application';\nimport type {IFocusable} from '../plugins';\nimport type {Size} from '../utils';\nimport type {IContainer} from './Container';\nimport {Container} from './Container';\n\n/**\n * Interface for Popup\n */\nexport interface IPopup<T = any> extends IContainer {\n  readonly id: string | number; // Unique identifier for the popup\n  config: PopupConfig<T>; // Configuration for the popup\n  view: Container; // The view of the popup\n  backing?: any; // The backing of the popup\n  isShowing: boolean; // Whether the popup is currently showing\n  firstFocusableEntity?: IFocusable; // The first focusable entity in the popup\n  data: T;\n\n  close(): void;\n\n  initialize(): void; // Initialize the popup\n\n  show(): void | Promise<any>; // Show the popup\n\n  afterShow(): void; // Show the popup\n\n  beforeHide(): void; // Hide the popup\n\n  hide(): void | Promise<any>; // Hide the popup\n\n  start(): void | Promise<any>; // Start the popup\n\n  end(): void; // End the popup\n}\n\nexport type PopupConstructor<T = any> = new (id: string | number, config?: Partial<PopupConfig<T>>) => IPopup<T>;\n\n/**\n * Configuration for the backing of the popup\n */\nexport type BackingConfig = {\n  color: ColorSource;\n  alpha: number;\n};\n\nconst defaultBackingConfig = {\n  color: 0x0,\n  alpha: 0.75,\n};\n\n/**\n * Configuration for the popup\n */\nexport type PopupConfig<T = any> = {\n  id: string | number;\n  closeOnEscape: boolean;\n  closeOnPointerDownOutside: boolean;\n  backing: boolean | Partial<BackingConfig>;\n  data?: T;\n};\n\nconst defaultPopupConfig = { backing: true, closeOnEscape: true, closeOnPointerDownOutside: true };\n\n/**\n * Class representing a Popup\n */\nexport class Popup<T = any> extends Container implements IPopup<T> {\n  public static BACKING_TEXTURE: Texture;\n  public isShowing: boolean = false;\n  public firstFocusableEntity: IFocusable;\n  public view: Container;\n  public backing?: Container;\n  public config: PopupConfig<T>;\n\n  /**\n   * Create a new Popup\n   * @param id - The unique identifier for the popup\n   * @param config - The configuration for the popup\n   */\n  constructor(\n    public readonly id: string | number,\n    config: Partial<PopupConfig> = {},\n  ) {\n    super();\n    this.config = Object.assign({ id, ...defaultPopupConfig }, config);\n\n    this._initialize();\n  }\n\n  get data(): T {\n    return this.config.data as T;\n  }\n\n  /**\n   * Create a backing for the popup\n   * @param config - The configuration for the backing\n   * @param size - The size of the backing\n   * @returns The backing container\n   */\n  private static makeBacking(config: boolean | Partial<BackingConfig>, size: Size): Container {\n    let finalConfig = {};\n    if (typeof config === 'object') {\n      finalConfig = config;\n    }\n    const backingConfig: BackingConfig = Object.assign({ ...defaultBackingConfig }, finalConfig);\n    if (Popup.BACKING_TEXTURE === undefined) {\n      const gfx = new Graphics();\n      gfx.rect(0, 0, 100, 100).fill('white');\n      Popup.BACKING_TEXTURE = Application.getInstance().renderer.generateTexture(gfx);\n    }\n    const backingWrapper = new Container();\n    backingWrapper.sortableChildren = false;\n    const backing = backingWrapper.addChild(new Sprite(Popup.BACKING_TEXTURE));\n    backing.anchor.set(0.5);\n    backing.alpha = backingConfig.alpha;\n    backing.tint = backingConfig.color;\n    backing.setSize(size.width, size.height);\n\n    return backingWrapper;\n  }\n\n  initialize() {}\n\n  public beforeHide() {\n    this.app.focus.removeFocusLayer(this.id);\n  }\n\n  destroy(options?: boolean | DestroyOptions): void {\n    this.app.focus.removeFocusLayer(this.id);\n    super.destroy(options);\n  }\n\n  /**\n   * Hide the popup\n   * @returns A promise that resolves when the popup is hidden\n   */\n  hide(): void | any | Promise<any>;\n\n  async hide(): Promise<void> {\n    this.visible = false;\n    return Promise.resolve();\n  }\n\n  /**\n   * Show the popup\n   * @returns A promise that resolves when the popup is shown\n   */\n  show(): void | Promise<any>;\n\n  async show(): Promise<void> {\n    this.visible = true;\n    return Promise.resolve();\n  }\n\n  /**\n   * Start the popup\n   */\n  start(): void | Promise<any>;\n  async start() {}\n\n  afterShow() {\n    if (this.firstFocusableEntity) {\n      this.app.focus.add(this.firstFocusableEntity, this.id, true);\n      this.app.focus.setFocus(this.firstFocusableEntity);\n    }\n  }\n\n  /**\n   * End the popup\n   */\n  end() {}\n\n  close(): void | Promise<void>;\n  async close(): Promise<void> {\n    void this.app.popups.hidePopup(this.id, this.config.data);\n  }\n\n  /**\n   * Initialize the popup\n   * @private\n   */\n  private _initialize() {\n    this.app.focus.addFocusLayer(this.id, false);\n\n    if (this.config.backing) {\n      this.backing = this.add.existing(Popup.makeBacking(this.config.backing, this.app.size));\n      this.backing.eventMode = 'static';\n      if (this.config.closeOnPointerDownOutside) {\n        this.backing.once('click', this.close);\n        this.backing.once('tap', this.close);\n      }\n    }\n\n    this.view = this.add.container();\n    this.view.eventMode = 'static';\n  }\n}\n","import { FactoryContainer } from '../mixins/factory';\nimport type { SpineProps } from '../mixins/factory/props';\nimport { WithSignals } from '../mixins';\nimport type { Spine } from '../utils';\n\nconst _SpineAnimation = WithSignals(FactoryContainer());\n\nexport interface ISpineAnimation extends InstanceType<typeof _SpineAnimation> {\n  spine: Spine;\n  animationNames: string[];\n\n  setAnimation(name: string, loop?: boolean, tracklndex?: number): void;\n\n  getCurrentAnimation(tracklndex?: number): string;\n}\n\nexport class SpineAnimation extends _SpineAnimation {\n  spine: Spine;\n\n  public constructor(props?: Partial<SpineProps>) {\n    super();\n    let data = props?.data;\n    if (typeof data === 'string') {\n      // get the spine data from cache\n      // check if '.json' is the last part of the asset string, and add it if not\n      if (data.slice(-5) !== '.json') {\n        data = { skeleton: data + '.json', atlas: data + '.atlas' };\n      }\n    }\n    this.spine = (window as any).Spine.from(data);\n    this.add.existing(this.spine);\n    if (props) {\n      if (props.autoUpdate !== undefined) this.spine.autoUpdate = props.autoUpdate;\n      if (props.animationName) this.setAnimation(props.animationName, props.loop, props.trackIndex ?? 0);\n    }\n  }\n\n  get animationNames() {\n    return this.spine.state.data.skeletonData.animations.map((a) => a.name);\n  }\n\n  getCurrentAnimation(trackIndex: number = 0): string {\n    return this.spine.state.getCurrent(trackIndex)?.animation?.name || '';\n  }\n\n  setAnimation(name: string, loop = false, tracklndex: number = 0) {\n    this.spine.state.setAnimation(tracklndex, name, loop);\n  }\n}\n","import type {IPopup, PopupConfig, PopupConstructor} from '../display';\nimport {Container} from '../display';\nimport {Signal} from '../signals';\nimport {bindAllMethods, getLastMapEntry} from '../utils';\nimport type {IPlugin} from './Plugin';\nimport {Plugin} from './Plugin';\nimport type {IApplication} from '../core';\n\n/**`\n * Interface for PopupManager\n */\nexport interface IPopupManagerPlugin extends IPlugin {\n  readonly view: Container; // The view of the PopupManager\n  readonly current: IPopup | undefined; // The current active popup\n  readonly popupCount: number; // The count of popups\n  readonly currentPopupId: string | number | undefined; // The id of the current popup\n  // signals\n  onShowPopup: Signal<(detail: PopupSignalDetail) => void>; // Signal for when a popup is shown\n  onHidePopup: Signal<(detail: PopupSignalDetail) => void>; // Signal for when a popup is hidden\n\n  // methods\n  addPopup(id: string | number, popup: PopupConstructor): void; // Add a popup\n\n  showPopup<T = any>(id: string | number, config: Partial<PopupConfig<T>>): Promise<IPopup<T> | undefined>;\n\n  hidePopup<T = any>(id: string | number, data?: any): Promise<IPopup<T> | undefined>; // Hide a popup\n\n  removeAllPopups(animate?: boolean): void; // Remove all popups\n}\n\nexport type PopupSignalDetail<T = any> = { id: string | number; data?: T };\n\n/**\n * PopupManager\n */\n\nexport class PopupManagerPlugin extends Plugin implements IPopupManagerPlugin {\n  public readonly id: string = 'popups'; // The id of the PopupManager\n  public readonly view = new Container(); // The view of the PopupManager\n\n  // signals\n  public onShowPopup: Signal<(detail: PopupSignalDetail) => void> = new Signal<(detail: PopupSignalDetail) => void>(); // Signal for when a popup is shown\n  public onHidePopup: Signal<(detail: PopupSignalDetail) => void> = new Signal<(detail: PopupSignalDetail) => void>(); // Signal for when a popup is hidden\n  private _popups: Map<string | number, PopupConstructor> = new Map(); // Map of popups\n  private _activePopups: Map<string | number, IPopup> = new Map(); // Map of active popups\n\n  private _currentPopupId: string | number | undefined = undefined; // The id of the current popup\n\n  get currentPopupId(): string | number | undefined {\n    return this._currentPopupId;\n  }\n\n  get popupCount(): number {\n    return this._popups.size;\n  }\n\n  get current(): IPopup | undefined {\n    if (this._currentPopupId === undefined) {\n      return undefined;\n    }\n    return this._activePopups.get(this._currentPopupId);\n  }\n\n  /**\n   * Initialize the PopupManager\n   * @param _app\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  initialize(_app: IApplication): void {\n    bindAllMethods(this);\n    this.view.label = 'PopupManager';\n    this._setupAppListeners();\n  }\n\n  /**\n   * Destroy the PopupManager\n   */\n  destroy(): void {\n    this._activePopups.clear();\n    super.destroy();\n  }\n\n  /**\n   * Add a popup\n   * @param id - The id of the popup\n   * @param popup - The popup constructor\n   */\n  addPopup<T = any>(id: string | number, popup: PopupConstructor<T>): void {\n    this._popups.set(id, popup);\n  }\n\n  /**\n   * Show a popup\n   * @param id - The id of the popup\n   * @param config - The configuration for the popup\n   * @returns a promise resolving to the popup, if it exists\n   */\n  async showPopup<T = any>(id: string | number, config: Partial<PopupConfig<T>> = {}): Promise<IPopup<T> | undefined> {\n    const popup: PopupConstructor<T> | undefined = this._popups.get(id);\n    if (popup) {\n      config.id = id;\n      const instance = this.view.add.existing(new popup(id, config));\n      instance.initialize();\n      this.app.focus.clearFocus();\n      await instance.show();\n      this.app.focus.setFocusLayer(id);\n      instance.afterShow();\n      this._activePopups.set(id, instance);\n      this._currentPopupId = id;\n      this.onShowPopup.emit({ id, data: config?.data });\n      instance.start();\n      return instance;\n    }\n    return;\n  }\n\n  /**\n   * Hide a popup\n   * @param id - The id of the popup\n   * @param data\n   * @returns a promise resolving to the popup, if it exists\n   */\n  async hidePopup<T = any>(id: string | number, data?: T): Promise<IPopup<T> | undefined> {\n    const popup = this._activePopups.get(id);\n    if (popup) {\n      popup.beforeHide();\n      await popup.hide();\n      this.view.removeChild(popup as any);\n      this._activePopups.delete(id);\n      this._currentPopupId = getLastMapEntry(this._activePopups)?.[0] || undefined;\n      this.onHidePopup.emit({ id, data });\n      popup.end();\n      return popup;\n    }\n    return;\n  }\n\n  /**\n   * Remove all popups\n   * @param animate - Whether to animate the removal\n   */\n  removeAllPopups(animate: boolean = false): void {\n    if (animate) {\n      this._activePopups.forEach((popup) => {\n        popup.hide();\n      });\n    } else {\n      this._activePopups.clear();\n      this.view.removeChildren();\n    }\n  }\n\n  protected getCoreFunctions() {\n    return ['addPopup', 'hidePopup', 'showPopup', 'removeAllPopups'];\n  }\n\n  protected getCoreSignals() {\n    return ['onShowPopup', 'onHidePopup'];\n  }\n\n  /**\n   * Setup application listeners\n   * @private\n   */\n  private _setupAppListeners(): void {\n    this.addSignalConnection(this.app.scenes.onSceneChangeStart.connect(() => this.removeAllPopups()));\n    this.app.keyboard.onKeyUp('Escape').connect(this._handleEscape);\n  }\n\n  /**\n   * Handle escape key press\n   * if the current popup should close when escape is pressed (true by default), closes it\n   * @private\n   */\n  private _handleEscape() {\n    if (this.current && this.current.config.closeOnEscape) {\n      void this.hidePopup(this.current.id);\n    }\n  }\n}\n","import { IAudioInstance } from './AudioInstance';\nimport { IAudioManagerPlugin } from './AudioManagerPlugin';\n\nexport interface IAudioChannel {\n  name: string;\n  muted: boolean;\n  volume: number;\n  instances: IAudioInstance[];\n\n  add(id: string, instance: IAudioInstance): IAudioInstance;\n\n  get(id: string): IAudioInstance | undefined;\n\n  remove(id: string): IAudioInstance | undefined;\n\n  updateVolume(): void;\n\n  destroy(): void;\n}\n\nexport class AudioChannel {\n  private _sounds: Map<string, IAudioInstance> = new Map<string, IAudioInstance>();\n\n  constructor(\n    public name: string,\n    public manager: IAudioManagerPlugin,\n  ) {\n    this.muted = this.manager.muted;\n  }\n\n  get instances(): IAudioInstance[] {\n    return Array.from(this._sounds.values());\n  }\n\n  private _muted: boolean = false;\n\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  set muted(value: boolean) {\n    this._muted = value;\n    this._setMuted();\n  }\n\n  private _volume: number = 1.0;\n\n  get volume(): number {\n    return this._volume;\n  }\n\n  set volume(value: number) {\n    this._volume = value;\n    this.updateVolume();\n  }\n\n  add(id: string, instance: IAudioInstance): IAudioInstance {\n    this._sounds.set(id, instance);\n    return instance;\n  }\n\n  get(id: string): IAudioInstance | undefined {\n    return this._sounds.get(id);\n  }\n\n  remove(id: string): IAudioInstance | undefined {\n    const instance = this._sounds.get(id);\n    if (instance) {\n      instance.destroy();\n      this._sounds.delete(id);\n    }\n    return instance;\n  }\n\n  _setMuted(): void {\n    this._sounds.forEach((sound) => {\n      sound.muted = this._muted;\n    });\n  }\n\n  updateVolume() {\n    this._sounds.forEach((sound) => {\n      sound.updateVolume();\n    });\n    this.manager.onChannelVolumeChanged.emit({ channel: this, volume: this._volume });\n  }\n\n  destroy() {}\n}\n","import { IMediaInstance } from '@pixi/sound';\nimport { gsap } from 'gsap';\nimport { Signal } from '../../signals';\nimport { bindAllMethods } from '../../utils';\nimport { IAudioChannel } from './AudioChannel';\nimport { IAudioManagerPlugin } from './AudioManagerPlugin';\n\nexport interface IAudioInstance {\n  volume: number;\n  storedVolume: number;\n  media: IMediaInstance;\n  channel: IAudioChannel;\n  muted: boolean;\n  id: string;\n  manager: IAudioManagerPlugin;\n  onStart: Signal<(instance: IAudioInstance) => void>;\n  onStop: Signal<(instance: IAudioInstance) => void>;\n  onEnd: Signal<(instance: IAudioInstance) => void>;\n  onPaused: Signal<(instance: IAudioInstance) => void>;\n  onResumed: Signal<(instance: IAudioInstance) => void>;\n  isPlaying: boolean;\n\n  fadeTo(volume: number, duration: number): gsap.core.Tween;\n\n  stop(): void;\n\n  destroy(): void;\n\n  remove(): void;\n\n  updateVolume(): void;\n\n  addListeners(): void;\n\n  removeListeners(): void;\n\n  pause(): void;\n\n  play(): void;\n\n  resume(): void;\n}\n\nexport class AudioInstance implements IAudioInstance {\n  public storedVolume: number;\n  public onStart: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onStop: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onEnd: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onPaused: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onResumed: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n  public onProgress: Signal<(instance: IAudioInstance) => void> = new Signal<(instance: IAudioInstance) => void>();\n\n  constructor(\n    public id: string,\n    public channel: IAudioChannel,\n    public manager: IAudioManagerPlugin,\n  ) {\n    bindAllMethods(this);\n    this.muted = this.channel.muted;\n  }\n\n  private _media: IMediaInstance;\n\n  get media(): IMediaInstance {\n    return this._media;\n  }\n\n  set media(value: IMediaInstance) {\n    this._media = value;\n    if (value) {\n      this._media.volume = this._volume * this.channel.volume * this.manager.masterVolume;\n      if (this.muted) {\n        this._media.muted = this.muted;\n      }\n      this.addListeners();\n    }\n  }\n\n  private _volume: number = 1;\n\n  public get volume(): number {\n    return this._volume;\n  }\n\n  public set volume(value: number) {\n    this._volume = value;\n    if (this._media) {\n      this._media.volume = this._volume * this.channel.volume * this.manager.masterVolume;\n    }\n  }\n\n  private _muted: boolean = false;\n\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  set muted(value: boolean) {\n    this._muted = value;\n    if (this._media) {\n      this._media.muted = this._muted;\n    }\n  }\n\n  private _isPlaying: boolean = false;\n\n  get isPlaying() {\n    return this._isPlaying;\n  }\n\n  set isPlaying(value: boolean) {\n    this._isPlaying = value;\n  }\n\n  pause(): void {\n    this._isPlaying = false;\n    if (this._media) {\n      this._media.paused = true;\n    }\n  }\n\n  resume(): void {\n    this._isPlaying = true;\n    if (this._media) {\n      this._media.paused = false;\n    }\n  }\n\n  remove(): void {\n    this._isPlaying = false;\n    this.channel.remove(this.id);\n  }\n\n  stop() {\n    if (this._media) {\n      this._media.stop();\n    }\n    this._isPlaying = false;\n    this.onEnd.emit(this);\n  }\n\n  updateVolume(): void {\n    this.volume = this._volume;\n  }\n\n  addListeners() {\n    this.removeListeners();\n    this._media.on('end', this._handleMediaEnded);\n    this._media.on('start', this._handleMediaStarted);\n    this._media.on('stop', this._handleMediaStopped);\n    this._media.on('pause', this._handleMediaPaused);\n    this._media.on('progress', this._handleMediaProgress);\n    this._media.on('resumed', this._handleMediaResumed);\n  }\n\n  removeListeners() {\n    if (!this.media) {\n      return;\n    }\n\n    this._media.off('end', this._handleMediaEnded);\n    this._media.off('start', this._handleMediaStarted);\n    this._media.off('stop', this._handleMediaStopped);\n    this._media.off('pause', this._handleMediaPaused);\n    this._media.off('progress', this._handleMediaProgress);\n    this._media.off('resumed', this._handleMediaResumed);\n  }\n\n  public destroy() {\n    this.stop();\n    this.removeListeners();\n  }\n\n  public fadeTo(volume: number, duration: number): gsap.core.Tween {\n    return gsap.to(this.media, { volume, duration });\n  }\n\n  public play(time?: number): void {\n    this._isPlaying = true;\n    if (time) {\n      this.media.play({ start: time });\n    } else {\n      this.media.play({});\n    }\n  }\n\n  private _handleMediaEnded() {\n    this._isPlaying = false;\n    this.onEnd.emit(this);\n  }\n\n  private _handleMediaStarted() {\n    this._isPlaying = true;\n    this.onStart.emit(this);\n  }\n\n  private _handleMediaStopped() {\n    this._isPlaying = false;\n    this.onStop.emit(this);\n  }\n\n  private _handleMediaPaused() {\n    this._isPlaying = false;\n    this.onPaused.emit(this);\n  }\n\n  private _handleMediaProgress() {\n    this.onProgress.emit(this);\n  }\n\n  private _handleMediaResumed() {\n    this._isPlaying = true;\n    this.onResumed.emit(this);\n  }\n}\n","let instance;\nfunction setInstance(sound) {\n  instance = sound;\n  return sound;\n}\nfunction getInstance() {\n  return instance;\n}\n\nexport { getInstance, instance, setInstance };\n//# sourceMappingURL=instance.mjs.map\n","import { getInstance } from '../instance.mjs';\n\nclass WebAudioUtils {\n  /**\n   * Dezippering is removed in the future Web Audio API, instead\n   * we use the `setValueAtTime` method, however, this is not available\n   * in all environments (e.g., Android webview), so we fallback to the `value` setter.\n   * @param param - AudioNode parameter object\n   * @param value - Value to set\n   * @return The value set\n   */\n  static setParamValue(param, value) {\n    if (param.setValueAtTime) {\n      const context = getInstance().context;\n      param.setValueAtTime(value, context.audioContext.currentTime);\n    } else {\n      param.value = value;\n    }\n    return value;\n  }\n}\n\nexport { WebAudioUtils };\n//# sourceMappingURL=WebAudioUtils.mjs.map\n","import { EventEmitter } from 'pixi.js';\n\nclass HTMLAudioContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** Current global speed from 0 to 1 */\n    this.speed = 1;\n    /** Current muted status of the context */\n    this.muted = false;\n    /** Current volume from 0 to 1  */\n    this.volume = 1;\n    /** Current paused status */\n    this.paused = false;\n  }\n  /** Internal trigger when volume, mute or speed changes */\n  refresh() {\n    this.emit(\"refresh\");\n  }\n  /** Internal trigger paused changes */\n  refreshPaused() {\n    this.emit(\"refreshPaused\");\n  }\n  /**\n   * HTML Audio does not support filters, this is non-functional API.\n   */\n  get filters() {\n    console.warn(\"HTML Audio does not support filters\");\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  /**\n   * HTML Audio does not support `audioContext`\n   * @readonly\n   * @type {AudioContext}\n   */\n  get audioContext() {\n    console.warn(\"HTML Audio does not support audioContext\");\n    return null;\n  }\n  /**\n   * Toggles the muted state.\n   * @return The current muted state.\n   */\n  toggleMute() {\n    this.muted = !this.muted;\n    this.refresh();\n    return this.muted;\n  }\n  /**\n   * Toggles the paused state.\n   * @return The current paused state.\n   */\n  togglePause() {\n    this.paused = !this.paused;\n    this.refreshPaused();\n    return this.paused;\n  }\n  /** Destroy and don't use after this */\n  destroy() {\n    this.removeAllListeners();\n  }\n}\n\nexport { HTMLAudioContext };\n//# sourceMappingURL=HTMLAudioContext.mjs.map\n","import { EventEmitter, Ticker } from 'pixi.js';\n\nlet id = 0;\nconst _HTMLAudioInstance = class extends EventEmitter {\n  /** @param parent - Parent element */\n  constructor(parent) {\n    super();\n    this.id = id++;\n    this.init(parent);\n  }\n  /**\n   * Set a property by name, this makes it easy to chain values\n   * @param name - Name of the property to set\n   * @param value - Value to set property to\n   */\n  set(name, value) {\n    if (this[name] === void 0) {\n      throw new Error(`Property with name ${name} does not exist.`);\n    } else {\n      switch (name) {\n        case \"speed\":\n          this.speed = value;\n          break;\n        case \"volume\":\n          this.volume = value;\n          break;\n        case \"paused\":\n          this.paused = value;\n          break;\n        case \"loop\":\n          this.loop = value;\n          break;\n        case \"muted\":\n          this.muted = value;\n          break;\n      }\n    }\n    return this;\n  }\n  /** The current playback progress from 0 to 1. */\n  get progress() {\n    const { currentTime } = this._source;\n    return currentTime / this._duration;\n  }\n  /** Pauses the sound. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /**\n   * Reference: http://stackoverflow.com/a/40370077\n   * @private\n   */\n  _onPlay() {\n    this._playing = true;\n  }\n  /**\n   * Reference: http://stackoverflow.com/a/40370077\n   * @private\n   */\n  _onPause() {\n    this._playing = false;\n  }\n  /**\n   * Initialize the instance.\n   * @param {htmlaudio.HTMLAudioMedia} media - Same as constructor\n   */\n  init(media) {\n    this._playing = false;\n    this._duration = media.source.duration;\n    const source = this._source = media.source.cloneNode(false);\n    source.src = media.parent.url;\n    source.onplay = this._onPlay.bind(this);\n    source.onpause = this._onPause.bind(this);\n    media.context.on(\"refresh\", this.refresh, this);\n    media.context.on(\"refreshPaused\", this.refreshPaused, this);\n    this._media = media;\n  }\n  /**\n   * Stop the sound playing\n   * @private\n   */\n  _internalStop() {\n    if (this._source && this._playing) {\n      this._source.onended = null;\n      this._source.pause();\n    }\n  }\n  /** Stop the sound playing */\n  stop() {\n    this._internalStop();\n    if (this._source) {\n      this.emit(\"stop\");\n    }\n  }\n  /** Set the instance speed from 0 to 1 */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n  }\n  /** Get the set the volume for this instance from 0 to 1 */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** If the sound instance should loop playback */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** `true` if the sound is muted */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /**\n   * HTML Audio does not support filters, this is non-functional API.\n   */\n  get filters() {\n    console.warn(\"HTML Audio does not support filters\");\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  /** Call whenever the loop, speed or volume changes */\n  refresh() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    this._source.loop = this._loop || sound.loop;\n    const globalVolume = global.volume * (global.muted ? 0 : 1);\n    const soundVolume = sound.volume * (sound.muted ? 0 : 1);\n    const instanceVolume = this._volume * (this._muted ? 0 : 1);\n    this._source.volume = instanceVolume * globalVolume * soundVolume;\n    this._source.playbackRate = this._speed * global.speed * sound.speed;\n  }\n  /** Handle changes in paused state, either globally or sound or instance */\n  refreshPaused() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    const pausedReal = this._paused || sound.paused || global.paused;\n    if (pausedReal !== this._pausedReal) {\n      this._pausedReal = pausedReal;\n      if (pausedReal) {\n        this._internalStop();\n        this.emit(\"paused\");\n      } else {\n        this.emit(\"resumed\");\n        this.play({\n          start: this._source.currentTime,\n          end: this._end,\n          volume: this._volume,\n          speed: this._speed,\n          loop: this._loop\n        });\n      }\n      this.emit(\"pause\", pausedReal);\n    }\n  }\n  /** Start playing the sound/ */\n  play(options) {\n    const { start, end, speed, loop, volume, muted } = options;\n    if (end) {\n      console.assert(end > start, \"End time is before start time\");\n    }\n    this._speed = speed;\n    this._volume = volume;\n    this._loop = !!loop;\n    this._muted = muted;\n    this.refresh();\n    if (this.loop && end !== null) {\n      console.warn('Looping not support when specifying an \"end\" time');\n      this.loop = false;\n    }\n    this._start = start;\n    this._end = end || this._duration;\n    this._start = Math.max(0, this._start - _HTMLAudioInstance.PADDING);\n    this._end = Math.min(this._end + _HTMLAudioInstance.PADDING, this._duration);\n    this._source.onloadedmetadata = () => {\n      if (this._source) {\n        this._source.currentTime = start;\n        this._source.onloadedmetadata = null;\n        this.emit(\"progress\", start, this._duration);\n        Ticker.shared.add(this._onUpdate, this);\n      }\n    };\n    this._source.onended = this._onComplete.bind(this);\n    this._source.play();\n    this.emit(\"start\");\n  }\n  /**\n   * Handle time update on sound.\n   * @private\n   */\n  _onUpdate() {\n    this.emit(\"progress\", this.progress, this._duration);\n    if (this._source.currentTime >= this._end && !this._source.loop) {\n      this._onComplete();\n    }\n  }\n  /**\n   * Callback when completed.\n   * @private\n   */\n  _onComplete() {\n    Ticker.shared.remove(this._onUpdate, this);\n    this._internalStop();\n    this.emit(\"progress\", 1, this._duration);\n    this.emit(\"end\", this);\n  }\n  /** Don't use after this. */\n  destroy() {\n    Ticker.shared.remove(this._onUpdate, this);\n    this.removeAllListeners();\n    const source = this._source;\n    if (source) {\n      source.onended = null;\n      source.onplay = null;\n      source.onpause = null;\n      this._internalStop();\n    }\n    this._source = null;\n    this._speed = 1;\n    this._volume = 1;\n    this._loop = false;\n    this._end = null;\n    this._start = 0;\n    this._duration = 0;\n    this._playing = false;\n    this._pausedReal = false;\n    this._paused = false;\n    this._muted = false;\n    if (this._media) {\n      this._media.context.off(\"refresh\", this.refresh, this);\n      this._media.context.off(\"refreshPaused\", this.refreshPaused, this);\n      this._media = null;\n    }\n  }\n  /**\n   * To string method for instance.\n   * @return The string representation of instance.\n   */\n  toString() {\n    return `[HTMLAudioInstance id=${this.id}]`;\n  }\n};\nlet HTMLAudioInstance = _HTMLAudioInstance;\n/** Extra padding, in seconds, to deal with low-latecy of HTMLAudio. */\nHTMLAudioInstance.PADDING = 0.1;\n\nexport { HTMLAudioInstance };\n//# sourceMappingURL=HTMLAudioInstance.mjs.map\n","import { EventEmitter } from 'pixi.js';\nimport { HTMLAudioInstance } from './HTMLAudioInstance.mjs';\n\nclass HTMLAudioMedia extends EventEmitter {\n  init(parent) {\n    this.parent = parent;\n    this._source = parent.options.source || new Audio();\n    if (parent.url) {\n      this._source.src = parent.url;\n    }\n  }\n  // Implement create\n  create() {\n    return new HTMLAudioInstance(this);\n  }\n  /**\n   * If the audio media is playable (ready).\n   * @readonly\n   */\n  get isPlayable() {\n    return !!this._source && this._source.readyState === 4;\n  }\n  /**\n   * THe duration of the media in seconds.\n   * @readonly\n   */\n  get duration() {\n    return this._source.duration;\n  }\n  /**\n   * Reference to the context.\n   * @readonly\n   */\n  get context() {\n    return this.parent.context;\n  }\n  /** The collection of filters, does not apply to HTML Audio. */\n  get filters() {\n    return null;\n  }\n  set filters(_filters) {\n    console.warn(\"HTML Audio does not support filters\");\n  }\n  // Override the destroy\n  destroy() {\n    this.removeAllListeners();\n    this.parent = null;\n    if (this._source) {\n      this._source.src = \"\";\n      this._source.load();\n      this._source = null;\n    }\n  }\n  /**\n   * Get the audio source element.\n   * @type {HTMLAudioElement}\n   * @readonly\n   */\n  get source() {\n    return this._source;\n  }\n  // Implement the method to being preloading\n  load(callback) {\n    const source = this._source;\n    const sound = this.parent;\n    if (source.readyState === 4) {\n      sound.isLoaded = true;\n      const instance = sound.autoPlayStart();\n      if (callback) {\n        setTimeout(() => {\n          callback(null, sound, instance);\n        }, 0);\n      }\n      return;\n    }\n    if (!sound.url) {\n      callback(new Error(\"sound.url or sound.source must be set\"));\n      return;\n    }\n    source.src = sound.url;\n    const onLoad = () => {\n      removeListeners();\n      sound.isLoaded = true;\n      const instance = sound.autoPlayStart();\n      if (callback) {\n        callback(null, sound, instance);\n      }\n    };\n    const onAbort = () => {\n      removeListeners();\n      if (callback) {\n        callback(new Error(\"Sound loading has been aborted\"));\n      }\n    };\n    const onError = () => {\n      removeListeners();\n      const message = `Failed to load audio element (code: ${source.error.code})`;\n      if (callback) {\n        callback(new Error(message));\n      } else {\n        console.error(message);\n      }\n    };\n    const removeListeners = () => {\n      source.removeEventListener(\"canplaythrough\", onLoad);\n      source.removeEventListener(\"load\", onLoad);\n      source.removeEventListener(\"abort\", onAbort);\n      source.removeEventListener(\"error\", onError);\n    };\n    source.addEventListener(\"canplaythrough\", onLoad, false);\n    source.addEventListener(\"load\", onLoad, false);\n    source.addEventListener(\"abort\", onAbort, false);\n    source.addEventListener(\"error\", onError, false);\n    source.load();\n  }\n}\n\nexport { HTMLAudioMedia };\n//# sourceMappingURL=HTMLAudioMedia.mjs.map\n","class SoundSprite {\n  /**\n   * @param parent - The parent sound\n   * @param options - Data associated with object.\n   */\n  constructor(parent, options) {\n    this.parent = parent;\n    Object.assign(this, options);\n    this.duration = this.end - this.start;\n    console.assert(this.duration > 0, \"End time must be after start time\");\n  }\n  /**\n   * Play the sound sprite.\n   * @param {Function} [complete] - Function call when complete\n   * @return Sound instance being played.\n   */\n  play(complete) {\n    return this.parent.play({\n      complete,\n      speed: this.speed || this.parent.speed,\n      end: this.end,\n      start: this.start,\n      loop: this.loop\n    });\n  }\n  /** Destroy and don't use after this */\n  destroy() {\n    this.parent = null;\n  }\n}\n\nexport { SoundSprite };\n//# sourceMappingURL=SoundSprite.mjs.map\n","const extensions = [\n  \"ogg\",\n  \"oga\",\n  \"opus\",\n  \"m4a\",\n  \"mp3\",\n  \"mpeg\",\n  \"wav\",\n  \"aiff\",\n  \"wma\",\n  \"mid\",\n  \"caf\"\n];\nconst mimes = [\n  \"audio/mpeg\",\n  \"audio/ogg\"\n];\nconst supported = {};\nfunction validateFormats(typeOverrides) {\n  const overrides = {\n    m4a: \"audio/mp4\",\n    oga: \"audio/ogg\",\n    opus: 'audio/ogg; codecs=\"opus\"',\n    caf: 'audio/x-caf; codecs=\"opus\"',\n    ...typeOverrides || {}\n  };\n  const audio = document.createElement(\"audio\");\n  const formats = {};\n  const no = /^no$/;\n  extensions.forEach((ext) => {\n    const canByExt = audio.canPlayType(`audio/${ext}`).replace(no, \"\");\n    const canByType = overrides[ext] ? audio.canPlayType(overrides[ext]).replace(no, \"\") : \"\";\n    formats[ext] = !!canByExt || !!canByType;\n  });\n  Object.assign(supported, formats);\n}\nvalidateFormats();\n\nexport { extensions, mimes, supported, validateFormats };\n//# sourceMappingURL=supported.mjs.map\n","import { EventEmitter, Ticker } from 'pixi.js';\nimport { WebAudioUtils } from './WebAudioUtils.mjs';\n\nlet id = 0;\nclass WebAudioInstance extends EventEmitter {\n  constructor(media) {\n    super();\n    this.id = id++;\n    this._media = null;\n    this._paused = false;\n    this._muted = false;\n    this._elapsed = 0;\n    this.init(media);\n  }\n  /**\n   * Set a property by name, this makes it easy to chain values\n   * @param name - Name of the property to set.\n   * @param value - Value to set property to.\n   */\n  set(name, value) {\n    if (this[name] === void 0) {\n      throw new Error(`Property with name ${name} does not exist.`);\n    } else {\n      switch (name) {\n        case \"speed\":\n          this.speed = value;\n          break;\n        case \"volume\":\n          this.volume = value;\n          break;\n        case \"muted\":\n          this.muted = value;\n          break;\n        case \"loop\":\n          this.loop = value;\n          break;\n        case \"paused\":\n          this.paused = value;\n          break;\n      }\n    }\n    return this;\n  }\n  /** Stops the instance, don't use after this. */\n  stop() {\n    if (this._source) {\n      this._internalStop();\n      this.emit(\"stop\");\n    }\n  }\n  /** Set the instance speed from 0 to 1 */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n    this._update(true);\n  }\n  /** Get the set the volume for this instance from 0 to 1 */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** `true` if the sound is muted */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /** If the sound instance should loop playback */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** The collection of filters. */\n  get filters() {\n    return this._filters;\n  }\n  set filters(filters) {\n    if (this._filters) {\n      this._filters?.filter((filter) => filter).forEach((filter) => filter.disconnect());\n      this._filters = null;\n      this._source.connect(this._gain);\n    }\n    this._filters = filters?.length ? filters.slice(0) : null;\n    this.refresh();\n  }\n  /** Refresh loop, volume and speed based on changes to parent */\n  refresh() {\n    if (!this._source) {\n      return;\n    }\n    const global = this._media.context;\n    const sound = this._media.parent;\n    this._source.loop = this._loop || sound.loop;\n    const globalVolume = global.volume * (global.muted ? 0 : 1);\n    const soundVolume = sound.volume * (sound.muted ? 0 : 1);\n    const instanceVolume = this._volume * (this._muted ? 0 : 1);\n    WebAudioUtils.setParamValue(this._gain.gain, instanceVolume * soundVolume * globalVolume);\n    WebAudioUtils.setParamValue(this._source.playbackRate, this._speed * sound.speed * global.speed);\n    this.applyFilters();\n  }\n  /** Connect filters nodes to audio context */\n  applyFilters() {\n    if (this._filters?.length) {\n      this._source.disconnect();\n      let source = this._source;\n      this._filters.forEach((filter) => {\n        source.connect(filter.destination);\n        source = filter;\n      });\n      source.connect(this._gain);\n    }\n  }\n  /** Handle changes in paused state, either globally or sound or instance */\n  refreshPaused() {\n    const global = this._media.context;\n    const sound = this._media.parent;\n    const pausedReal = this._paused || sound.paused || global.paused;\n    if (pausedReal !== this._pausedReal) {\n      this._pausedReal = pausedReal;\n      if (pausedReal) {\n        this._internalStop();\n        this.emit(\"paused\");\n      } else {\n        this.emit(\"resumed\");\n        this.play({\n          start: this._elapsed % this._duration,\n          end: this._end,\n          speed: this._speed,\n          loop: this._loop,\n          volume: this._volume\n        });\n      }\n      this.emit(\"pause\", pausedReal);\n    }\n  }\n  /**\n   * Plays the sound.\n   * @param options - Play options.\n   */\n  play(options) {\n    const { start, end, speed, loop, volume, muted, filters } = options;\n    if (end) {\n      console.assert(end > start, \"End time is before start time\");\n    }\n    this._paused = false;\n    const { source, gain } = this._media.nodes.cloneBufferSource();\n    this._source = source;\n    this._gain = gain;\n    this._speed = speed;\n    this._volume = volume;\n    this._loop = !!loop;\n    this._muted = muted;\n    this._filters = filters;\n    this.refresh();\n    const duration = this._source.buffer.duration;\n    this._duration = duration;\n    this._end = end;\n    this._lastUpdate = this._now();\n    this._elapsed = start;\n    this._source.onended = this._onComplete.bind(this);\n    if (this._loop) {\n      this._source.loopEnd = end;\n      this._source.loopStart = start;\n      this._source.start(0, start);\n    } else if (end) {\n      this._source.start(0, start, end - start);\n    } else {\n      this._source.start(0, start);\n    }\n    this.emit(\"start\");\n    this._update(true);\n    this.enableTicker(true);\n  }\n  /** Start the update progress. */\n  enableTicker(enabled) {\n    Ticker.shared.remove(this._updateListener, this);\n    if (enabled) {\n      Ticker.shared.add(this._updateListener, this);\n    }\n  }\n  /** The current playback progress from 0 to 1. */\n  get progress() {\n    return this._progress;\n  }\n  /** Pauses the sound. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /** Don't use after this. */\n  destroy() {\n    this.removeAllListeners();\n    this._internalStop();\n    if (this._gain) {\n      this._gain.disconnect();\n      this._gain = null;\n    }\n    if (this._media) {\n      this._media.context.events.off(\"refresh\", this.refresh, this);\n      this._media.context.events.off(\"refreshPaused\", this.refreshPaused, this);\n      this._media = null;\n    }\n    this._filters?.forEach((filter) => filter.disconnect());\n    this._filters = null;\n    this._end = null;\n    this._speed = 1;\n    this._volume = 1;\n    this._loop = false;\n    this._elapsed = 0;\n    this._duration = 0;\n    this._paused = false;\n    this._muted = false;\n    this._pausedReal = false;\n  }\n  /**\n   * To string method for instance.\n   * @return The string representation of instance.\n   */\n  toString() {\n    return `[WebAudioInstance id=${this.id}]`;\n  }\n  /**\n   * Get the current time in seconds.\n   * @return Seconds since start of context\n   */\n  _now() {\n    return this._media.context.audioContext.currentTime;\n  }\n  /** Callback for update listener */\n  _updateListener() {\n    this._update();\n  }\n  /** Internal update the progress. */\n  _update(force = false) {\n    if (this._source) {\n      const now = this._now();\n      const delta = now - this._lastUpdate;\n      if (delta > 0 || force) {\n        const speed = this._source.playbackRate.value;\n        this._elapsed += delta * speed;\n        this._lastUpdate = now;\n        const duration = this._duration;\n        let progress;\n        if (this._source.loopStart) {\n          const soundLength = this._source.loopEnd - this._source.loopStart;\n          progress = (this._source.loopStart + this._elapsed % soundLength) / duration;\n        } else {\n          progress = this._elapsed % duration / duration;\n        }\n        this._progress = progress;\n        this.emit(\"progress\", this._progress, duration);\n      }\n    }\n  }\n  /** Initializes the instance. */\n  init(media) {\n    this._media = media;\n    media.context.events.on(\"refresh\", this.refresh, this);\n    media.context.events.on(\"refreshPaused\", this.refreshPaused, this);\n  }\n  /** Stops the instance. */\n  _internalStop() {\n    if (this._source) {\n      this.enableTicker(false);\n      this._source.onended = null;\n      this._source.stop(0);\n      this._source.disconnect();\n      try {\n        this._source.buffer = null;\n      } catch (err) {\n        console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n      }\n      this._source = null;\n    }\n  }\n  /** Callback when completed. */\n  _onComplete() {\n    if (this._source) {\n      this.enableTicker(false);\n      this._source.onended = null;\n      this._source.disconnect();\n      try {\n        this._source.buffer = null;\n      } catch (err) {\n        console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n      }\n    }\n    this._source = null;\n    this._progress = 1;\n    this.emit(\"progress\", 1, this._duration);\n    this.emit(\"end\", this);\n  }\n}\n\nexport { WebAudioInstance };\n//# sourceMappingURL=WebAudioInstance.mjs.map\n","class Filterable {\n  /**\n   * @param input - The source audio node\n   * @param output - The output audio node\n   */\n  constructor(input, output) {\n    this._output = output;\n    this._input = input;\n  }\n  /** The destination output audio node */\n  get destination() {\n    return this._input;\n  }\n  /** The collection of filters. */\n  get filters() {\n    return this._filters;\n  }\n  set filters(filters) {\n    if (this._filters) {\n      this._filters.forEach((filter) => {\n        if (filter) {\n          filter.disconnect();\n        }\n      });\n      this._filters = null;\n      this._input.connect(this._output);\n    }\n    if (filters && filters.length) {\n      this._filters = filters.slice(0);\n      this._input.disconnect();\n      let prevFilter = null;\n      filters.forEach((filter) => {\n        if (prevFilter === null) {\n          this._input.connect(filter.destination);\n        } else {\n          prevFilter.connect(filter.destination);\n        }\n        prevFilter = filter;\n      });\n      prevFilter.connect(this._output);\n    }\n  }\n  /** Cleans up. */\n  destroy() {\n    this.filters = null;\n    this._input = null;\n    this._output = null;\n  }\n}\n\nexport { Filterable };\n//# sourceMappingURL=Filterable.mjs.map\n","import { Filterable } from '../Filterable.mjs';\nimport { WebAudioUtils } from './WebAudioUtils.mjs';\n\nconst _WebAudioNodes = class extends Filterable {\n  /**\n   * @param context - The audio context.\n   */\n  constructor(context) {\n    const audioContext = context.audioContext;\n    const bufferSource = audioContext.createBufferSource();\n    const gain = audioContext.createGain();\n    const analyser = audioContext.createAnalyser();\n    bufferSource.connect(analyser);\n    analyser.connect(gain);\n    gain.connect(context.destination);\n    super(analyser, gain);\n    this.context = context;\n    this.bufferSource = bufferSource;\n    this.gain = gain;\n    this.analyser = analyser;\n  }\n  /**\n   * Get the script processor node.\n   * @readonly\n   */\n  get script() {\n    if (!this._script) {\n      this._script = this.context.audioContext.createScriptProcessor(_WebAudioNodes.BUFFER_SIZE);\n      this._script.connect(this.context.destination);\n    }\n    return this._script;\n  }\n  /** Cleans up. */\n  destroy() {\n    super.destroy();\n    this.bufferSource.disconnect();\n    if (this._script) {\n      this._script.disconnect();\n    }\n    this.gain.disconnect();\n    this.analyser.disconnect();\n    this.bufferSource = null;\n    this._script = null;\n    this.gain = null;\n    this.analyser = null;\n    this.context = null;\n  }\n  /**\n   * Clones the bufferSource. Used just before playing a sound.\n   * @returns {SourceClone} The clone AudioBufferSourceNode.\n   */\n  cloneBufferSource() {\n    const orig = this.bufferSource;\n    const source = this.context.audioContext.createBufferSource();\n    source.buffer = orig.buffer;\n    WebAudioUtils.setParamValue(source.playbackRate, orig.playbackRate.value);\n    source.loop = orig.loop;\n    const gain = this.context.audioContext.createGain();\n    source.connect(gain);\n    gain.connect(this.destination);\n    return { source, gain };\n  }\n  /**\n   * Get buffer size of `ScriptProcessorNode`.\n   * @readonly\n   */\n  get bufferSize() {\n    return this.script.bufferSize;\n  }\n};\nlet WebAudioNodes = _WebAudioNodes;\n/**\n * The buffer size for script processor, default is `0` which auto-detects. If you plan to use\n * script node on iOS, you'll need to provide a non-zero amount.\n * @default 0\n */\nWebAudioNodes.BUFFER_SIZE = 0;\n\nexport { WebAudioNodes };\n//# sourceMappingURL=WebAudioNodes.mjs.map\n","import { DOMAdapter } from 'pixi.js';\nimport { WebAudioInstance } from './WebAudioInstance.mjs';\nimport { WebAudioNodes } from './WebAudioNodes.mjs';\n\nclass WebAudioMedia {\n  /**\n   * Re-initialize without constructing.\n   * @param parent - - Instance of parent Sound container\n   */\n  init(parent) {\n    this.parent = parent;\n    this._nodes = new WebAudioNodes(this.context);\n    this._source = this._nodes.bufferSource;\n    this.source = parent.options.source;\n  }\n  /** Destructor, safer to use `SoundLibrary.remove(alias)` to remove this sound. */\n  destroy() {\n    this.parent = null;\n    this._nodes.destroy();\n    this._nodes = null;\n    try {\n      this._source.buffer = null;\n    } catch (err) {\n      console.warn(\"Failed to set AudioBufferSourceNode.buffer to null:\", err);\n    }\n    this._source = null;\n    this.source = null;\n  }\n  // Implement create\n  create() {\n    return new WebAudioInstance(this);\n  }\n  // Implement context\n  get context() {\n    return this.parent.context;\n  }\n  // Implement isPlayable\n  get isPlayable() {\n    return !!this._source && !!this._source.buffer;\n  }\n  // Implement filters\n  get filters() {\n    return this._nodes.filters;\n  }\n  set filters(filters) {\n    this._nodes.filters = filters;\n  }\n  // Implements duration\n  get duration() {\n    console.assert(this.isPlayable, \"Sound not yet playable, no duration\");\n    return this._source.buffer.duration;\n  }\n  /** Gets and sets the buffer. */\n  get buffer() {\n    return this._source.buffer;\n  }\n  set buffer(buffer) {\n    this._source.buffer = buffer;\n  }\n  /** Get the current chained nodes object */\n  get nodes() {\n    return this._nodes;\n  }\n  // Implements load\n  load(callback) {\n    if (this.source) {\n      this._decode(this.source, callback);\n    } else if (this.parent.url) {\n      this._loadUrl(callback);\n    } else if (callback) {\n      callback(new Error(\"sound.url or sound.source must be set\"));\n    } else {\n      console.error(\"sound.url or sound.source must be set\");\n    }\n  }\n  /** Loads a sound using XHMLHttpRequest object. */\n  async _loadUrl(callback) {\n    const url = this.parent.url;\n    const response = await DOMAdapter.get().fetch(url);\n    this._decode(await response.arrayBuffer(), callback);\n  }\n  /**\n   * Decodes the array buffer.\n   * @param arrayBuffer - From load.\n   * @param {Function} callback - Callback optional\n   */\n  _decode(arrayBuffer, callback) {\n    const audioBufferReadyFn = (err, buffer) => {\n      if (err) {\n        if (callback) {\n          callback(err);\n        }\n      } else {\n        this.parent.isLoaded = true;\n        this.buffer = buffer;\n        const instance = this.parent.autoPlayStart();\n        if (callback) {\n          callback(null, this.parent, instance);\n        }\n      }\n    };\n    if (arrayBuffer instanceof AudioBuffer) {\n      audioBufferReadyFn(null, arrayBuffer);\n    } else {\n      const context = this.parent.context;\n      context.decode(arrayBuffer, audioBufferReadyFn);\n    }\n  }\n}\n\nexport { WebAudioMedia };\n//# sourceMappingURL=WebAudioMedia.mjs.map\n","import { path } from 'pixi.js';\nimport { HTMLAudioMedia } from './htmlaudio/HTMLAudioMedia.mjs';\nimport { getInstance } from './instance.mjs';\nimport { SoundSprite } from './SoundSprite.mjs';\nimport { supported, extensions } from './utils/supported.mjs';\nimport { WebAudioMedia } from './webaudio/WebAudioMedia.mjs';\n\nconst _Sound = class {\n  /**\n   * Create a new sound instance from source.\n   * @param source - Either the path or url to the source file.\n   *        or the object of options to use.\n   * @return Created sound instance.\n   */\n  static from(source) {\n    let options = {};\n    if (typeof source === \"string\") {\n      options.url = source;\n    } else if (source instanceof ArrayBuffer || source instanceof AudioBuffer || source instanceof HTMLAudioElement) {\n      options.source = source;\n    } else if (Array.isArray(source)) {\n      options.url = source;\n    } else {\n      options = source;\n    }\n    options = {\n      autoPlay: false,\n      singleInstance: false,\n      url: null,\n      source: null,\n      preload: false,\n      volume: 1,\n      speed: 1,\n      complete: null,\n      loaded: null,\n      loop: false,\n      ...options\n    };\n    Object.freeze(options);\n    const media = getInstance().useLegacy ? new HTMLAudioMedia() : new WebAudioMedia();\n    return new _Sound(media, options);\n  }\n  /**\n   * Use `Sound.from`\n   * @ignore\n   */\n  constructor(media, options) {\n    this.media = media;\n    this.options = options;\n    this._instances = [];\n    this._sprites = {};\n    this.media.init(this);\n    const complete = options.complete;\n    this._autoPlayOptions = complete ? { complete } : null;\n    this.isLoaded = false;\n    this._preloadQueue = null;\n    this.isPlaying = false;\n    this.autoPlay = options.autoPlay;\n    this.singleInstance = options.singleInstance;\n    this.preload = options.preload || this.autoPlay;\n    this.url = Array.isArray(options.url) ? this.preferUrl(options.url) : options.url;\n    this.speed = options.speed;\n    this.volume = options.volume;\n    this.loop = options.loop;\n    if (options.sprites) {\n      this.addSprites(options.sprites);\n    }\n    if (this.preload) {\n      this._preload(options.loaded);\n    }\n  }\n  /**\n   * Internal help for resolving which file to use if there are multiple provide\n   * this is especially helpful for working with bundlers (non Assets loading).\n   */\n  preferUrl(urls) {\n    const [file] = urls.map((url) => ({ url, ext: path.extname(url).slice(1) })).filter(({ ext }) => supported[ext]).sort((a, b) => extensions.indexOf(a.ext) - extensions.indexOf(b.ext));\n    if (!file) {\n      throw new Error(\"No supported file type found\");\n    }\n    return file.url;\n  }\n  /** Instance of the media context. */\n  get context() {\n    return getInstance().context;\n  }\n  /** Stops all the instances of this sound from playing. */\n  pause() {\n    this.isPlaying = false;\n    this.paused = true;\n    return this;\n  }\n  /** Resuming all the instances of this sound from playing */\n  resume() {\n    this.isPlaying = this._instances.length > 0;\n    this.paused = false;\n    return this;\n  }\n  /** Stops all the instances of this sound from playing. */\n  get paused() {\n    return this._paused;\n  }\n  set paused(paused) {\n    this._paused = paused;\n    this.refreshPaused();\n  }\n  /** The playback rate. */\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = speed;\n    this.refresh();\n  }\n  /** Set the filters. Only supported with WebAudio. */\n  get filters() {\n    return this.media.filters;\n  }\n  set filters(filters) {\n    this.media.filters = filters;\n  }\n  /**\n   * @ignore\n   */\n  addSprites(source, data) {\n    if (typeof source === \"object\") {\n      const results = {};\n      for (const alias in source) {\n        results[alias] = this.addSprites(alias, source[alias]);\n      }\n      return results;\n    }\n    console.assert(!this._sprites[source], `Alias ${source} is already taken`);\n    const sprite = new SoundSprite(this, data);\n    this._sprites[source] = sprite;\n    return sprite;\n  }\n  /** Destructor, safer to use `SoundLibrary.remove(alias)` to remove this sound. */\n  destroy() {\n    this._removeInstances();\n    this.removeSprites();\n    this.media.destroy();\n    this.media = null;\n    this._sprites = null;\n    this._instances = null;\n  }\n  /**\n   * Remove a sound sprite.\n   * @param alias - The unique name of the sound sprite, if alias is omitted, removes all sprites.\n   */\n  removeSprites(alias) {\n    if (!alias) {\n      for (const name in this._sprites) {\n        this.removeSprites(name);\n      }\n    } else {\n      const sprite = this._sprites[alias];\n      if (sprite !== void 0) {\n        sprite.destroy();\n        delete this._sprites[alias];\n      }\n    }\n    return this;\n  }\n  /** If the current sound is playable (loaded). */\n  get isPlayable() {\n    return this.isLoaded && this.media && this.media.isPlayable;\n  }\n  /** Stops all the instances of this sound from playing. */\n  stop() {\n    if (!this.isPlayable) {\n      this.autoPlay = false;\n      this._autoPlayOptions = null;\n      return this;\n    }\n    this.isPlaying = false;\n    for (let i = this._instances.length - 1; i >= 0; i--) {\n      this._instances[i].stop();\n    }\n    return this;\n  }\n  // Overloaded function\n  play(source, complete) {\n    let options;\n    if (typeof source === \"string\") {\n      const sprite = source;\n      options = { sprite, loop: this.loop, complete };\n    } else if (typeof source === \"function\") {\n      options = {};\n      options.complete = source;\n    } else {\n      options = source;\n    }\n    options = {\n      complete: null,\n      loaded: null,\n      sprite: null,\n      end: null,\n      start: 0,\n      volume: 1,\n      speed: 1,\n      muted: false,\n      loop: false,\n      ...options || {}\n    };\n    if (options.sprite) {\n      const alias = options.sprite;\n      console.assert(!!this._sprites[alias], `Alias ${alias} is not available`);\n      const sprite = this._sprites[alias];\n      options.start = sprite.start + (options.start || 0);\n      options.end = sprite.end;\n      options.speed = sprite.speed || 1;\n      options.loop = sprite.loop || options.loop;\n      delete options.sprite;\n    }\n    if (options.offset) {\n      options.start = options.offset;\n    }\n    if (!this.isLoaded) {\n      if (this._preloadQueue) {\n        return new Promise((resolve) => {\n          this._preloadQueue.push(() => {\n            resolve(this.play(options));\n          });\n        });\n      }\n      this._preloadQueue = [];\n      this.autoPlay = true;\n      this._autoPlayOptions = options;\n      return new Promise((resolve, reject) => {\n        this._preload((err, sound, media) => {\n          this._preloadQueue.forEach((resolve2) => resolve2());\n          this._preloadQueue = null;\n          if (err) {\n            reject(err);\n          } else {\n            if (options.loaded) {\n              options.loaded(err, sound, media);\n            }\n            resolve(media);\n          }\n        });\n      });\n    }\n    if (this.singleInstance || options.singleInstance) {\n      this._removeInstances();\n    }\n    const instance = this._createInstance();\n    this._instances.push(instance);\n    this.isPlaying = true;\n    instance.once(\"end\", () => {\n      if (options.complete) {\n        options.complete(this);\n      }\n      this._onComplete(instance);\n    });\n    instance.once(\"stop\", () => {\n      this._onComplete(instance);\n    });\n    instance.play(options);\n    return instance;\n  }\n  /** Internal only, speed, loop, volume change occured. */\n  refresh() {\n    const len = this._instances.length;\n    for (let i = 0; i < len; i++) {\n      this._instances[i].refresh();\n    }\n  }\n  /** Handle changes in paused state. Internal only. */\n  refreshPaused() {\n    const len = this._instances.length;\n    for (let i = 0; i < len; i++) {\n      this._instances[i].refreshPaused();\n    }\n  }\n  /** Gets and sets the volume. */\n  get volume() {\n    return this._volume;\n  }\n  set volume(volume) {\n    this._volume = volume;\n    this.refresh();\n  }\n  /** Gets and sets the muted flag. */\n  get muted() {\n    return this._muted;\n  }\n  set muted(muted) {\n    this._muted = muted;\n    this.refresh();\n  }\n  /** Gets and sets the looping. */\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this.refresh();\n  }\n  /** Starts the preloading of sound. */\n  _preload(callback) {\n    this.media.load(callback);\n  }\n  /** Gets the list of instances that are currently being played of this sound. */\n  get instances() {\n    return this._instances;\n  }\n  /** Get the map of sprites. */\n  get sprites() {\n    return this._sprites;\n  }\n  /** Get the duration of the audio in seconds. */\n  get duration() {\n    return this.media.duration;\n  }\n  /** Auto play the first instance. */\n  autoPlayStart() {\n    let instance;\n    if (this.autoPlay) {\n      instance = this.play(this._autoPlayOptions);\n    }\n    return instance;\n  }\n  /** Removes all instances. */\n  _removeInstances() {\n    for (let i = this._instances.length - 1; i >= 0; i--) {\n      this._poolInstance(this._instances[i]);\n    }\n    this._instances.length = 0;\n  }\n  /**\n   * Sound instance completed.\n   * @param instance\n   */\n  _onComplete(instance) {\n    if (this._instances) {\n      const index = this._instances.indexOf(instance);\n      if (index > -1) {\n        this._instances.splice(index, 1);\n      }\n      this.isPlaying = this._instances.length > 0;\n    }\n    this._poolInstance(instance);\n  }\n  /** Create a new instance. */\n  _createInstance() {\n    if (_Sound._pool.length > 0) {\n      const instance = _Sound._pool.pop();\n      instance.init(this.media);\n      return instance;\n    }\n    return this.media.create();\n  }\n  /**\n   * Destroy/recycling the instance object.\n   * @param instance - Instance to recycle\n   */\n  _poolInstance(instance) {\n    instance.destroy();\n    if (_Sound._pool.indexOf(instance) < 0) {\n      _Sound._pool.push(instance);\n    }\n  }\n};\nlet Sound = _Sound;\n/** Pool of instances */\nSound._pool = [];\n\nexport { Sound };\n//# sourceMappingURL=Sound.mjs.map\n","import { EventEmitter } from 'pixi.js';\nimport { Filterable } from '../Filterable.mjs';\n\nclass WebAudioContext extends Filterable {\n  constructor() {\n    const win = window;\n    const ctx = new WebAudioContext.AudioContext();\n    const compressor = ctx.createDynamicsCompressor();\n    const analyser = ctx.createAnalyser();\n    analyser.connect(compressor);\n    compressor.connect(ctx.destination);\n    super(analyser, compressor);\n    /** Set to false ignore suspending when window is blurred */\n    this.autoPause = true;\n    this._ctx = ctx;\n    this._offlineCtx = new WebAudioContext.OfflineAudioContext(\n      1,\n      2,\n      win.OfflineAudioContext ? Math.max(8e3, Math.min(96e3, ctx.sampleRate)) : 44100\n    );\n    this.compressor = compressor;\n    this.analyser = analyser;\n    this.events = new EventEmitter();\n    this.volume = 1;\n    this.speed = 1;\n    this.muted = false;\n    this.paused = false;\n    this._locked = ctx.state === \"suspended\" && (\"ontouchstart\" in globalThis || \"onclick\" in globalThis);\n    if (this._locked) {\n      this._unlock();\n      this._unlock = this._unlock.bind(this);\n      document.addEventListener(\"mousedown\", this._unlock, true);\n      document.addEventListener(\"touchstart\", this._unlock, true);\n      document.addEventListener(\"touchend\", this._unlock, true);\n    }\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    globalThis.addEventListener(\"focus\", this.onFocus);\n    globalThis.addEventListener(\"blur\", this.onBlur);\n  }\n  /** Handle mobile WebAudio context resume */\n  onFocus() {\n    if (!this.autoPause) {\n      return;\n    }\n    const state = this._ctx.state;\n    if (state === \"suspended\" || state === \"interrupted\" || !this._locked) {\n      this.paused = this._pausedOnBlur;\n      this.refreshPaused();\n    }\n  }\n  /** Handle mobile WebAudio context suspend */\n  onBlur() {\n    if (!this.autoPause) {\n      return;\n    }\n    if (!this._locked) {\n      this._pausedOnBlur = this._paused;\n      this.paused = true;\n      this.refreshPaused();\n    }\n  }\n  /**\n   * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n   * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n   * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n   *\n   * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n   * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n   * stick with `mousedown` and `touchend`.\n   */\n  _unlock() {\n    if (!this._locked) {\n      return;\n    }\n    this.playEmptySound();\n    if (this._ctx.state === \"running\") {\n      document.removeEventListener(\"mousedown\", this._unlock, true);\n      document.removeEventListener(\"touchend\", this._unlock, true);\n      document.removeEventListener(\"touchstart\", this._unlock, true);\n      this._locked = false;\n    }\n  }\n  /**\n   * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n   * require the first sound to be played inside of a user initiated event (touch/click).\n   */\n  playEmptySound() {\n    const source = this._ctx.createBufferSource();\n    source.buffer = this._ctx.createBuffer(1, 1, 22050);\n    source.connect(this._ctx.destination);\n    source.start(0, 0, 0);\n    if (source.context.state === \"suspended\") {\n      source.context.resume();\n    }\n  }\n  /**\n   * Get AudioContext class, if not supported returns `null`\n   * @type {AudioContext}\n   * @readonly\n   */\n  static get AudioContext() {\n    const win = window;\n    return win.AudioContext || win.webkitAudioContext || null;\n  }\n  /**\n   * Get OfflineAudioContext class, if not supported returns `null`\n   * @type {OfflineAudioContext}\n   * @readonly\n   */\n  static get OfflineAudioContext() {\n    const win = window;\n    return win.OfflineAudioContext || win.webkitOfflineAudioContext || null;\n  }\n  /** Destroy this context. */\n  destroy() {\n    super.destroy();\n    const ctx = this._ctx;\n    if (typeof ctx.close !== \"undefined\") {\n      ctx.close();\n    }\n    globalThis.removeEventListener(\"focus\", this.onFocus);\n    globalThis.removeEventListener(\"blur\", this.onBlur);\n    this.events.removeAllListeners();\n    this.analyser.disconnect();\n    this.compressor.disconnect();\n    this.analyser = null;\n    this.compressor = null;\n    this.events = null;\n    this._offlineCtx = null;\n    this._ctx = null;\n  }\n  /**\n   * The WebAudio API AudioContext object.\n   * @readonly\n   * @type {AudioContext}\n   */\n  get audioContext() {\n    return this._ctx;\n  }\n  /**\n   * The WebAudio API OfflineAudioContext object.\n   * @readonly\n   * @type {OfflineAudioContext}\n   */\n  get offlineContext() {\n    return this._offlineCtx;\n  }\n  /**\n   * Pauses all sounds, even though we handle this at the instance\n   * level, we'll also pause the audioContext so that the\n   * time used to compute progress isn't messed up.\n   * @default false\n   */\n  set paused(paused) {\n    if (paused && this._ctx.state === \"running\") {\n      this._ctx.suspend();\n    } else if (!paused && this._ctx.state === \"suspended\") {\n      this._ctx.resume();\n    }\n    this._paused = paused;\n  }\n  get paused() {\n    return this._paused;\n  }\n  /** Emit event when muted, volume or speed changes */\n  refresh() {\n    this.events.emit(\"refresh\");\n  }\n  /** Emit event when muted, volume or speed changes */\n  refreshPaused() {\n    this.events.emit(\"refreshPaused\");\n  }\n  /**\n   * Toggles the muted state.\n   * @return The current muted state.\n   */\n  toggleMute() {\n    this.muted = !this.muted;\n    this.refresh();\n    return this.muted;\n  }\n  /**\n   * Toggles the paused state.\n   * @return The current muted state.\n   */\n  togglePause() {\n    this.paused = !this.paused;\n    this.refreshPaused();\n    return this._paused;\n  }\n  /**\n   * Decode the audio data\n   * @param arrayBuffer - Buffer from loader\n   * @param callback - When completed, error and audioBuffer are parameters.\n   */\n  decode(arrayBuffer, callback) {\n    const handleError = (err) => {\n      callback(new Error(err?.message || \"Unable to decode file\"));\n    };\n    const result = this._offlineCtx.decodeAudioData(\n      arrayBuffer,\n      (buffer) => {\n        callback(null, buffer);\n      },\n      handleError\n    );\n    if (result) {\n      result.catch(handleError);\n    }\n  }\n}\n\nexport { WebAudioContext };\n//# sourceMappingURL=WebAudioContext.mjs.map\n","import { HTMLAudioContext } from './htmlaudio/HTMLAudioContext.mjs';\nimport { Sound } from './Sound.mjs';\nimport { WebAudioContext } from './webaudio/WebAudioContext.mjs';\n\nclass SoundLibrary {\n  constructor() {\n    this.init();\n  }\n  /**\n   * Re-initialize the sound library, this will\n   * recreate the AudioContext. If there's a hardware-failure\n   * call `close` and then `init`.\n   * @return Sound instance\n   */\n  init() {\n    if (this.supported) {\n      this._webAudioContext = new WebAudioContext();\n    }\n    this._htmlAudioContext = new HTMLAudioContext();\n    this._sounds = {};\n    this.useLegacy = !this.supported;\n    return this;\n  }\n  /**\n   * The global context to use.\n   * @readonly\n   */\n  get context() {\n    return this._context;\n  }\n  /**\n   * Apply filters to all sounds. Can be useful\n   * for setting global planning or global effects.\n   * **Only supported with WebAudio.**\n   * @example\n   * import { sound, filters } from '@pixi/sound';\n   * // Adds a filter to pan all output left\n   * sound.filtersAll = [\n   *     new filters.StereoFilter(-1)\n   * ];\n   */\n  get filtersAll() {\n    if (!this.useLegacy) {\n      return this._context.filters;\n    }\n    return [];\n  }\n  set filtersAll(filtersAll) {\n    if (!this.useLegacy) {\n      this._context.filters = filtersAll;\n    }\n  }\n  /**\n   * `true` if WebAudio is supported on the current browser.\n   */\n  get supported() {\n    return WebAudioContext.AudioContext !== null;\n  }\n  /**\n   * @ignore\n   */\n  add(source, sourceOptions) {\n    if (typeof source === \"object\") {\n      const results = {};\n      for (const alias in source) {\n        const options2 = this._getOptions(\n          source[alias],\n          sourceOptions\n        );\n        results[alias] = this.add(alias, options2);\n      }\n      return results;\n    }\n    console.assert(!this._sounds[source], `Sound with alias ${source} already exists.`);\n    if (sourceOptions instanceof Sound) {\n      this._sounds[source] = sourceOptions;\n      return sourceOptions;\n    }\n    const options = this._getOptions(sourceOptions);\n    const sound = Sound.from(options);\n    this._sounds[source] = sound;\n    return sound;\n  }\n  /**\n   * Internal methods for getting the options object\n   * @private\n   * @param source - The source options\n   * @param overrides - Override default options\n   * @return The construction options\n   */\n  _getOptions(source, overrides) {\n    let options;\n    if (typeof source === \"string\") {\n      options = { url: source };\n    } else if (Array.isArray(source)) {\n      options = { url: source };\n    } else if (source instanceof ArrayBuffer || source instanceof AudioBuffer || source instanceof HTMLAudioElement) {\n      options = { source };\n    } else {\n      options = source;\n    }\n    options = { ...options, ...overrides || {} };\n    return options;\n  }\n  /**\n   * Do not use WebAudio, force the use of legacy. This **must** be called before loading any files.\n   */\n  get useLegacy() {\n    return this._useLegacy;\n  }\n  set useLegacy(legacy) {\n    this._useLegacy = legacy;\n    this._context = !legacy && this.supported ? this._webAudioContext : this._htmlAudioContext;\n  }\n  /**\n   * This disables auto-pause all playback when the window blurs (WebAudio only).\n   * This is helpful to keep from playing sounds when the user switches tabs.\n   * However, if you're running content within an iframe, this may be undesirable\n   * and you should disable (set to `true`) this behavior.\n   * @default false\n   */\n  get disableAutoPause() {\n    return !this._webAudioContext.autoPause;\n  }\n  set disableAutoPause(autoPause) {\n    this._webAudioContext.autoPause = !autoPause;\n  }\n  /**\n   * Removes a sound by alias.\n   * @param alias - The sound alias reference.\n   * @return Instance for chaining.\n   */\n  remove(alias) {\n    this.exists(alias, true);\n    this._sounds[alias].destroy();\n    delete this._sounds[alias];\n    return this;\n  }\n  /**\n   * Set the global volume for all sounds. To set per-sound volume see {@link SoundLibrary#volume}.\n   */\n  get volumeAll() {\n    return this._context.volume;\n  }\n  set volumeAll(volume) {\n    this._context.volume = volume;\n    this._context.refresh();\n  }\n  /**\n   * Set the global speed for all sounds. To set per-sound speed see {@link SoundLibrary#speed}.\n   */\n  get speedAll() {\n    return this._context.speed;\n  }\n  set speedAll(speed) {\n    this._context.speed = speed;\n    this._context.refresh();\n  }\n  /**\n   * Toggle paused property for all sounds.\n   * @return `true` if all sounds are paused.\n   */\n  togglePauseAll() {\n    return this._context.togglePause();\n  }\n  /**\n   * Pauses any playing sounds.\n   * @return Instance for chaining.\n   */\n  pauseAll() {\n    this._context.paused = true;\n    this._context.refreshPaused();\n    return this;\n  }\n  /**\n   * Resumes any sounds.\n   * @return Instance for chaining.\n   */\n  resumeAll() {\n    this._context.paused = false;\n    this._context.refreshPaused();\n    return this;\n  }\n  /**\n   * Toggle muted property for all sounds.\n   * @return `true` if all sounds are muted.\n   */\n  toggleMuteAll() {\n    return this._context.toggleMute();\n  }\n  /**\n   * Mutes all playing sounds.\n   * @return Instance for chaining.\n   */\n  muteAll() {\n    this._context.muted = true;\n    this._context.refresh();\n    return this;\n  }\n  /**\n   * Unmutes all playing sounds.\n   * @return Instance for chaining.\n   */\n  unmuteAll() {\n    this._context.muted = false;\n    this._context.refresh();\n    return this;\n  }\n  /**\n   * Stops and removes all sounds. They cannot be used after this.\n   * @return Instance for chaining.\n   */\n  removeAll() {\n    for (const alias in this._sounds) {\n      this._sounds[alias].destroy();\n      delete this._sounds[alias];\n    }\n    return this;\n  }\n  /**\n   * Stops all sounds.\n   * @return Instance for chaining.\n   */\n  stopAll() {\n    for (const alias in this._sounds) {\n      this._sounds[alias].stop();\n    }\n    return this;\n  }\n  /**\n   * Checks if a sound by alias exists.\n   * @param alias - Check for alias.\n   * @param assert - Whether enable console.assert.\n   * @return true if the sound exists.\n   */\n  exists(alias, assert = false) {\n    const exists = !!this._sounds[alias];\n    if (assert) {\n      console.assert(exists, `No sound matching alias '${alias}'.`);\n    }\n    return exists;\n  }\n  /**\n   * Convenience function to check to see if any sound is playing.\n   * @returns `true` if any sound is currently playing.\n   */\n  isPlaying() {\n    for (const alias in this._sounds) {\n      if (this._sounds[alias].isPlaying) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Find a sound by alias.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  find(alias) {\n    this.exists(alias, true);\n    return this._sounds[alias];\n  }\n  /**\n   * Plays a sound.\n   * @method play\n   * @instance\n   * @param {string} alias - The sound alias reference.\n   * @param {string} sprite - The alias of the sprite to play.\n   * @return {IMediaInstance|null} The sound instance, this cannot be reused\n   *         after it is done playing. Returns `null` if the sound has not yet loaded.\n   */\n  /**\n   * Plays a sound.\n   * @param alias - The sound alias reference.\n   * @param {PlayOptions|Function} options - The options or callback when done.\n   * @return The sound instance,\n   *        this cannot be reused after it is done playing. Returns a Promise if the sound\n   *        has not yet loaded.\n   */\n  play(alias, options) {\n    return this.find(alias).play(options);\n  }\n  /**\n   * Stops a sound.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  stop(alias) {\n    return this.find(alias).stop();\n  }\n  /**\n   * Pauses a sound.\n   * @param alias - The sound alias reference.\n   * @return Sound object.\n   */\n  pause(alias) {\n    return this.find(alias).pause();\n  }\n  /**\n   * Resumes a sound.\n   * @param alias - The sound alias reference.\n   * @return Instance for chaining.\n   */\n  resume(alias) {\n    return this.find(alias).resume();\n  }\n  /**\n   * Get or set the volume for a sound.\n   * @param alias - The sound alias reference.\n   * @param volume - Optional current volume to set.\n   * @return The current volume.\n   */\n  volume(alias, volume) {\n    const sound = this.find(alias);\n    if (volume !== void 0) {\n      sound.volume = volume;\n    }\n    return sound.volume;\n  }\n  /**\n   * Get or set the speed for a sound.\n   * @param alias - The sound alias reference.\n   * @param speed - Optional current speed to set.\n   * @return The current speed.\n   */\n  speed(alias, speed) {\n    const sound = this.find(alias);\n    if (speed !== void 0) {\n      sound.speed = speed;\n    }\n    return sound.speed;\n  }\n  /**\n   * Get the length of a sound in seconds.\n   * @param alias - The sound alias reference.\n   * @return The current duration in seconds.\n   */\n  duration(alias) {\n    return this.find(alias).duration;\n  }\n  /**\n   * Closes the sound library. This will release/destroy\n   * the AudioContext(s). Can be used safely if you want to\n   * initialize the sound library later. Use `init` method.\n   */\n  close() {\n    this.removeAll();\n    this._sounds = null;\n    if (this._webAudioContext) {\n      this._webAudioContext.destroy();\n      this._webAudioContext = null;\n    }\n    if (this._htmlAudioContext) {\n      this._htmlAudioContext.destroy();\n      this._htmlAudioContext = null;\n    }\n    this._context = null;\n    return this;\n  }\n}\n\nexport { SoundLibrary };\n//# sourceMappingURL=SoundLibrary.mjs.map\n","import { ExtensionType, LoaderParserPriority, path, extensions as extensions$1 } from 'pixi.js';\nimport { getInstance } from './instance.mjs';\nimport { Sound } from './Sound.mjs';\nimport { extensions, supported, mimes } from './utils/supported.mjs';\n\nconst getAlias = (asset) => {\n  const src = asset.src;\n  let alias = asset?.alias?.[0];\n  if (!alias || asset.src === alias) {\n    alias = path.basename(src, path.extname(src));\n  }\n  return alias;\n};\nconst soundAsset = {\n  extension: ExtensionType.Asset,\n  detection: {\n    test: async () => true,\n    add: async (formats) => [...formats, ...extensions.filter((ext) => supported[ext])],\n    remove: async (formats) => formats.filter((ext) => formats.includes(ext))\n  },\n  loader: {\n    name: \"sound\",\n    extension: {\n      type: [ExtensionType.LoadParser],\n      priority: LoaderParserPriority.High\n    },\n    /** Should we attempt to load this file? */\n    test(url) {\n      const ext = path.extname(url).slice(1);\n      return !!supported[ext] || mimes.some((mime) => url.startsWith(`data:${mime}`));\n    },\n    /** Load the sound file, this is mostly handled by Sound.from() */\n    async load(url, asset) {\n      const sound = await new Promise((resolve, reject) => Sound.from({\n        ...asset.data,\n        url,\n        preload: true,\n        loaded(err, sound2) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(sound2);\n          }\n          asset.data?.loaded?.(err, sound2);\n        }\n      }));\n      getInstance().add(getAlias(asset), sound);\n      return sound;\n    },\n    /** Remove the sound from the library */\n    async unload(_sound, asset) {\n      getInstance().remove(getAlias(asset));\n    }\n  }\n};\nextensions$1.add(soundAsset);\n\nexport { soundAsset };\n//# sourceMappingURL=soundAsset.mjs.map\n","import * as index from './filters/index.mjs';\nexport { index as filters };\nimport * as index$1 from './htmlaudio/index.mjs';\nexport { index$1 as htmlaudio };\nimport { setInstance } from './instance.mjs';\nimport { SoundLibrary } from './SoundLibrary.mjs';\nimport * as index$2 from './utils/index.mjs';\nexport { index$2 as utils };\nimport * as index$3 from './webaudio/index.mjs';\nexport { index$3 as webaudio };\nexport { Filterable } from './Filterable.mjs';\nexport { Filter } from './filters/Filter.mjs';\nexport { Sound } from './Sound.mjs';\nexport { soundAsset } from './soundAsset.mjs';\nexport { SoundSprite } from './SoundSprite.mjs';\n\nconst sound = setInstance(new SoundLibrary());\n\nexport { SoundLibrary, sound };\n//# sourceMappingURL=index.mjs.map\n","import { PlayOptions, Sound, sound, SoundSourceMap } from '@pixi/sound';\nimport { gsap } from 'gsap';\nimport { Assets, AssetsManifest, UnresolvedAsset } from 'pixi.js';\nimport { Signal } from '../../signals';\nimport { Logger } from '../../utils';\nimport type { IPlugin } from '../Plugin';\nimport { Plugin } from '../Plugin';\n\nimport { AudioChannel, IAudioChannel } from './AudioChannel';\nimport { AudioInstance, IAudioInstance } from './AudioInstance';\nimport { IApplication } from '../../core';\nimport TweenVars = gsap.TweenVars;\n\nexport type SoundDetail = { id: string; instance: IAudioInstance; channelName: string };\nexport type ChannelVolumeDetail = { channel: IAudioChannel; volume: number };\nexport type ChannelName = 'music' | 'sfx' | 'voiceover' | string;\n\nexport interface IAudioManagerPlugin extends IPlugin {\n  onSoundStarted: Signal<(detail: SoundDetail) => void>;\n  onSoundEnded: Signal<(detail: SoundDetail) => void>;\n  onMasterVolumeChanged: Signal<(volume: number) => void>;\n  onChannelVolumeChanged: Signal<(detail: ChannelVolumeDetail) => void>;\n  onMuted: Signal<(muted: boolean) => void>;\n\n  masterVolume: number;\n  muted: boolean;\n  channels: Map<string, IAudioChannel>;\n  music: IAudioChannel;\n  sfx: IAudioChannel;\n  voiceover: IAudioChannel;\n  vo: IAudioChannel;\n\n  createChannel(name: string): void;\n\n  play(soundId: string, channelName: ChannelName, options?: PlayOptions): Promise<IAudioInstance>;\n\n  isPlaying(soundId: string, channelName: ChannelName): boolean;\n\n  load(soundId: string | string[], channelName: ChannelName, options?: PlayOptions): void;\n\n  stop(soundId: string, channelName: ChannelName): IAudioInstance | undefined;\n\n  setChannelVolume(channelName: ChannelName | ChannelName[], volume: number): void;\n\n  getChannel(name: ChannelName): IAudioChannel | undefined;\n\n  addAllFromManifest(manifest: AssetsManifest): void;\n\n  addAllFromBundle(bundleName: string, manifest?: AssetsManifest | string | undefined): void;\n\n  add(soundAsset: UnresolvedAsset): void;\n\n  fade(soundId: string, channelName: ChannelName, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  fadeIn(soundId: string, channelName: ChannelName, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  fadeOut(soundId: string, channelName: ChannelName, props?: gsap.TweenVars): Promise<gsap.core.Tween | null>;\n\n  crossFade(\n    outSoundId: string,\n    inSoundId: string,\n    channelName: ChannelName,\n    duration?: number,\n  ): Promise<gsap.core.Tween | null>;\n\n  mute(): void;\n\n  unmute(): void;\n\n  pause(): void;\n\n  resume(): void;\n\n  suspend(): void;\n\n  restore(): void;\n\n  getAudioInstance(soundId: string, channelName: string): IAudioInstance | undefined;\n\n  stopAll(fade?: boolean, duration?: number, props?: TweenVars): void;\n}\n\n/**\n * AudioManager is a class that manages audio playback in the application.\n * It provides methods to play, stop, fade in/out, and crossfade sounds.\n * It also allows you to create and manage audio channels.\n *\n * @example\n * const audioManager = new AudioManager();\n * audioManager.play('soundId', 'music');\n */\nexport class AudioManagerPlugin extends Plugin implements IAudioManagerPlugin {\n  // signals\n  /**\n   * Signal that is emitted when a sound starts playing.\n   * The callback function receives a SoundDetail object.\n   */\n  public onSoundStarted: Signal<(detail: SoundDetail) => void> = new Signal<(detail: SoundDetail) => void>();\n  /**\n   * Signal that is emitted when a sound ends.\n   * The callback function receives a SoundDetail object.\n   */\n  public onSoundEnded: Signal<(detail: SoundDetail) => void> = new Signal<(detail: SoundDetail) => void>();\n  /**\n   * Signal that is emitted when the system is muted or unmuted.\n   */\n  public onMuted: Signal<(muted: boolean) => void> = new Signal<(muted: boolean) => void>();\n  /**\n   * Signal that is emitted when the master volume changes.\n   * The callback function receives the new volume as a number.\n   */\n  public onMasterVolumeChanged: Signal<(volume: number) => void> = new Signal<(volume: number) => void>();\n  /**\n   * Signal that is emitted when a channel's volume changes.\n   * The callback function receives a ChannelVolumeDetail object.\n   */\n  public onChannelVolumeChanged: Signal<(detail: ChannelVolumeDetail) => void> = new Signal<\n    (detail: ChannelVolumeDetail) => void\n  >();\n  private _storedVolume: number | undefined = undefined;\n  private _paused: boolean = false;\n  private _idMap: Map<string, string> = new Map();\n\n  /**\n   * Creates a new AudioManager instance.\n   * @param {string} id - The ID of the AudioManager. Default is 'AudioManager'.\n   */\n  public constructor(id: string = 'audio') {\n    super(id);\n\n    this.createChannel('music');\n    this.createChannel('sfx');\n    this.createChannel('voiceover');\n  }\n\n  private _masterVolume: number = 1;\n\n  /**\n   * Gets the master volume.\n   * @returns {number} The master volume.\n   */\n  get masterVolume(): number {\n    return this._masterVolume;\n  }\n\n  /**\n   * Sets the master volume.\n   * @param {number} value - The new master volume.\n   */\n  set masterVolume(value: number) {\n    this._masterVolume = value;\n    this._channels.forEach((channel) => channel.updateVolume());\n  }\n\n  private _muted: boolean = false;\n\n  /**\n   * Gets whether the audio is muted.\n   * @returns {boolean} True if the audio is muted, false otherwise.\n   */\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  /**\n   * Sets whether the audio is muted.\n   * @param {boolean} value - True to mute the audio, false to unmute.\n   */\n  set muted(value: boolean) {\n    this._muted = value;\n    this._setMuted();\n  }\n\n  private _channels: Map<string, IAudioChannel> = new Map();\n\n  /**\n   * Gets the map of audio channels.\n   * @returns {Map<string, IAudioChannel>} The map of audio channels.\n   */\n  get channels(): Map<string, IAudioChannel> {\n    return this._channels;\n  }\n\n  get music(): IAudioChannel {\n    return this._channels.get('music')!;\n  }\n\n  get sfx(): IAudioChannel {\n    return this._channels.get('sfx')!;\n  }\n\n  get voiceover(): IAudioChannel {\n    return this._channels.get('voiceover')!;\n  }\n\n  get vo(): IAudioChannel {\n    return this._channels.get('voiceover')!;\n  }\n\n  public destroy(): void {\n    this._channels.forEach((channel) => {\n      channel.destroy();\n    });\n    this._channels.clear();\n    this.onSoundStarted.disconnectAll();\n    this.onSoundEnded.disconnectAll();\n    this.onMuted.disconnectAll();\n    this.onMasterVolumeChanged.disconnectAll();\n    this.onChannelVolumeChanged.disconnectAll();\n\n    super.destroy();\n  }\n\n  /**\n   * Initializes the AudioManager.\n   * @param {IApplication} app\n   * @returns {Promise<void>}\n   */\n  public initialize(app: IApplication): Promise<void> {\n    if (typeof app?.manifest === 'object') {\n      this.addAllFromManifest(app.manifest);\n    }\n    return Promise.resolve(undefined);\n  }\n\n  /**\n   * Creates a new audio channel.\n   * @param {string} name\n   */\n  public createChannel(name: string): void {\n    if (this._channels.has(name)) {\n      throw new Error(`Channel with name ${name} already exists.`);\n    }\n    const channel = new AudioChannel(name, this);\n    this._channels.set(name, channel);\n  }\n\n  /**\n   * Sets the volume of the specified channel.\n   * @param {ChannelName | ChannelName[]} channelName\n   * @param {number} volume\n   */\n  public setChannelVolume(channelName: ChannelName | ChannelName[], volume: number): void {\n    if (!Array.isArray(channelName)) {\n      channelName = [channelName];\n    }\n    channelName.forEach((name) => this._setChannelVolume(name, volume));\n  }\n\n  /**\n   * Gets the audio channel with the specified name.\n   * @param {ChannelName} name\n   * @returns {IAudioChannel | undefined}\n   */\n  public getChannel(name: ChannelName): IAudioChannel | undefined {\n    return this._channels.get(name);\n  }\n\n  /**\n   * Mutes the audio.\n   */\n  public mute() {\n    this._muted = true;\n    this._setMuted();\n  }\n\n  /**\n   * Unmutes the audio.\n   */\n  public unmute() {\n    this._muted = false;\n    this._setMuted();\n  }\n\n  /**\n   * Pauses the audio.\n   */\n  public pause(): void {\n    this._paused = true;\n    this._setPaused();\n  }\n\n  /**\n   * Resumes the audio.\n   */\n  public resume(): void {\n    this._paused = false;\n    this._setPaused();\n  }\n\n  /**\n   * Adds all sound assets from the specified manifest.\n   * @param {AssetsManifest} manifest\n   */\n  public addAllFromManifest(manifest: AssetsManifest) {\n    manifest.bundles.forEach((bundle) => {\n      this.addAllFromBundle(bundle.name, manifest);\n    });\n  }\n\n  /**\n   * Adds all sound assets from the specified bundle.\n   * @param {string} bundleName\n   * @param {AssetsManifest | string | undefined} manifest\n   */\n  public addAllFromBundle(bundleName: string, manifest?: AssetsManifest | string | undefined) {\n    if (!manifest) {\n      manifest = this.app.manifest;\n    }\n    if (manifest === undefined || typeof manifest === 'string') {\n      throw new Error('Manifest is not available');\n    }\n    const bundle = manifest.bundles.find((b) => b.name === bundleName);\n    if (bundle === undefined) {\n      throw new Error(`Bundle with name ${bundleName} does not exist.`);\n    }\n    if (!Array.isArray(bundle?.assets)) {\n      bundle.assets = [bundle.assets];\n    }\n    bundle.assets.forEach((asset) => {\n      // detect sound assets by asset.src extension\n      let src = asset.src;\n      if (Array.isArray(src)) {\n        src = src[0];\n      }\n      const ext = (src as string).split('.').pop();\n      if (ext === 'mp3' || ext === 'ogg' || ext === 'wav' || ext === 'webm') {\n        this.add(asset);\n      }\n    });\n  }\n\n  /**\n   * Adds a sound asset to the AudioManager.\n   * @param {UnresolvedAsset} soundAsset\n   */\n  public add(soundAsset: UnresolvedAsset): void {\n    let alias = soundAsset.alias;\n    if (!Array.isArray(soundAsset.alias)) {\n      alias = [soundAsset.alias as string];\n    }\n    if (alias) {\n      const obj: SoundSourceMap = {};\n      (alias as string[]).forEach((a: string) => {\n        if (a === undefined) {\n          return;\n        }\n        // @ts-expect-error soundAsset is not a string error\n        obj[a] = soundAsset.src;\n      });\n      sound.add(obj);\n    }\n  }\n\n  isPlaying(soundId: string, channelName: ChannelName): boolean {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      return channel.get(soundId)?.isPlaying === true;\n    }\n    return false;\n  }\n\n  /**\n   * Plays a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @param {PlayOptions} options\n   * @returns {Promise<IAudioInstance>}\n   */\n  public async play(soundId: string, channelName: ChannelName = 'sfx', options?: PlayOptions): Promise<IAudioInstance> {\n    if (this._idMap.has(soundId)) {\n      soundId = this._idMap.get(soundId) as string;\n    }\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n      const audioInstance = channel.add(soundId, new AudioInstance(soundId, channel, this));\n      const mediaInstance = await sound.play(soundId, options);\n      audioInstance.media = mediaInstance;\n      if (options?.volume !== undefined) {\n        mediaInstance.volume = options.volume;\n\n        audioInstance.onStart.connect(() => {\n          () => this._soundStarted(soundId, audioInstance, channelName);\n        });\n        audioInstance.onEnd.connect(() => {\n          () => this._soundEnded(soundId, audioInstance, channelName);\n        });\n      }\n      audioInstance.isPlaying = true;\n      return audioInstance;\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Stops a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @returns {IAudioInstance | undefined}\n   */\n  public stop(soundId: string, channelName: ChannelName = 'sfx'): IAudioInstance | undefined {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      return channel.remove(soundId);\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Fades in a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @param {gsap.TweenVars} props\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fadeIn(\n    soundId: string,\n    channelName: ChannelName = 'music',\n    props: gsap.TweenVars,\n  ): Promise<gsap.core.Tween | null> {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n    }\n    if (!channel?.get(soundId)) {\n      await this.play(soundId, channelName, { volume: 0 });\n    }\n    if (props?.volume === 0) {\n      Logger.warn('fadeIn volume is 0', soundId, channelName, props);\n    }\n    const fadeProps = Object.assign({ volume: props?.volume ?? 1, duration: 1, ease: 'linear.easeNone' }, props);\n    return this.fade(soundId, channelName, fadeProps);\n  }\n\n  /**\n   * Fades out a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @param {Partial<gsap.TweenVars>} props\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fadeOut(\n    soundId: string,\n    channelName: ChannelName = 'music',\n    props: Partial<gsap.TweenVars> = { volume: 0 },\n  ): Promise<gsap.core.Tween | null> {\n    if (!props) {\n      props = {};\n    }\n    if (props?.volume === undefined) {\n      props.volume = 0;\n    }\n    if (props?.volume > 0) {\n      Logger.warn('fadeOut volume should probably be 0', soundId, channelName, props);\n    }\n    const fadeProps = Object.assign({ volume: 0, duration: 1, ease: 'linear.easeNone' }, props);\n    return this.fade(soundId, channelName, fadeProps, true);\n  }\n\n  /**\n   * Crossfades between two sounds in the specified channel.\n   * @param {string} outSoundId\n   * @param {string} inSoundId\n   * @param {ChannelName} channelName\n   * @param {number} duration\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async crossFade(\n    outSoundId: string,\n    inSoundId: string,\n    channelName: ChannelName = 'music',\n    duration: number = 2,\n  ): Promise<gsap.core.Tween | null> {\n    const crossFadeProps = { duration, ease: 'linear.easeNone' };\n    void this.fadeOut(outSoundId, channelName, crossFadeProps);\n    return this.fadeIn(inSoundId, channelName, crossFadeProps);\n  }\n\n  /**\n   * Fades a sound with the specified ID in the specified channel.\n   * @param {string} soundId\n   * @param {ChannelName} channelName\n   * @param {gsap.TweenVars} props\n   * @param {boolean} stopOnComplete\n   * @returns {Promise<gsap.core.Tween | null>}\n   */\n  public async fade(\n    soundId: string,\n    channelName: ChannelName = 'music',\n    props: gsap.TweenVars,\n    stopOnComplete: boolean = false,\n  ): Promise<gsap.core.Tween | null> {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      soundId = this._verifySoundId(soundId);\n    }\n    const soundInstance = channel?.get(soundId);\n    if (soundInstance) {\n      const tween = gsap.to(soundInstance, props);\n      tween.eventCallback('onComplete', () => {\n        if (stopOnComplete) {\n          this.stop(soundId, channelName);\n        }\n      });\n      return tween;\n    }\n    return null;\n  }\n\n  /**\n   * Restores the audio state after it has been suspended.\n   */\n  public async restore() {\n    const ctx = sound?.context?.audioContext;\n    if (ctx) {\n      await ctx.resume();\n    }\n    if (this._storedVolume !== undefined) {\n      this.masterVolume = this._storedVolume;\n    }\n    this.muted = this._muted;\n    this.resume();\n  }\n\n  /**\n   * Suspends the audio by setting the master volume to 0 and pausing all sounds.\n   */\n  public suspend() {\n    this._storedVolume = this._masterVolume;\n    this.masterVolume = 0;\n    this.pause();\n  }\n\n  public getAudioInstance(soundId: string, channelName: string = 'sfx'): IAudioInstance | undefined {\n    const channel = this._channels.get(channelName);\n    soundId = this._verifySoundId(soundId);\n    if (channel) {\n      return channel.get(soundId);\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  public load(soundId: string | string[], channelName: ChannelName = 'sfx', options?: PlayOptions): void {\n    if (!Array.isArray(soundId)) {\n      soundId = [soundId];\n    }\n    for (let id of soundId) {\n      if (this._idMap.has(id)) {\n        soundId = this._idMap.get(id) as string;\n      }\n      const channel = this._channels.get(channelName);\n      if (channel) {\n        id = this._verifySoundId(id);\n        // const audioInstance = new AudioInstance(id, channel, this);\n        const soundInstance = sound.find(id);\n        soundInstance.options = { ...options, autoPlay: false };\n        const audioInstance = channel.add(id, new AudioInstance(id, channel, this));\n        audioInstance.media = soundInstance.instances[0];\n        audioInstance.pause();\n      } else {\n        throw new Error(`Channel ${channelName} does not exist.`);\n      }\n    }\n  }\n\n  public stopAll(fade: boolean = false, duration: number = 1, props: TweenVars = {}) {\n    if (fade) {\n      // get all playing sounds\n      const playingSounds: IAudioInstance[] = [];\n      this._channels.forEach((channel) => {\n        channel.instances.forEach((instance) => {\n          if (instance.isPlaying) {\n            instance.storedVolume = instance.volume;\n            playingSounds.push(instance);\n          }\n        });\n      });\n      gsap.to(playingSounds, {\n        volume: 0,\n        duration,\n        ...props,\n        onComplete: () => {\n          playingSounds.forEach((instance) => {\n            instance.stop();\n            instance.volume = instance.storedVolume;\n          });\n        },\n      });\n    } else {\n      sound.stopAll();\n    }\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onSoundStarted', 'onSoundEnded', 'onMuted', 'onMasterVolumeChanged', 'onChannelVolumeChanged'];\n  }\n\n  private _verifySoundId(soundId: string): string {\n    const originalSoundId = soundId;\n    if (this._idMap.has(soundId)) {\n      return this._idMap.get(soundId) as string;\n    }\n    // try appending .mp3 or .ogg\n    if (!sound.exists(soundId)) {\n      // Logger.log(`Sound with ID ${soundId} does not exist. Trying different extensions.`);\n      if (sound.exists(soundId + '.mp3')) {\n        soundId += '.mp3';\n      } else if (sound.exists(soundId + '.ogg')) {\n        soundId += '.ogg';\n      } else if (sound.exists(soundId + '.wav')) {\n        soundId += '.wav';\n      } else {\n        soundId = originalSoundId;\n        let sound = Assets.get(soundId);\n        if (!sound) {\n          soundId = originalSoundId + '.mp3';\n          sound = Assets.get(soundId);\n        }\n        if (!sound) {\n          soundId = originalSoundId + '.ogg';\n          sound = Assets.get(soundId);\n        }\n        if (!sound) {\n          soundId = originalSoundId + '.wav';\n          sound = Assets.get(soundId);\n        }\n        if (sound) {\n          this._findAndAddFromManifest(soundId, sound);\n        } else {\n          throw new Error(`Sound with ID ${soundId} does not exist.`);\n        }\n      }\n    }\n    Logger.log(`Sound with id:${originalSoundId} is now mapped to id:${soundId}`);\n    this._idMap.set(soundId, soundId);\n    return soundId;\n  }\n\n  private _findAndAddFromManifest(soundId: string, sound: Sound) {\n    const manifest = this.app.manifest;\n    if (manifest === undefined || typeof manifest === 'string') {\n      throw new Error('Manifest is not available');\n    }\n    for (let i = 0; i < manifest.bundles.length; i++) {\n      const bundle = manifest.bundles[i];\n      if (!Array.isArray(bundle?.assets)) {\n        bundle.assets = [bundle.assets];\n      }\n      for (let j = 0; j < bundle.assets.length; j++) {\n        const asset = bundle.assets[j];\n        // detect sound assets by asset.src extension\n        const src = asset.src;\n        const filename = sound.url.split('/').pop() ?? '';\n        if (Array.isArray(src)) {\n          for (let s = 0; s < src.length; s++) {\n            const urlOrResolvedSrc = src[s];\n            let url: string;\n            if (typeof urlOrResolvedSrc !== 'string') {\n              url = urlOrResolvedSrc.src!;\n            } else {\n              url = urlOrResolvedSrc as string;\n            }\n            if (url.includes(filename)) {\n              this.add(asset);\n              return;\n            }\n          }\n        } else {\n          if (src?.includes(filename)) {\n            this.add(asset);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  private _setMuted(): void {\n    this._channels.forEach((channel) => {\n      channel.muted = this._muted;\n    });\n    if (this._muted) {\n      sound.muteAll();\n    } else {\n      sound.unmuteAll();\n    }\n    this.onMuted.emit(this._muted);\n  }\n\n  /**\n   * @private\n   */\n  private _setPaused(): void {\n    if (this._paused) {\n      sound.pauseAll();\n    } else {\n      sound.resumeAll();\n    }\n  }\n\n  /**\n   * Sets the volume of the specified channel.\n   * @param {ChannelName} channelName\n   * @param {number} volume\n   * @private\n   */\n  private _setChannelVolume(channelName: ChannelName, volume: number): void {\n    const channel = this._channels.get(channelName);\n    if (channel) {\n      channel.volume = volume;\n    } else {\n      throw new Error(`Channel ${channelName} does not exist.`);\n    }\n  }\n\n  /**\n   * Sound started event handler. Emit the onSoundStarted signal.\n   * @param {string} id\n   * @param {IAudioInstance} instance\n   * @param {ChannelName} channelName\n   * @private\n   */\n  private _soundStarted(id: string, instance: IAudioInstance, channelName: ChannelName): void {\n    // Logger.log(`${id} started in ${channelName} channel`);\n    this.onSoundStarted.emit({ id, instance, channelName });\n  }\n\n  /**\n   * Sound ended event handler. Emit the onSoundEnded signal.\n   * @param {string} id\n   * @param {IAudioInstance} instance\n   * @param {ChannelName} channelName\n   * @private\n   */\n  private _soundEnded(id: string, instance: IAudioInstance, channelName: ChannelName): void {\n    // Logger.log(`${id} ended in ${channelName} channel`);\n    this.onSoundEnded.emit({ id, instance, channelName });\n  }\n}\n","import {Assets} from 'pixi.js';\nimport {IApplication} from '../core';\nimport {Signal} from '../signals';\nimport type {ImportListItem, ImportListItemModule} from '../utils';\nimport {getDynamicModuleFromImportListItem, Logger} from '../utils';\nimport type {IPlugin} from './Plugin';\nimport {Plugin} from './Plugin';\n\n/**\n * Type definition for i18n dictionary.\n */\nexport type i18nDict = Record<string, any>;\n\n/**\n * Type definition for i18n translation parameters.\n */\nexport type i18nTParams = { variant?: number | 'random' } & Record<string, any>;\n\n/**\n * Type definition for i18n import list item.\n */\ntype i18nImportListItem<T> = {\n  id: string;\n  namedExport?: string;\n  options?: any;\n  module?: ImportListItemModule<T>;\n} & {\n  json?: string;\n};\n\n/**\n * Type definition for i18n options.\n */\nexport type i18nOptions = {\n  defaultLocale: string;\n  locales: string[];\n  loadAll: boolean;\n  files: i18nImportListItem<i18nDict>[];\n};\n\n/**\n * Default options for i18n module.\n */\nconst defaultOptions: i18nOptions = {\n  defaultLocale: 'en',\n  locales: ['en'],\n  loadAll: false,\n  files: [],\n};\n\n/**\n * Interface for i18n module.\n */\nexport interface Ii18nPlugin extends IPlugin {\n  readonly locale: string;\n  readonly locales: string[];\n  onLocaleChanged: Signal<(locale: string) => void>;\n\n  setLocale(localeId: string): Promise<string>;\n\n  loadLocale(localeId: string): Promise<void>;\n\n  t(key: string, params?: i18nTParams, locale?: string): string;\n\n  parse(input: string, locale?: string): string;\n}\n\n/**\n * i18n module class.\n */\nexport class i18nPlugin extends Plugin implements Ii18nPlugin {\n  public readonly id = 'i18n';\n  public onLocaleChanged: Signal<(locale: string) => void> = new Signal<(locale: string) => void>();\n\n  private _dicts: Record<string, i18nDict> = {};\n  private _options: i18nOptions;\n\n  private _locale: string;\n\n  /**\n   * Getter for locale.\n   */\n  get locale(): string {\n    return this._locale;\n  }\n\n  get locales(): string[] {\n    return this._options.locales;\n  }\n\n  /**\n   * Initializes the i18n module.\n   * sets the default locale and loads the locale files.\n   * @param app The application instance.\n   * @param options The i18n options.\n   * @returns Promise<void>\n   */\n  public async initialize(app: IApplication, options: Partial<i18nOptions>): Promise<void> {\n    super.initialize(app);\n    this._options = { ...defaultOptions, ...options };\n    this._locale = this._options.defaultLocale;\n    if (this._options.loadAll && this._options.files.length > 0) {\n      const files = this._options.files.filter((file) => this._options.locales.includes(file.id));\n      for (const file of files) {\n        await this.loadLocale(file.id);\n      }\n    } else if (this._options.files.length > 0) {\n      await this.loadLocale(this._locale);\n    }\n  }\n\n  /**\n   * Sets the locale.\n   * If the locale is not loaded, it will load it first.\n   * @param localeId The locale id to set.\n   * @returns Promise<string>\n   */\n\n  async setLocale(localeId: string) {\n    this._locale = localeId;\n    await this._loadAndSetLocale(localeId);\n    return this._locale;\n  }\n\n  /**\n   * Translates a key into a string.\n   * If the key is not found, it will return an empty string.\n   * If the key is found, it will replace any placeholders in the string with the values from the params object.\n   * If the key contains a variant, it will select a random variant if the variant param is set to 'random'.\n   * If the key contains a number variant, it will select the variant based on the variant param.\n   * @param key The key to translate.\n   * @param params The parameters to replace in the string.\n   * @param locale The locale to use for translation.\n   * @returns The translated string.\n   */\n\n  t(key: string, params?: i18nTParams, locale: string = this._locale): string {\n    const dict = this._dicts[locale];\n    if (!dict) {\n      Logger.error(`i18n:: No dictionary loaded for current locale: ${locale}`);\n      return '';\n    }\n    let str = dict[key];\n\n    if (!str) {\n      Logger.error(`i18n:: No result found for the key ${key} in the locale: ${this._locale}`);\n      return '';\n    }\n\n    if (params) {\n      if (typeof params.variant === 'number' || params.variant === 'random') {\n        const match = /\\[(.*?)\\]/.exec(str);\n        if (match) {\n          // Split the string by the \"|\" character to get an array of variations.\n          const items = match[1].split('|');\n\n          // Get the selected variant based on the \"variation\" param.\n          const num = params.variant === 'random' ? Math.floor(Math.random() * items.length) : params.variant;\n\n          // Replace the original string with the selected variant\n          str = str.replace(match[0], items[num]);\n        }\n      }\n\n      // Iterate over all params to replace placeholders in the string.\n      for (const f in params) {\n        // Create a regular expression to match the placeholder for the current param.\n        const re = new RegExp(`{${f}}`, 'g');\n\n        //Replace all occurences of the placeholder with the value of the param.\n        str = str.replace(re, String(params[f]));\n      }\n    }\n\n    /**\n     * Return the final translated string.\n     */\n    return str;\n  }\n\n  /**\n   * Parses the input string and replaces anything in between {} braces, assuming it is a key in the dictionary.\n   * @param {string} input\n   * @param locale\n   * @returns {string}\n   */\n  parse(input: string, locale: string = this._locale): string {\n    const dict = this._dicts[locale];\n    if (!dict) {\n      Logger.error(`i18n:: No dictionary loaded for current locale: ${this._locale}`);\n      return '';\n    }\n    let str = input;\n    const matches = str.match(/{(.*?)}/g);\n    if (matches) {\n      matches.forEach((match) => {\n        const key = match.slice(1, -1);\n        if (dict[key]) {\n          str = str.replace(match, dict[key]);\n        }\n      });\n    }\n    return str;\n  }\n\n  /**\n   * Loads a locale.\n   * @param localeId The locale id to load.\n   * @returns Promise<void>\n   */\n  async loadLocale(localeId: string) {\n    const file = this._options.files.find((file) => localeId === file.id);\n    if (!file) {\n      Logger.error(`i18n:: Could not find locale file for ${localeId}`);\n      return;\n    }\n    this._dicts[localeId] = file.json\n      ? await Assets.load(file.json)\n      : await getDynamicModuleFromImportListItem(file as ImportListItem<i18nDict>);\n  }\n\n  protected getCoreFunctions(): string[] {\n    return ['t', 'setLocale'];\n  }\n\n  protected getCoreSignals(): string[] {\n    return ['onLocaleChanged'];\n  }\n\n  /**\n   * Loads and sets a locale.\n   * If the locale is not loaded, it will load it first.\n   * @param localeId The locale id to load and set.\n   */\n  private async _loadAndSetLocale(localeId: string) {\n    if (!this._dicts[localeId]) {\n      await this.loadLocale(localeId);\n    }\n    this.onLocaleChanged.emit(localeId);\n  }\n}\n","import {Graphics} from 'pixi.js';\nimport type {IApplication} from '../core';\nimport {Container} from '../display';\nimport type {Size} from '../utils';\nimport type {IPlugin} from './Plugin';\nimport {Plugin} from './Plugin';\n\n/**\n * Interface for Resizer module.\n */\nexport interface IResizerPlugin extends IPlugin {\n  size: Size;\n\n  resize(): void;\n}\n\n/**\n * Type definition for Resizer options.\n */\nexport type ResizerPluginOptions = {\n  autoScroll: boolean;\n  useAspectRatio: boolean;\n  fixed: boolean;\n  minSize: { width: number; height: number };\n  maxSize: { width: number; height: number };\n  debug: boolean;\n};\n\n/**\n * Default options for Resizer module.\n */\nconst defaultOptions: ResizerPluginOptions = {\n  autoScroll: false,\n  useAspectRatio: false,\n  fixed: false,\n  minSize: { width: 0, height: 0 },\n  maxSize: { width: 0, height: 0 },\n  debug: false,\n};\n\nexport class ResizerPlugin extends Plugin implements IResizerPlugin {\n  public readonly id = 'resizer';\n  private _options: ResizerPluginOptions;\n  private _debugContainer: Container;\n  private _gfx: Graphics;\n\n  private _size: Size;\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Initializes the Resizer module.\n   */\n  async initialize(_app: IApplication, options: Partial<ResizerPluginOptions> = {}) {\n    this._options = { ...defaultOptions, ...options };\n  }\n\n  /**\n   * Post-initialization of the Resizer module.\n   * when this is called, the renderer is already created, and the dom element has been appended\n   */\n  async postInitialize() {\n    this.resize();\n  }\n\n  /**\n   * Resizes the application based on window size and module options.\n   */\n\n  resize() {\n    let screenWidth = window.innerWidth;\n    let screenHeight = window.innerHeight;\n\n    const el = this.app.renderer.canvas?.parentElement;\n    const bounds = el?.getBoundingClientRect();\n\n    if (bounds) {\n      screenWidth = bounds.width;\n      screenHeight = bounds.height;\n    }\n\n    const minWidth = this._options.minSize.width;\n    const minHeight = this._options.minSize.height;\n\n    // Calculate renderer and canvas sizes based on current dimensions\n    const scaleX = screenWidth < minWidth ? minWidth / screenWidth : 1;\n    const scaleY = screenHeight < minHeight ? minHeight / screenHeight : 1;\n    const scale = scaleX > scaleY ? scaleX : scaleY;\n\n    const width = screenWidth * scale;\n    const height = screenHeight * scale;\n    // Update canvas style dimensions and scroll window up to avoid issues on mobile resize\n    this.app.renderer.canvas.style.width = `${screenWidth}px`;\n    this.app.renderer.canvas.style.height = `${screenHeight}px`;\n\n    if (this._options.autoScroll) {\n      window?.scrollTo(0, 0);\n    }\n\n    // Update renderer and navigation screens dimensions\n    this.app.renderer.resize(width, height);\n    this._size = { width, height };\n\n    if (this._options.debug) {\n      this._drawDebug();\n    }\n  }\n\n  /**\n   * Draws debug information if debug option is enabled.\n   */\n  private _drawDebug() {\n    if (!this._debugContainer) {\n      this._debugContainer = this.app.stage.addChild(new Container());\n      this._gfx = this._debugContainer.add.graphics();\n    }\n\n    this._gfx.clear();\n    this._gfx.rect(0, 0, this._size.width, this._size.height);\n    this._gfx.stroke({ width: 4, color: 0x000fff });\n  }\n}\n","import type { ImportList } from '../utils';\nimport type { IPlugin } from './Plugin';\nimport { AssetsPlugin } from './AssetsPlugin';\nimport { WebEventsPlugin } from './WebEventsPlugin';\nimport { SceneManagerPlugin } from './SceneManagerPlugin';\nimport { InputPlugin } from './input';\nimport { KeyboardPlugin } from './KeyboardPlugin';\nimport { FocusManagerPlugin } from './focus';\nimport { PopupManagerPlugin } from './PopupManagerPlugin';\nimport { AudioManagerPlugin } from './audio';\nimport { i18nPlugin } from './i18nPlugin';\nimport { ResizerPlugin } from './ResizerPlugin';\n\nexport const defaultPlugins: ImportList<IPlugin> = [\n  {\n    id: 'assets',\n    module: AssetsPlugin,\n    namedExport: 'AssetsPlugin',\n  },\n  {\n    id: 'webEvents',\n    module: WebEventsPlugin,\n    namedExport: 'WebEventsPlugin',\n  },\n  {\n    id: 'scenes',\n    module: SceneManagerPlugin,\n    namedExport: 'SceneManagerPlugin',\n  },\n  {\n    id: 'input',\n    module: InputPlugin,\n    namedExport: 'InputPlugin',\n  },\n  {\n    id: 'keyboard',\n    module: KeyboardPlugin,\n    namedExport: 'KeyboardPlugin',\n  },\n  {\n    id: 'focus',\n    module: FocusManagerPlugin,\n    namedExport: 'FocusManagerPlugin',\n  },\n  {\n    id: 'popups',\n    module: PopupManagerPlugin,\n    namedExport: 'PopupManagerPlugin',\n  },\n  {\n    id: 'audio',\n    module: AudioManagerPlugin,\n    namedExport: 'AudioManagerPlugin',\n  },\n  {\n    id: 'i18n',\n    module: i18nPlugin,\n    namedExport: 'i18nPlugin',\n  },\n  {\n    id: 'resizer',\n    module: ResizerPlugin,\n    namedExport: 'ResizerPlugin',\n  },\n] as const;\n","import type { AssetInitOptions, AssetsManifest, DestroyOptions, Renderer, RendererDestroyOptions } from 'pixi.js';\nimport { Application as PIXIPApplication, Assets, isMobile, Point } from 'pixi.js';\nimport type {\n  IFocusManagerPlugin,\n  Ii18nPlugin,\n  IInputPlugin,\n  IKeyboardPlugin,\n  IPlugin,\n  IPopupManagerPlugin,\n} from './plugins';\nimport {\n  Action,\n  ActionContext,\n  ActionSignal,\n  IAssetsPlugin,\n  IAudioManagerPlugin,\n  IResizerPlugin,\n  ISceneManagerPlugin,\n  IWebEventsPlugin,\n} from './plugins';\nimport { Signal } from './signals';\nimport type { IStorageAdapter, IStore } from './store';\nimport { Store } from './store';\nimport type { ImportListItem, Size } from './utils';\nimport { bindAllMethods, getDynamicModuleFromImportListItem, isDev, isPromise, Logger } from './utils';\nimport type { AppConfig, IApplication, IApplicationOptions, ICoreFunctions, ICoreSignals } from './core';\nimport { coreFunctionRegistry, coreSignalRegistry } from './core';\nimport { defaultPlugins } from './plugins/defaults';\nimport type { IVoiceOverPlugin } from './plugins/audio/VoiceOverPlugin';\nimport type { ICaptionsPlugin } from './plugins/captions';\n\nconst defaultApplicationOptions: Partial<IApplicationOptions> = {\n  antialias: false,\n  autoStart: true,\n  resizeToContainer: false,\n  backgroundColor: 0x0,\n  backgroundAlpha: 1,\n  clearBeforeRender: false,\n  context: null,\n  eventFeatures: undefined,\n  eventMode: undefined,\n  hello: false,\n  powerPreference: 'high-performance',\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  resizeTo: undefined,\n  sharedTicker: true,\n  view: undefined,\n  autoDensity: false,\n  resolution: window.devicePixelRatio > 1.5 ? 2 : 1,\n  // dill pixel options\n  useStore: true,\n  useSpine: false,\n  useVoiceover: true,\n  storageAdapters: [],\n  plugins: [],\n  scenes: [],\n  defaultSceneLoadMethod: 'immediate',\n  assets: {\n    manifest: './assets.json',\n  },\n};\n\nexport class Application<R extends Renderer = Renderer> extends PIXIPApplication<R> implements IApplication {\n  public static containerElement: HTMLElement;\n  protected static instance: IApplication;\n  __dill_pixel_method_binding_root = true;\n  // config\n  public config: Partial<IApplicationOptions>;\n  public manifest: string | AssetsManifest | undefined;\n  public onPause = new Signal<() => void>();\n  public onResume = new Signal<() => void>();\n  // signals\n  public onResize = new Signal<(size: Size) => void>();\n  // plugins\n  protected _plugins: Map<string, IPlugin> = new Map();\n  // default plugins\n  protected _assetManager: IAssetsPlugin;\n  protected _sceneManager: ISceneManagerPlugin;\n  protected _webEventsManager: IWebEventsPlugin;\n  protected _keyboardManager: IKeyboardPlugin;\n  protected _focusManager: IFocusManagerPlugin;\n  protected _popupManager: IPopupManagerPlugin;\n  protected _audioManager: IAudioManagerPlugin;\n  protected _voiceoverPlugin: IVoiceOverPlugin;\n  protected _captionsPlugin: ICaptionsPlugin;\n  protected _actions: ActionSignal;\n\n  constructor() {\n    super();\n    bindAllMethods(this);\n  }\n\n  protected _appVersion: string | number;\n\n  public get appVersion() {\n    try {\n      this._appVersion = __DILL_PIXEL_APP_VERSION;\n    } catch (e) {\n      this._appVersion = -1;\n    }\n\n    return this._appVersion;\n  }\n\n  protected _appName: string;\n\n  public get appName(): string {\n    if (!this._appName) {\n      try {\n        this._appName = __DILL_PIXEL_APP_NAME;\n      } catch (e) {\n        this._appName = 'n/a';\n      }\n    }\n    return this._appName;\n  }\n\n  protected _i18n: Ii18nPlugin;\n\n  public get i18n(): Ii18nPlugin {\n    if (!this._i18n) {\n      this._i18n = this.getPlugin<Ii18nPlugin>('i18n');\n    }\n    return this._i18n;\n  }\n\n  protected _resizer: IResizerPlugin;\n\n  public get resizer(): IResizerPlugin {\n    if (!this._resizer) {\n      this._resizer = this.getPlugin<IResizerPlugin>('resizer');\n    }\n    return this._resizer;\n  }\n\n  // input\n  protected _input: IInputPlugin;\n\n  public get input(): IInputPlugin {\n    if (!this._input) {\n      this._input = this.getPlugin<IInputPlugin>('input');\n    }\n    return this._input;\n  }\n\n  // store\n  protected _store: IStore;\n\n  public get store(): IStore {\n    return this._store;\n  }\n\n  // size\n  protected _center = new Point(0, 0);\n\n  public get center(): Point {\n    return this._center;\n  }\n\n  public get assets(): IAssetsPlugin {\n    if (!this._assetManager) {\n      this._assetManager = this.getPlugin<IAssetsPlugin>('assets');\n    }\n    return this._assetManager;\n  }\n\n  public get scenes(): ISceneManagerPlugin {\n    if (!this._sceneManager) {\n      this._sceneManager = this.getPlugin<ISceneManagerPlugin>('scenes');\n    }\n    return this._sceneManager;\n  }\n\n  public get webEvents(): IWebEventsPlugin {\n    if (!this._webEventsManager) {\n      this._webEventsManager = this.getPlugin<IWebEventsPlugin>('webEvents');\n    }\n    return this._webEventsManager;\n  }\n\n  public get keyboard(): IKeyboardPlugin {\n    if (!this._keyboardManager) {\n      this._keyboardManager = this.getPlugin<IKeyboardPlugin>('keyboard');\n    }\n    return this._keyboardManager;\n  }\n\n  public get focus(): IFocusManagerPlugin {\n    if (!this._focusManager) {\n      this._focusManager = this.getPlugin<IFocusManagerPlugin>('focus');\n    }\n    return this._focusManager;\n  }\n\n  get size() {\n    return this.resizer.size;\n  }\n\n  public get popups(): IPopupManagerPlugin {\n    if (!this._popupManager) {\n      this._popupManager = this.getPlugin<IPopupManagerPlugin>('popups');\n    }\n    return this._popupManager;\n  }\n\n  public get audio(): IAudioManagerPlugin {\n    if (!this._audioManager) {\n      this._audioManager = this.getPlugin<IAudioManagerPlugin>('audio');\n    }\n    return this._audioManager;\n  }\n\n  public get actionContext(): string | ActionContext {\n    return this.input.context;\n  }\n\n  public set actionContext(context: string | ActionContext) {\n    this.input.context = context;\n  }\n\n  public get voiceover(): IVoiceOverPlugin {\n    if (!this._voiceoverPlugin) {\n      this._voiceoverPlugin = this.getPlugin<IVoiceOverPlugin>('voiceover');\n    }\n    return this._voiceoverPlugin;\n  }\n\n  public get captions(): ICaptionsPlugin {\n    if (!this._captionsPlugin) {\n      this._captionsPlugin = this.getPlugin<ICaptionsPlugin>('captions');\n    }\n    return this._captionsPlugin;\n  }\n\n  get isMobile() {\n    return isMobile.any;\n  }\n\n  get isTouch() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  get signal(): ICoreSignals {\n    return coreSignalRegistry;\n  }\n\n  get func(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  get exec(): ICoreFunctions {\n    return coreFunctionRegistry;\n  }\n\n  private get views(): any[] {\n    return [this.scenes.view, this.popups.view, this.captions.view];\n  }\n\n  public static getInstance<T extends Application = Application>(): T {\n    return Application.instance as T;\n  }\n\n  /**\n   * Destroy the application\n   * This will destroy all plugins and the store\n   * @param {RendererDestroyOptions} rendererDestroyOptions\n   * @param {DestroyOptions} options\n   */\n  public destroy(rendererDestroyOptions?: RendererDestroyOptions, options?: DestroyOptions) {\n    this._plugins.forEach((plugin) => {\n      plugin.destroy();\n    });\n    this.store.destroy();\n    super.destroy(rendererDestroyOptions, options);\n  }\n\n  public setContainer(container: HTMLElement) {\n    if (!Application.containerElement) {\n      Application.containerElement = container;\n    }\n  }\n\n  public async initialize(config: AppConfig): Promise<IApplication> {\n    if (Application.instance) {\n      throw new Error('Application is already initialized');\n    }\n    Application.instance = this;\n    this.config = Object.assign({ ...defaultApplicationOptions }, config);\n    if (config.container) {\n      Application.containerElement = config.container;\n    }\n    // initialize the logger\n    Logger.initialize(this.config.logger);\n    await this.boot(this.config);\n    await this.preInitialize(this.config);\n    await this.initAssets();\n    // initialize the pixi application\n    await this.init(this.config);\n\n    // register the default plugins\n    await this.registerDefaultPlugins();\n\n    if (this.config.plugins && this.config.plugins.length > 0) {\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        const listItem = this.config.plugins[i];\n        if (listItem && listItem?.autoLoad !== false) {\n          await this.loadPlugin(listItem);\n        }\n      }\n    }\n\n    // register the applications custom plugins\n    await this.registerPlugins();\n\n    // add the store if it's enabled\n    if (this.config.useStore) {\n      this._store = new Store();\n      this._store.initialize(this);\n\n      // register any storage adapters passed through the config\n      if (this.config.storageAdapters && this.config.storageAdapters.length > 0) {\n        for (let i = 0; i < this.config.storageAdapters.length; i++) {\n          const listItem = this.config.storageAdapters[i];\n          if (this.store.hasAdapter(listItem.id)) {\n            Logger.error(`Storage Adapter with id \"${listItem.id}\" already registered. Not registering.`);\n            continue;\n          }\n          const storageAdapter = await getDynamicModuleFromImportListItem(listItem);\n          await this.registerStorageAdapter(new storageAdapter(listItem.id), listItem.options);\n        }\n      }\n      // also call the registerStorageAdapters method to allow for custom storage adapters to be registered\n      await this.registerStorageAdapters();\n    }\n\n    await this._setup(); // internal\n    await this.setup();\n    await this.loadDefaultScene();\n\n    // focus the canvas\n    this.renderer.canvas.focus();\n\n    if (this.config.container) {\n      this.config.container.classList.add('loaded');\n    }\n\n    // return the Application instance to the create method, if needed\n    return Application.instance;\n  }\n\n  public getPlugin<T extends IPlugin>(pluginName: string): T {\n    const plugin = this._plugins.get(pluginName) as T;\n    if (!plugin) {\n      Logger.error(`Plugin with name \"${pluginName}\" not found.`);\n    }\n    return plugin;\n  }\n\n  async postInitialize(): Promise<void> {\n    (globalThis as any).__PIXI_APP__ = this;\n    this._plugins.forEach((plugin) => {\n      plugin.postInitialize(this);\n    });\n\n    this.webEvents.onVisibilityChanged.connect((visible) => {\n      if (visible) {\n        this.audio.restore();\n      } else {\n        this.audio.suspend();\n      }\n    });\n\n    void this._resize();\n  }\n\n  public actions<T = any>(action: Action | string): ActionSignal<T> {\n    return this.input.actions(action);\n  }\n\n  public getUnloadedPlugin(id: string): ImportListItem<IPlugin> | undefined {\n    return this.config.plugins?.find((plugin) => plugin.id === id);\n  }\n\n  async loadPlugin(listItem: ImportListItem, isDefault: boolean = false) {\n    if (this._plugins.has(listItem.id)) {\n      return await this.registerPlugin(this._plugins.get(listItem.id)!, listItem.options);\n    }\n    const plugin = await getDynamicModuleFromImportListItem(listItem);\n    const pluginInstance = new plugin(listItem.id);\n    if (pluginInstance.id !== listItem.id) {\n      pluginInstance.id = listItem.id;\n    }\n    let opts = listItem.options;\n    if (isDefault && !opts) {\n      opts = this.config[pluginInstance.id as keyof IApplicationOptions];\n    }\n    return await this.registerPlugin(pluginInstance, opts);\n  }\n\n  public sendAction(action: string, data?: any) {\n    this.input.sendAction(action, data);\n  }\n\n  /**\n   * Get a storage adapter by id\n   * @param {string} adapterId\n   * @returns {IStorageAdapter}\n   */\n  public getStorageAdapter(adapterId: string): IStorageAdapter {\n    return this.store.getAdapter(adapterId);\n  }\n\n  /**\n   * app hasn't been initialized yet\n   * @protected\n   * @example boot(){\n   *     console.log(this.appVersion);\n   * }\n   * returns {Promise<void> | void}\n   */\n  protected boot(config?: Partial<IApplicationOptions>): Promise<void> | void;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected async boot(config?: Partial<IApplicationOptions>): Promise<void> {\n    console.log(\n      `%c App info - %c${this.appName} | %cv${this.appVersion} `,\n      `background: rgba(31, 41, 55, 1); color: #74b64c`,\n      `background: rgba(31, 41, 55, 1); color: #74b64c; font-weight:bold`,\n      `background: rgba(31, 41, 55, 1); color: #74b64c; font-weight:bold`,\n    );\n  }\n\n  /**\n   * Pre-initialize the application\n   * This is called before the application is initialized\n   * should register any pixi extensions, etc\n   * @param {Partial<IApplicationOptions>} config\n   * @returns {Promise<void>}\n   * @protected\n   */\n  protected async preInitialize(config: Partial<IApplicationOptions>): Promise<void> {\n    if (config.useSpine) {\n      await this.loadPlugin({\n        id: 'SpinePlugin',\n        module: () => import('./plugins/spine/SpinePlugin'),\n        namedExport: 'SpinePlugin',\n      });\n    }\n  }\n\n  // plugins\n  protected async registerPlugin(plugin: IPlugin, options?: any) {\n    if (this._plugins.has(plugin.id)) {\n      Logger.error(`Plugin with id \"${plugin.id}\" already registered. Not registering.`);\n      return plugin.initialize(this, options);\n    }\n    plugin.registerCoreFunctions();\n    plugin.registerCoreSignals();\n    this._plugins.set(plugin.id, plugin);\n    return plugin.initialize(this, options);\n  }\n\n  protected async registerDefaultPlugins() {\n    for (let i = 0; i < defaultPlugins.length; i++) {\n      const listItem = defaultPlugins[i];\n      await this.loadPlugin(listItem, true);\n    }\n    const showStats = this.config.showStats === true || (isDev && this.config.showStats !== false);\n    if (showStats) {\n      await this.loadPlugin({\n        id: 'stats',\n        module: () => import('./plugins/StatsPlugin'),\n        namedExport: 'StatsPlugin',\n      });\n    }\n    if (this.config.useVoiceover) {\n      await this.loadPlugin({\n        id: 'voiceover',\n        module: () => import('./plugins/audio/VoiceOverPlugin'),\n        namedExport: 'VoiceOverPlugin',\n        options: this.config['voiceover' as keyof IApplicationOptions] || undefined,\n      });\n      await this.loadPlugin({\n        id: 'captions',\n        module: () => import('./plugins/captions/CaptionsPlugin'),\n        namedExport: 'CaptionsPlugin',\n        options: this.config['captions' as keyof IApplicationOptions] || undefined,\n      });\n    }\n  }\n\n  protected async registerPlugins() {\n    // override this method to register custom plugins,\n    // or do it in the app config during bootstrap\n    return Promise.resolve();\n  }\n\n  // storage\n  protected async registerStorageAdapters() {\n    // override this method to register custom storage adapters,\n    // or do it in the app config during bootstrap\n    return Promise.resolve();\n  }\n\n  protected async registerStorageAdapter(adapter: IStorageAdapter, adapterOptions: any): Promise<any> {\n    return this.store.registerAdapter(adapter, adapterOptions);\n  }\n\n  /**\n   * This is called after the application is initialized\n   * You can be sure that\n   * - all plugins are registered\n   * - the store is created, with all storage adapters registered\n   * @protected\n   */\n  protected setup(): Promise<void> | void;\n\n  protected async setup(): Promise<void> {\n    // override me to set up application specific stuff\n  }\n\n  protected async initAssets(): Promise<void> {\n    const opts: Partial<AssetInitOptions> = this.config.assets?.initOptions || {};\n    if (this.config.assets?.manifest) {\n      let manifest = this.config.assets.manifest || opts.manifest;\n      if (isPromise(manifest)) {\n        manifest = await manifest;\n      }\n      opts.manifest = manifest;\n    }\n    this.manifest = opts.manifest;\n    await Assets.init(opts);\n  }\n\n  protected async loadDefaultScene(): Promise<void> {\n    return this.scenes.loadDefaultScene();\n  }\n\n  private async _resize() {\n    this.resizer.resize();\n    this._center.set(this.size.width * 0.5, this.size.height * 0.5);\n    this.ticker.addOnce(() => {\n      this.views.forEach((view) => {\n        view.position.set(this._center.x, this._center.y);\n      });\n      this.onResize.emit(this.size);\n    });\n  }\n\n  /**\n   * Called after the application is initialized\n   * Here we add application specific signal listeners, etc\n   * @returns {Promise<void>}\n   * @private\n   */\n  private async _setup(): Promise<void> {\n    // register for PIXI DevTools extension\n    if (isDev) {\n      (globalThis as any).__PIXI_APP__ = this;\n    }\n\n    // connect onResize signal\n    this.webEvents.onResize.connect(this._resize, -1);\n\n    // scene manager\n    this.scenes.view.label = 'SceneManager';\n    this.stage.addChild(this.scenes.view);\n\n    // popup manager\n    this.stage.addChild(this.popups.view);\n\n    // focus manager\n    this.focus.view.label = 'FocusManager';\n    this.stage.addChild(this.focus.view);\n\n    void this._resize();\n    // is touch device\n    return Promise.resolve();\n  }\n}\n"],"names":["Collector_1","Collector","signal","args","CollectorArray_1","require$$0","CollectorArray","result","CollectorLast_1","CollectorLast","CollectorUntil0_1","CollectorUntil0","CollectorWhile0_1","CollectorWhile0","SignalConnection","SignalConnectionImpl","link","parentCleanup","enable","SignalLink_1","SignalLink","prev","next","order","flag","callback","after","Signal_1","SignalConnection_1","require$$1","Signal$1","collector","Signal","SignalConnections_1","SignalConnections","connection","exports","require$$2","require$$3","require$$4","require$$5","require$$6","TsSignal","wrapper","wrapperConnection","times","numTimes","env","isDev","isProduction","capitalize","str","capitalizeWords","colors","_Logger","mode","type","Logger","delay","seconds","resolve","isPromise","value","createQueue","promises","Queue","currentFunction","error","isClass","getDynamicModuleFromImportListItem","item","module","ctor","resolvePointLike","position","asPoint","x","y","Point","obj","resolveSizeLike","size","getSheetLikeString","sheet","setObjectName","object","texture","debounce","func","wait","timeoutId","getPreviousMapEntry","map","currentKey","previous","entry","getLastMapEntry","clamp","pValue","pMin","pMax","lerp","pPerc","pluck","keys","acc","key","omitKeys","keysToOmit","bindMethods","instance","methodNames","methodName","method","getInstanceMethodNames","excludePrefixes","excludeMethodNames","prototype","filteredMethodNames","propertyName","ownDescriptor","prefix","bindAllMethods","checkAndInvokeMethod","methodArgs","resolvePadding","paddingNum","ensurePadding","padding","paddingAsPointLike","isRetina","isMobile","PIXIUtilsIsMobile","Store","adapter","adapterOptions","adapterId","data","awaitSave","_a","i","aKey","shouldAwait","app","coreSignalRegistry","coreFunctionRegistry","version","pixiVersion","sayHello","hello","DEFAULT_GAME_CONTAINER_ID","createContainer","id","container","create","config","ApplicationClass","Application","domElement","speak","el","Plugin","_app","_options","f","fName","s","sName","StorageAdapter","_key","_data","_rest","LocalStorageAdapter","options","detaultAssetPreferences","imageExtensions","getAssetList","assets","asset","alias","_b","src","AssetsPlugin","Assets","bundles","scene","_d","_c","background","filteredAssets","bundle","_e","urls","url","aliases","progress","WebEventsPlugin","screenWidth","screenHeight","SceneManagerPlugin","Container","_f","sceneIdOrLoadSceneConfig","newSceneId","sceneItem","plugin","pluginListItem","SceneClass","icon","defaultOption","option","e","sceneId","hash","InputController","ActionContext","Action","_Action","defaultActions","defaultOptions","InputPlugin","context","controller","gamepad","action","actionId","inputController","gamepadId","event","KeyboardPlugin","eventType","signalMap","FocusOutliner","Graphics","focusTarget","pos","focusPos","fp","FocusLayer","focusable","isDefault","index","a","b","FocusManagerPlugin","layerId","layer","idx","layerIds","newLayers","setAsCurrent","focusables","newLayer","removeTopLayerIfUndefined","nextLayerId","reverse","currentLayer","nextTarget","setInactiveOnNull","oldFocusTarget","Animated","Base","animationProps","tween","gsap","t","sequences","sequence","fromProps","toProps","duration","intensity","origX","repeat","animationEntity","Focusable","Interactive","eventName","signalName","mixin","base","mixins","accumulator","current","WithSignals","TextPropsKeys","resolveUnknownKeys","props","entity","resolveTexture","assetAsString","Texture","spriteSheet","textures","linkedSheet","Sprite","resolvePosition","resolveScale","scale","resolveAnchor","anchor","anchorPoint","resolvePivot","pivot","pivotPoint","defaultFactoryMethods","scaleX","scaleY","rest","Text","unknowns","BitmapText","ButtonConfigKeys","otherProps","Button","FlexContainerConfigKeys","FlexContainer","UICanvasConfigKeys","UICanvas","SpineAnimation","createFactoryMethods","methods","addToStage","factoryMethods","FactoryContainer","extensions","PIXIContainer","_Factory","Factory","_Container","__config","ticker","Scene","_Button","enabled","callbackId","textureId","Camera","target","offset","deltaX","deltaY","newPivotX","newPivotY","globalPosition","spritePosition","posXModifier","posYModifier","offsetX","offsetY","tMinX","tMaxX","tMinY","tMaxY","currentScaleX","currentScaleY","interpolatedScaleX","interpolatedScaleY","skipLerp","currentPivotX","currentPivotY","interpolatedPivotX","interpolatedPivotY","CameraController","camera","interactiveArea","detail","currentPosition","_FlexContainer","defaultConfig","children","child","newChild","actualChild","bounds","canHaveEndlessWidthOrHeight","width","height","gap","flexDirection","flexWrap","alignItems","justifyContent","layoutProps","rowHeight","columnWidth","nextRowY","nextColumnX","newLayoutProps","items","lineItems","lineStart","shouldWrap","childRef","handleWrap","updateLayoutVariables","getNextX","currentX","getNextY","currentY","handleJustification","lineEnd","direction","extraSpace","handleAlignment","totalHeight","_UICanvas","beginIndex","endIndex","_size","childObj","settings","Rectangle","displayWidth","displayHeight","firstChild","childWidth","childHeight","defaultBackingConfig","defaultPopupConfig","Popup","finalConfig","backingConfig","gfx","backingWrapper","backing","_SpineAnimation","trackIndex","name","loop","tracklndex","PopupManagerPlugin","popup","animate","AudioChannel","manager","sound","AudioInstance","channel","volume","time","setInstance","getInstance","WebAudioUtils","param","HTMLAudioContext","EventEmitter","_filters","_HTMLAudioInstance","parent","currentTime","paused","media","source","speed","muted","global","globalVolume","soundVolume","instanceVolume","pausedReal","start","end","Ticker","HTMLAudioInstance","HTMLAudioMedia","onLoad","removeListeners","onAbort","onError","message","SoundSprite","complete","mimes","supported","validateFormats","typeOverrides","overrides","audio","formats","no","ext","canByExt","canByType","WebAudioInstance","filters","filter","gain","force","now","delta","soundLength","err","Filterable","input","output","prevFilter","_WebAudioNodes","audioContext","bufferSource","analyser","orig","WebAudioNodes","WebAudioMedia","buffer","response","DOMAdapter","arrayBuffer","audioBufferReadyFn","_Sound","file","path","results","sprite","reject","resolve2","len","Sound","WebAudioContext","win","ctx","compressor","state","handleError","SoundLibrary","filtersAll","sourceOptions","options2","legacy","autoPause","assert","exists","getAlias","soundAsset","ExtensionType","LoaderParserPriority","mime","sound2","_sound","extensions$1","AudioManagerPlugin","channelName","manifest","bundleName","soundId","audioInstance","mediaInstance","fadeProps","outSoundId","inSoundId","crossFadeProps","stopOnComplete","soundInstance","fade","playingSounds","originalSoundId","j","filename","urlOrResolvedSrc","i18nPlugin","files","localeId","params","locale","dict","match","num","re","matches","ResizerPlugin","minWidth","minHeight","defaultPlugins","defaultApplicationOptions","PIXIPApplication","rendererDestroyOptions","listItem","storageAdapter","pluginName","visible","pluginInstance","opts","view"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75]}