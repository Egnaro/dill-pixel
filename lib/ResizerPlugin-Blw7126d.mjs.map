{"version":3,"file":"ResizerPlugin-Blw7126d.mjs","sources":["../src/plugins/ResizerPlugin.ts"],"sourcesContent":["import {Graphics} from 'pixi.js';\nimport {IApplication} from '../core/Application';\nimport {Container} from '../display/Container';\nimport {Size} from '../utils/types';\nimport {IPlugin, Plugin} from './Plugin';\n\n/**\n * Interface for Resizer module.\n */\nexport interface IResizerPlugin extends IPlugin {\n  size: Size;\n\n  resize(): void;\n}\n\n/**\n * Type definition for Resizer options.\n */\nexport type ResizerPluginOptions = {\n  autoScroll: boolean;\n  useAspectRatio: boolean;\n  fixed: boolean;\n  minSize: { width: number; height: number };\n  maxSize: { width: number; height: number };\n  debug: boolean;\n};\n\n/**\n * Default options for Resizer module.\n */\nconst defaultOptions: ResizerPluginOptions = {\n  autoScroll: false,\n  useAspectRatio: false,\n  fixed: false,\n  minSize: { width: 0, height: 0 },\n  maxSize: { width: 0, height: 0 },\n  debug: false,\n};\n\nexport class ResizerPlugin extends Plugin implements IResizerPlugin {\n  public readonly id = 'resizer';\n  private _options: ResizerPluginOptions;\n  private _debugContainer: Container;\n  private _gfx: Graphics;\n\n  private _size: Size;\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Initializes the Resizer module.\n   */\n  async initialize(_app: IApplication, options: Partial<ResizerPluginOptions> = {}) {\n    this._options = { ...defaultOptions, ...options };\n  }\n\n  /**\n   * Post-initialization of the Resizer module.\n   * when this is called, the renderer is already created, and the dom element has been appended\n   */\n  async postInitialize() {\n    this.resize();\n  }\n\n  /**\n   * Resizes the application based on window size and module options.\n   */\n\n  resize() {\n    let screenWidth = window.innerWidth;\n    let screenHeight = window.innerHeight;\n\n    const el = this.app.renderer.canvas?.parentElement;\n    const bounds = el?.getBoundingClientRect();\n\n    if (bounds) {\n      screenWidth = bounds.width;\n      screenHeight = bounds.height;\n    }\n\n    const minWidth = this._options.minSize.width;\n    const minHeight = this._options.minSize.height;\n\n    // Calculate renderer and canvas sizes based on current dimensions\n    const scaleX = screenWidth < minWidth ? minWidth / screenWidth : 1;\n    const scaleY = screenHeight < minHeight ? minHeight / screenHeight : 1;\n    const scale = scaleX > scaleY ? scaleX : scaleY;\n\n    const width = screenWidth * scale;\n    const height = screenHeight * scale;\n    // Update canvas style dimensions and scroll window up to avoid issues on mobile resize\n    this.app.renderer.canvas.style.width = `${screenWidth}px`;\n    this.app.renderer.canvas.style.height = `${screenHeight}px`;\n\n    if (this._options.autoScroll) {\n      window?.scrollTo(0, 0);\n    }\n\n    // Update renderer and navigation screens dimensions\n    this.app.renderer.resize(width, height);\n    this._size = { width, height };\n\n    if (this._options.debug) {\n      this._drawDebug();\n    }\n  }\n\n  /**\n   * Draws debug information if debug option is enabled.\n   */\n  private _drawDebug() {\n    if (!this._debugContainer) {\n      this._debugContainer = this.app.stage.addChild(new Container());\n      this._gfx = this._debugContainer.add.graphics();\n    }\n\n    this._gfx.clear();\n    this._gfx.rect(0, 0, this._size.width, this._size.height);\n    this._gfx.stroke({ width: 4, color: 0x000fff });\n  }\n}\n"],"names":["defaultOptions","ResizerPlugin","Plugin","_app","options","screenWidth","screenHeight","el","_a","bounds","minWidth","minHeight","scaleX","scaleY","scale","width","height","Container"],"mappings":";AA8BA,MAAMA,IAAuC;AAAA,EAC3C,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,SAAS,EAAE,OAAO,GAAG,QAAQ,EAAE;AAAA,EAC/B,SAAS,EAAE,OAAO,GAAG,QAAQ,EAAE;AAAA,EAC/B,OAAO;AACT;AAEO,MAAMC,UAAsBC,EAAiC;AAAA,EAA7D,cAAA;AAAA,UAAA,GAAA,SAAA,GACL,KAAgB,KAAK;AAAA,EAAA;AAAA,EAOrB,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAWC,GAAoBC,IAAyC,IAAI;AAChF,SAAK,WAAW,EAAE,GAAGJ,GAAgB,GAAGI,EAAQ;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,iBAAiB;AACrB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS;;AACP,QAAIC,IAAc,OAAO,YACrBC,IAAe,OAAO;AAE1B,UAAMC,KAAKC,IAAA,KAAK,IAAI,SAAS,WAAlB,gBAAAA,EAA0B,eAC/BC,IAASF,KAAA,gBAAAA,EAAI;AAEnB,IAAIE,MACFJ,IAAcI,EAAO,OACrBH,IAAeG,EAAO;AAGlB,UAAAC,IAAW,KAAK,SAAS,QAAQ,OACjCC,IAAY,KAAK,SAAS,QAAQ,QAGlCC,IAASP,IAAcK,IAAWA,IAAWL,IAAc,GAC3DQ,IAASP,IAAeK,IAAYA,IAAYL,IAAe,GAC/DQ,IAAQF,IAASC,IAASD,IAASC,GAEnCE,IAAQV,IAAcS,GACtBE,IAASV,IAAeQ;AAE9B,SAAK,IAAI,SAAS,OAAO,MAAM,QAAQ,GAAGT,CAAW,MACrD,KAAK,IAAI,SAAS,OAAO,MAAM,SAAS,GAAGC,CAAY,MAEnD,KAAK,SAAS,eACR,yBAAA,SAAS,GAAG,KAItB,KAAK,IAAI,SAAS,OAAOS,GAAOC,CAAM,GACjC,KAAA,QAAQ,EAAE,OAAAD,GAAO,QAAAC,EAAO,GAEzB,KAAK,SAAS,SAChB,KAAK,WAAW;AAAA,EAEpB;AAAA;AAAA;AAAA;AAAA,EAKQ,aAAa;AACf,IAAC,KAAK,oBACR,KAAK,kBAAkB,KAAK,IAAI,MAAM,SAAS,IAAIC,GAAW,GAC9D,KAAK,OAAO,KAAK,gBAAgB,IAAI,SAAS,IAGhD,KAAK,KAAK,SACL,KAAA,KAAK,KAAK,GAAG,GAAG,KAAK,MAAM,OAAO,KAAK,MAAM,MAAM,GACxD,KAAK,KAAK,OAAO,EAAE,OAAO,GAAG,OAAO,MAAU;AAAA,EAChD;AACF;"}